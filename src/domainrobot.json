{
  "swagger" : "2.0",
  "info" : {
    "description" : "Domainrobot JSON API for managing: Domains, SSL\n\t\t\t\t\t\t\t\t\t\t\tCertificates, DNS and\n\t\t\t\t\t\t\t\t\t\t\tmuch more.",
    "version" : "v1",
    "title" : "Domainrobot JSON API"
  },
  "host" : "api.autodns.com",
  "basePath" : "/v1",
  "tags" : [ {
    "name" : "BackupMx Tasks"
  }, {
    "name" : "BackupMx bulk Tasks"
  }, {
    "name" : "Certificate Tasks"
  }, {
    "name" : "Contact Tasks"
  }, {
    "name" : "ContactVerification Tasks"
  }, {
    "name" : "Document Tasks"
  }, {
    "name" : "Domain Bulk Tasks"
  }, {
    "name" : "Domain Search"
  }, {
    "name" : "Domain Tasks"
  }, {
    "name" : "Guest account tasks"
  }, {
    "name" : "Id4me agent tasks"
  }, {
    "name" : "Id4me identity tasks"
  }, {
    "name" : "Invoice Tasks"
  }, {
    "name" : "InvoiceInfo tasks"
  }, {
    "name" : "Job Tasks"
  }, {
    "name" : "MailProxy Tasks"
  }, {
    "name" : "MailProxy bulk Tasks"
  }, {
    "name" : "Poll Tasks"
  }, {
    "name" : "Redirect Tasks"
  }, {
    "name" : "Redirect bulk Tasks"
  }, {
    "name" : "Session Tasks"
  }, {
    "name" : "SslContact Tasks"
  }, {
    "name" : "Subscription Tasks"
  }, {
    "name" : "Transfer Request Tasks"
  }, {
    "name" : "TrustedApplication Tasks"
  }, {
    "name" : "User 2fa tasks"
  }, {
    "name" : "User Tasks"
  }, {
    "name" : "User verification confirm"
  }, {
    "name" : "Zone Bulk Tasks"
  }, {
    "name" : "Zone Tasks"
  }, {
    "name" : "backupMx Tasks"
  }, {
    "name" : "contactVerification history Tasks"
  } ],
  "schemes" : [ "https" ],
  "paths" : {
    "/OTPAuth" : {
      "get" : {
        "tags" : [ "User 2fa tasks" ],
        "summary" : "Gets the token-configuration of the logged in user.",
        "description" : "",
        "operationId" : "otpAuthInfo",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataOTPAuth",
              "$ref" : "#/definitions/JsonResponseDataOTPAuth"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataOTPAuth",
              "$ref" : "#/definitions/JsonResponseDataOTPAuth"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "User 2fa tasks" ],
        "summary" : "Creates a temporary token for the logged in user. The response contains the qr code as a base64 image.",
        "description" : "",
        "operationId" : "otpAuthCreate",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataOTPAuth",
              "$ref" : "#/definitions/JsonResponseDataOTPAuth"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataOTPAuth",
              "$ref" : "#/definitions/JsonResponseDataOTPAuth"
            }
          }
        }
      }
    },
    "/backupMx" : {
      "post" : {
        "tags" : [ "backupMx Tasks" ],
        "summary" : "Create BackupMx",
        "description" : "Create a new backup mx.",
        "operationId" : "backupMxCreate",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "backupMx",
          "required" : false,
          "schema" : {
            "originalRef" : "BackupMx",
            "$ref" : "#/definitions/BackupMx"
          }
        }, {
          "name" : "keys",
          "in" : "query",
          "description" : "If the dns should be provisioned if available.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "example" : "?keys[]=dnsProvisioning"
          },
          "collectionFormat" : "multi",
          "x-example" : "?keys[]=dnsProvisioning"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataJsonNoData",
              "$ref" : "#/definitions/JsonResponseDataJsonNoData"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataJsonNoData",
              "$ref" : "#/definitions/JsonResponseDataJsonNoData"
            }
          }
        }
      }
    },
    "/backupMx/_search" : {
      "post" : {
        "tags" : [ "BackupMx Tasks" ],
        "summary" : "List BackupMx",
        "description" : "Inquire a list of backup mx's with certain details. The data to be displayed can be extended per url paremeter.",
        "operationId" : "backupMxList",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "query",
          "required" : false,
          "schema" : {
            "originalRef" : "Query",
            "$ref" : "#/definitions/Query"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataBackupMx",
              "$ref" : "#/definitions/JsonResponseDataBackupMx"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataBackupMx",
              "$ref" : "#/definitions/JsonResponseDataBackupMx"
            }
          }
        }
      }
    },
    "/backupMx/{domain}" : {
      "get" : {
        "tags" : [ "BackupMx Tasks" ],
        "summary" : "Get BackupMx",
        "description" : "Inquire the data for the specified backup mx.",
        "operationId" : "backupMxInfo",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "domain",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataBackupMx",
              "$ref" : "#/definitions/JsonResponseDataBackupMx"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataBackupMx",
              "$ref" : "#/definitions/JsonResponseDataBackupMx"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "BackupMx Tasks" ],
        "summary" : "Delete BackupMx",
        "description" : "Delete an existing backup mx.",
        "operationId" : "backupMxDelete",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "domain",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "keys",
          "in" : "query",
          "description" : "If the dns should be provisioned if available.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "example" : "?keys[]=dnsProvisioning"
          },
          "collectionFormat" : "multi",
          "x-example" : "?keys[]=dnsProvisioning"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataJsonNoData",
              "$ref" : "#/definitions/JsonResponseDataJsonNoData"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataJsonNoData",
              "$ref" : "#/definitions/JsonResponseDataJsonNoData"
            }
          }
        }
      }
    },
    "/bulk/backupMx" : {
      "post" : {
        "tags" : [ "BackupMx bulk Tasks" ],
        "summary" : "Create BackupMxs",
        "description" : "Create new backupMxs.",
        "operationId" : "backupMxCreates",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "backupMxs",
          "required" : false,
          "schema" : {
            "originalRef" : "BulkBackupMxPostRequest",
            "$ref" : "#/definitions/BulkBackupMxPostRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataListJsonResponseDataBackupMx",
              "$ref" : "#/definitions/JsonResponseDataListJsonResponseDataBackupMx"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataListJsonResponseDataBackupMx",
              "$ref" : "#/definitions/JsonResponseDataListJsonResponseDataBackupMx"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "BackupMx bulk Tasks" ],
        "summary" : "Delete BackupMxs",
        "description" : "Delete existing backupMxs.",
        "operationId" : "backupMxDeletes",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "sources",
          "required" : false,
          "schema" : {
            "originalRef" : "BulkBackupMxDeleteRequest",
            "$ref" : "#/definitions/BulkBackupMxDeleteRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataListJsonResponseDataBackupMx",
              "$ref" : "#/definitions/JsonResponseDataListJsonResponseDataBackupMx"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataListJsonResponseDataBackupMx",
              "$ref" : "#/definitions/JsonResponseDataListJsonResponseDataBackupMx"
            }
          }
        }
      }
    },
    "/bulk/domain" : {
      "post" : {
        "tags" : [ "Domain Bulk Tasks" ],
        "summary" : "Create Domains",
        "description" : "Create a domain.",
        "operationId" : "domainCreates",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "domains",
          "required" : false,
          "schema" : {
            "originalRef" : "BulkDomainPostRequest",
            "$ref" : "#/definitions/BulkDomainPostRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataListJsonResponseDataDomain",
              "$ref" : "#/definitions/JsonResponseDataListJsonResponseDataDomain"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataListJsonResponseDataDomain",
              "$ref" : "#/definitions/JsonResponseDataListJsonResponseDataDomain"
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Domain Bulk Tasks" ],
        "summary" : "Update Domains",
        "description" : "Update existings domain.",
        "operationId" : "domainPatch",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "domains",
          "required" : false,
          "schema" : {
            "originalRef" : "BulkDomainPatchRequest",
            "$ref" : "#/definitions/BulkDomainPatchRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataListJsonResponseDataDomain",
              "$ref" : "#/definitions/JsonResponseDataListJsonResponseDataDomain"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataListJsonResponseDataDomain",
              "$ref" : "#/definitions/JsonResponseDataListJsonResponseDataDomain"
            }
          }
        }
      }
    },
    "/bulk/domain/_authinfo1" : {
      "post" : {
        "tags" : [ "Domain Bulk Tasks" ],
        "summary" : "Create Domain Authinfo1s",
        "description" : "Create an authinfo1 for the specified domains.",
        "operationId" : "domainAuthinfoCreate",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "domains",
          "required" : false,
          "schema" : {
            "originalRef" : "BulkDomainDeleteRequest",
            "$ref" : "#/definitions/BulkDomainDeleteRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataListJsonResponseDataDomain",
              "$ref" : "#/definitions/JsonResponseDataListJsonResponseDataDomain"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataListJsonResponseDataDomain",
              "$ref" : "#/definitions/JsonResponseDataListJsonResponseDataDomain"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Domain Bulk Tasks" ],
        "summary" : "Delete Domain Authinfo1s",
        "description" : "Delete an authinfo1 for the specified domains.",
        "operationId" : "domainAuthinfoDelete",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "domains",
          "required" : false,
          "schema" : {
            "originalRef" : "BulkDomainDeleteRequest",
            "$ref" : "#/definitions/BulkDomainDeleteRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataListJsonResponseDataDomain",
              "$ref" : "#/definitions/JsonResponseDataListJsonResponseDataDomain"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataListJsonResponseDataDomain",
              "$ref" : "#/definitions/JsonResponseDataListJsonResponseDataDomain"
            }
          }
        }
      }
    },
    "/bulk/domain/_authinfo2" : {
      "post" : {
        "tags" : [ "Domain Bulk Tasks" ],
        "summary" : "Create Domain Authinfo2s",
        "description" : "Create an authinfo2 for the specified domains.",
        "operationId" : "domainAuthinfo2Creates",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "domains",
          "required" : false,
          "schema" : {
            "originalRef" : "BulkDomainDeleteRequest",
            "$ref" : "#/definitions/BulkDomainDeleteRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataListJsonResponseDataDomain",
              "$ref" : "#/definitions/JsonResponseDataListJsonResponseDataDomain"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataListJsonResponseDataDomain",
              "$ref" : "#/definitions/JsonResponseDataListJsonResponseDataDomain"
            }
          }
        }
      }
    },
    "/bulk/domain/_buy" : {
      "post" : {
        "tags" : [ "Domain Bulk Tasks" ],
        "summary" : "Buy Domain",
        "description" : "Buy a domains.",
        "operationId" : "domainBuys",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "domains",
          "required" : false,
          "schema" : {
            "originalRef" : "BulkDomainDeleteRequest",
            "$ref" : "#/definitions/BulkDomainDeleteRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataListJsonResponseDataDomain",
              "$ref" : "#/definitions/JsonResponseDataListJsonResponseDataDomain"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataListJsonResponseDataDomain",
              "$ref" : "#/definitions/JsonResponseDataListJsonResponseDataDomain"
            }
          }
        }
      }
    },
    "/bulk/domain/_comment" : {
      "put" : {
        "tags" : [ "Domain Bulk Tasks" ],
        "summary" : "Update Domain Comment",
        "description" : "Update an existing domain.",
        "operationId" : "domainUpdateComments",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "domains",
          "required" : false,
          "schema" : {
            "originalRef" : "BulkDomainCommentRequest",
            "$ref" : "#/definitions/BulkDomainCommentRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataListJsonResponseDataDomain",
              "$ref" : "#/definitions/JsonResponseDataListJsonResponseDataDomain"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataListJsonResponseDataDomain",
              "$ref" : "#/definitions/JsonResponseDataListJsonResponseDataDomain"
            }
          }
        }
      }
    },
    "/bulk/domain/_renew" : {
      "put" : {
        "tags" : [ "Domain Bulk Tasks" ],
        "summary" : "Renew Domains",
        "description" : "Renew an existing domain.",
        "operationId" : "domainRenews",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "domains",
          "required" : false,
          "schema" : {
            "originalRef" : "BulkDomainCommentRequest",
            "$ref" : "#/definitions/BulkDomainCommentRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataListJsonResponseDataDomain",
              "$ref" : "#/definitions/JsonResponseDataListJsonResponseDataDomain"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataListJsonResponseDataDomain",
              "$ref" : "#/definitions/JsonResponseDataListJsonResponseDataDomain"
            }
          }
        }
      }
    },
    "/bulk/domain/_restore" : {
      "put" : {
        "tags" : [ "Domain Bulk Tasks" ],
        "summary" : "Restore Domains",
        "description" : "Restores an existing domain.",
        "operationId" : "domainRestores",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "domains",
          "required" : false,
          "schema" : {
            "originalRef" : "BulkDomainCommentRequest",
            "$ref" : "#/definitions/BulkDomainCommentRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataListJsonResponseDataDomain",
              "$ref" : "#/definitions/JsonResponseDataListJsonResponseDataDomain"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataListJsonResponseDataDomain",
              "$ref" : "#/definitions/JsonResponseDataListJsonResponseDataDomain"
            }
          }
        }
      }
    },
    "/bulk/domain/_transfer" : {
      "post" : {
        "tags" : [ "Domain Bulk Tasks" ],
        "summary" : "Transfer Domains",
        "description" : "Create a domain.",
        "operationId" : "domainTransfers",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "domains",
          "required" : false,
          "schema" : {
            "originalRef" : "BulkDomainPostRequest",
            "$ref" : "#/definitions/BulkDomainPostRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataListJsonResponseDataDomain",
              "$ref" : "#/definitions/JsonResponseDataListJsonResponseDataDomain"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataListJsonResponseDataDomain",
              "$ref" : "#/definitions/JsonResponseDataListJsonResponseDataDomain"
            }
          }
        }
      }
    },
    "/bulk/domain/cancelation" : {
      "post" : {
        "tags" : [ "Domain Bulk Tasks" ],
        "summary" : "Create Domain Cancelations",
        "description" : "Create a domain.",
        "operationId" : "domainCancelationCreates",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "cancelations",
          "required" : false,
          "schema" : {
            "originalRef" : "BulkDomainCancelationPostRequest",
            "$ref" : "#/definitions/BulkDomainCancelationPostRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataListJsonResponseDataDomainCancelation",
              "$ref" : "#/definitions/JsonResponseDataListJsonResponseDataDomainCancelation"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataListJsonResponseDataDomainCancelation",
              "$ref" : "#/definitions/JsonResponseDataListJsonResponseDataDomainCancelation"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Domain Bulk Tasks" ],
        "summary" : "Delete DomainCancelations",
        "description" : "Delete an existing cancelation for the specified domain.",
        "operationId" : "domainCancelationDeletes",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "cancelations",
          "required" : false,
          "schema" : {
            "originalRef" : "BulkDomainCancelationDeleteRequest",
            "$ref" : "#/definitions/BulkDomainCancelationDeleteRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataListJsonResponseDataDomainCancelation",
              "$ref" : "#/definitions/JsonResponseDataListJsonResponseDataDomainCancelation"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataListJsonResponseDataDomainCancelation",
              "$ref" : "#/definitions/JsonResponseDataListJsonResponseDataDomainCancelation"
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Domain Bulk Tasks" ],
        "summary" : "Update Domains Cancelations ",
        "description" : "Update existings domain cancelations.",
        "operationId" : "domainCancelationPatch",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "cancelations",
          "required" : false,
          "schema" : {
            "originalRef" : "BulkDomainCancelationPatchRequest",
            "$ref" : "#/definitions/BulkDomainCancelationPatchRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataListJsonResponseDataDomainCancelation",
              "$ref" : "#/definitions/JsonResponseDataListJsonResponseDataDomainCancelation"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataListJsonResponseDataDomainCancelation",
              "$ref" : "#/definitions/JsonResponseDataListJsonResponseDataDomainCancelation"
            }
          }
        }
      }
    },
    "/bulk/mailProxy" : {
      "post" : {
        "tags" : [ "MailProxy bulk Tasks" ],
        "summary" : "Create MailProxys",
        "description" : "Create new mailProxys.",
        "operationId" : "mailProxyCreates",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "mailProxys",
          "required" : false,
          "schema" : {
            "originalRef" : "BulkMailProxyPostRequest",
            "$ref" : "#/definitions/BulkMailProxyPostRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataListJsonResponseDataMailProxy",
              "$ref" : "#/definitions/JsonResponseDataListJsonResponseDataMailProxy"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataListJsonResponseDataMailProxy",
              "$ref" : "#/definitions/JsonResponseDataListJsonResponseDataMailProxy"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "MailProxy bulk Tasks" ],
        "summary" : "Delete MailProxys",
        "description" : "Delete existing mailProxys.",
        "operationId" : "mailProxyDeletes",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "sources",
          "required" : false,
          "schema" : {
            "originalRef" : "BulkMailProxyDeleteRequest",
            "$ref" : "#/definitions/BulkMailProxyDeleteRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataListJsonResponseDataMailProxy",
              "$ref" : "#/definitions/JsonResponseDataListJsonResponseDataMailProxy"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataListJsonResponseDataMailProxy",
              "$ref" : "#/definitions/JsonResponseDataListJsonResponseDataMailProxy"
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "MailProxy bulk Tasks" ],
        "summary" : "Update MailProxy",
        "description" : "Update an existing mailProxy.",
        "operationId" : "mailProxyPatch",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "sources",
          "required" : false,
          "schema" : {
            "originalRef" : "BulkMailProxyPatchRequest",
            "$ref" : "#/definitions/BulkMailProxyPatchRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataListJsonResponseDataMailProxy",
              "$ref" : "#/definitions/JsonResponseDataListJsonResponseDataMailProxy"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataListJsonResponseDataMailProxy",
              "$ref" : "#/definitions/JsonResponseDataListJsonResponseDataMailProxy"
            }
          }
        }
      }
    },
    "/bulk/redirect" : {
      "post" : {
        "tags" : [ "Redirect bulk Tasks" ],
        "summary" : "Create Redirects",
        "description" : "Create new redirects.",
        "operationId" : "redirectCreates",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "redirects",
          "required" : false,
          "schema" : {
            "originalRef" : "BulkRedirectPostRequest",
            "$ref" : "#/definitions/BulkRedirectPostRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataListJsonResponseDataRedirect",
              "$ref" : "#/definitions/JsonResponseDataListJsonResponseDataRedirect"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataListJsonResponseDataRedirect",
              "$ref" : "#/definitions/JsonResponseDataListJsonResponseDataRedirect"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Redirect bulk Tasks" ],
        "summary" : "Delete Redirects",
        "description" : "Delete existing redirects.",
        "operationId" : "redirectDeletes",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "sources",
          "required" : false,
          "schema" : {
            "originalRef" : "BulkRedirectDeleteRequest",
            "$ref" : "#/definitions/BulkRedirectDeleteRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataListJsonResponseDataRedirect",
              "$ref" : "#/definitions/JsonResponseDataListJsonResponseDataRedirect"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataListJsonResponseDataRedirect",
              "$ref" : "#/definitions/JsonResponseDataListJsonResponseDataRedirect"
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Redirect bulk Tasks" ],
        "summary" : "Update Redirect",
        "description" : "Update an existing redirect.",
        "operationId" : "redirectPatch",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "sources",
          "required" : false,
          "schema" : {
            "originalRef" : "BulkRedirectPatchRequest",
            "$ref" : "#/definitions/BulkRedirectPatchRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataListJsonResponseDataRedirect",
              "$ref" : "#/definitions/JsonResponseDataListJsonResponseDataRedirect"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataListJsonResponseDataRedirect",
              "$ref" : "#/definitions/JsonResponseDataListJsonResponseDataRedirect"
            }
          }
        }
      }
    },
    "/bulk/zone" : {
      "post" : {
        "tags" : [ "Zone Bulk Tasks" ],
        "summary" : "Create Zones",
        "description" : "Create a zone.",
        "operationId" : "zoneCreates",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "zones",
          "required" : false,
          "schema" : {
            "originalRef" : "BulkZonePostRequest",
            "$ref" : "#/definitions/BulkZonePostRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataListJsonResponseDataZone",
              "$ref" : "#/definitions/JsonResponseDataListJsonResponseDataZone"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataListJsonResponseDataZone",
              "$ref" : "#/definitions/JsonResponseDataListJsonResponseDataZone"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Zone Bulk Tasks" ],
        "summary" : "Delete Zones",
        "description" : "Delete an existing zone.",
        "operationId" : "zoneDeletes",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "zones",
          "required" : false,
          "schema" : {
            "originalRef" : "BulkZoneDeleteRequest",
            "$ref" : "#/definitions/BulkZoneDeleteRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataListJsonResponseDataZone",
              "$ref" : "#/definitions/JsonResponseDataListJsonResponseDataZone"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataListJsonResponseDataZone",
              "$ref" : "#/definitions/JsonResponseDataListJsonResponseDataZone"
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Zone Bulk Tasks" ],
        "summary" : "Update Zones",
        "description" : "Update existings zone.",
        "operationId" : "zonePatchs",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "zones",
          "required" : false,
          "schema" : {
            "originalRef" : "BulkZonePatchRequest",
            "$ref" : "#/definitions/BulkZonePatchRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataListJsonResponseDataZone",
              "$ref" : "#/definitions/JsonResponseDataListJsonResponseDataZone"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataListJsonResponseDataZone",
              "$ref" : "#/definitions/JsonResponseDataListJsonResponseDataZone"
            }
          }
        }
      }
    },
    "/bulk/zone/_comment" : {
      "put" : {
        "tags" : [ "Zone Bulk Tasks" ],
        "summary" : "Update Zone Comment",
        "description" : "Update an existing zone.",
        "operationId" : "zoneUpdateComments",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "zones",
          "required" : false,
          "schema" : {
            "originalRef" : "BulkZoneCommentRequest",
            "$ref" : "#/definitions/BulkZoneCommentRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataListJsonResponseDataZone",
              "$ref" : "#/definitions/JsonResponseDataListJsonResponseDataZone"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataListJsonResponseDataZone",
              "$ref" : "#/definitions/JsonResponseDataListJsonResponseDataZone"
            }
          }
        }
      }
    },
    "/bulk/zone/_import" : {
      "post" : {
        "tags" : [ "Zone Bulk Tasks" ],
        "summary" : "Import Zones",
        "description" : "Import the specified zone.",
        "operationId" : "zoneImports",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "zones",
          "required" : false,
          "schema" : {
            "originalRef" : "BulkZonePostRequest",
            "$ref" : "#/definitions/BulkZonePostRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataListJsonResponseDataZone",
              "$ref" : "#/definitions/JsonResponseDataListJsonResponseDataZone"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataListJsonResponseDataZone",
              "$ref" : "#/definitions/JsonResponseDataListJsonResponseDataZone"
            }
          }
        }
      }
    },
    "/certificate" : {
      "post" : {
        "tags" : [ "Certificate Tasks" ],
        "summary" : "Create Certificate",
        "description" : "Order a new certificate. The operation is asynchronous and creates a job.",
        "operationId" : "certificateCreate",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "certificate",
          "required" : false,
          "schema" : {
            "originalRef" : "Certificate",
            "$ref" : "#/definitions/Certificate"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataObjectJob",
              "$ref" : "#/definitions/JsonResponseDataObjectJob"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataObjectJob",
              "$ref" : "#/definitions/JsonResponseDataObjectJob"
            }
          }
        }
      }
    },
    "/certificate/_prepareOrder" : {
      "post" : {
        "tags" : [ "Certificate Tasks" ],
        "summary" : "Prepare certificate order",
        "description" : "Prepare a certificate order. This call checks the csr and generates authentication data required for further calls like order, renew, reissue, revoke, delete.",
        "operationId" : "certificatePrepareOrder",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "certificateData",
          "required" : false,
          "schema" : {
            "originalRef" : "CertificateData",
            "$ref" : "#/definitions/CertificateData"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataCertificateData",
              "$ref" : "#/definitions/JsonResponseDataCertificateData"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataCertificateData",
              "$ref" : "#/definitions/JsonResponseDataCertificateData"
            }
          }
        }
      }
    },
    "/certificate/_search" : {
      "post" : {
        "tags" : [ "Certificate Tasks" ],
        "summary" : "List Certificates",
        "description" : "Inquire a list of certificates with certain details. The data to be displayed can be extended per url paremeter.",
        "operationId" : "certificateList",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "query",
          "required" : false,
          "schema" : {
            "originalRef" : "Query",
            "$ref" : "#/definitions/Query"
          }
        }, {
          "name" : "keys",
          "in" : "query",
          "description" : "The query parameter to fetch additional details.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "example" : "?keys[]=comment",
            "enum" : [ "{comment", "type", "certificate_type}" ]
          },
          "collectionFormat" : "multi",
          "x-example" : "?keys[]=comment"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataCertificate",
              "$ref" : "#/definitions/JsonResponseDataCertificate"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataCertificate",
              "$ref" : "#/definitions/JsonResponseDataCertificate"
            }
          }
        }
      }
    },
    "/certificate/{id}" : {
      "get" : {
        "tags" : [ "Certificate Tasks" ],
        "summary" : "Get Certificate",
        "description" : "Inquire the data for the specified certificate.",
        "operationId" : "certificateinfo",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataCertificate",
              "$ref" : "#/definitions/JsonResponseDataCertificate"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataCertificate",
              "$ref" : "#/definitions/JsonResponseDataCertificate"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Certificate Tasks" ],
        "summary" : "Reissue Certificate",
        "description" : "Reissue an existing certificate. The operation is asynchronous and creates a job.",
        "operationId" : "certificateReissue",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "certificate",
          "required" : false,
          "schema" : {
            "originalRef" : "Certificate",
            "$ref" : "#/definitions/Certificate"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataObjectJob",
              "$ref" : "#/definitions/JsonResponseDataObjectJob"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataObjectJob",
              "$ref" : "#/definitions/JsonResponseDataObjectJob"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Certificate Tasks" ],
        "summary" : "Delete Certificate",
        "description" : "Delete an existing certificate. The operation is asynchronous and creates a job.",
        "operationId" : "certificateDelete",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataObjectJob",
              "$ref" : "#/definitions/JsonResponseDataObjectJob"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataObjectJob",
              "$ref" : "#/definitions/JsonResponseDataObjectJob"
            }
          }
        }
      }
    },
    "/certificate/{id}/_comment" : {
      "put" : {
        "tags" : [ "Certificate Tasks" ],
        "summary" : "Update Certificate Comment",
        "description" : "Update a comment for an existing certificate.",
        "operationId" : "certificateCommentUpdate",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "certificate",
          "required" : false,
          "schema" : {
            "originalRef" : "Certificate",
            "$ref" : "#/definitions/Certificate"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataVoid",
              "$ref" : "#/definitions/JsonResponseDataVoid"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataVoid",
              "$ref" : "#/definitions/JsonResponseDataVoid"
            }
          }
        }
      }
    },
    "/certificate/{id}/_renew" : {
      "put" : {
        "tags" : [ "Certificate Tasks" ],
        "summary" : "Renew Certificate",
        "description" : "Renew an existing certificate. The operation is asynchronous and creates a job.",
        "operationId" : "certificateRenew",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "certificate",
          "required" : false,
          "schema" : {
            "originalRef" : "Certificate",
            "$ref" : "#/definitions/Certificate"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataObjectJob",
              "$ref" : "#/definitions/JsonResponseDataObjectJob"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataObjectJob",
              "$ref" : "#/definitions/JsonResponseDataObjectJob"
            }
          }
        }
      }
    },
    "/certificate/{id}/_revoke" : {
      "delete" : {
        "tags" : [ "Certificate Tasks" ],
        "summary" : "Revoke Certificate",
        "description" : "Revoke an existing certificate. The operation is asynchronous and creates a job.",
        "operationId" : "certificateRevoke",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "certificate",
          "required" : false,
          "schema" : {
            "originalRef" : "Certificate",
            "$ref" : "#/definitions/Certificate"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataObjectJob",
              "$ref" : "#/definitions/JsonResponseDataObjectJob"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataObjectJob",
              "$ref" : "#/definitions/JsonResponseDataObjectJob"
            }
          }
        }
      }
    },
    "/contact" : {
      "post" : {
        "tags" : [ "Contact Tasks" ],
        "summary" : "Create Contact",
        "description" : "Create a new domain contact.",
        "operationId" : "contactCreate",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "contact",
          "required" : false,
          "schema" : {
            "originalRef" : "Contact",
            "$ref" : "#/definitions/Contact"
          },
          "x-examples" : {
            "application/json" : "{\n  \"alias\": \"John-Doe-1\",\n  \"type\": \"PERSON\",\n  \"organization\": \"Company\",\n  \"title\": \"Dr.\",\n  \"city\": \"Anytown\",\n  \"country\": \"DE\",\n  \"state\": \"BY\",\n  \"email\": \"john.doe@domain.com\",\n  \"fname\": \"John\",\n  \"lname\": \"Doe\",\n  \"address\": [\n    \"addbfdgfdgfdress\"\n  ],\n  \"pcode\": \"12345\",\n  \"phone\": \"+49-123-12345\",\n  \"fax\": \"+49-123-12345\"\n}"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataContact",
              "$ref" : "#/definitions/JsonResponseDataContact"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataContact",
              "$ref" : "#/definitions/JsonResponseDataContact"
            }
          }
        }
      }
    },
    "/contact/_search" : {
      "post" : {
        "tags" : [ "Contact Tasks" ],
        "summary" : "List Contact",
        "description" : "Inquire a list of contacts with certain details. The data to be displayed can be extended per url paremeter.",
        "operationId" : "contactList",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "query",
          "required" : false,
          "schema" : {
            "originalRef" : "Query",
            "$ref" : "#/definitions/Query"
          }
        }, {
          "name" : "keys",
          "in" : "query",
          "description" : "The query parameter to fetch additional details.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "example" : "?keys[]=email",
            "enum" : [ "{email", "sip", "remarks", "domainsafe", "comment}" ]
          },
          "collectionFormat" : "multi",
          "x-example" : "?keys[]=email"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataContact",
              "$ref" : "#/definitions/JsonResponseDataContact"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataContact",
              "$ref" : "#/definitions/JsonResponseDataContact"
            }
          }
        }
      }
    },
    "/contact/verification/_search" : {
      "post" : {
        "tags" : [ "ContactVerification Tasks" ],
        "summary" : "List ContactVerification",
        "description" : "Inquire a list of contactVerifications with certain details. The data to be displayed can be extended per url paremeter.",
        "operationId" : "verificationList",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "query",
          "required" : false,
          "schema" : {
            "originalRef" : "Query",
            "$ref" : "#/definitions/Query"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataHandleVerification",
              "$ref" : "#/definitions/JsonResponseDataHandleVerification"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataHandleVerification",
              "$ref" : "#/definitions/JsonResponseDataHandleVerification"
            }
          }
        }
      }
    },
    "/contact/verification/history/_search" : {
      "post" : {
        "tags" : [ "contactVerification history Tasks" ],
        "summary" : "List history contactVerifications",
        "description" : "Inquire a list of history verifications with certain details.",
        "operationId" : "verificationHistoryList",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "query",
          "required" : false,
          "schema" : {
            "originalRef" : "Query",
            "$ref" : "#/definitions/Query"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataHandleVerification",
              "$ref" : "#/definitions/JsonResponseDataHandleVerification"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataHandleVerification",
              "$ref" : "#/definitions/JsonResponseDataHandleVerification"
            }
          }
        }
      }
    },
    "/contact/verification/{handle_id}" : {
      "post" : {
        "tags" : [ "ContactVerification Tasks" ],
        "summary" : "Create ContactVerification",
        "description" : "Create a new contact verification.",
        "operationId" : "verificationCreate",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "contactVerification",
          "required" : false,
          "schema" : {
            "originalRef" : "HandleVerification",
            "$ref" : "#/definitions/HandleVerification"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataHandleVerification",
              "$ref" : "#/definitions/JsonResponseDataHandleVerification"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataHandleVerification",
              "$ref" : "#/definitions/JsonResponseDataHandleVerification"
            }
          }
        }
      }
    },
    "/contact/verification/{reference}" : {
      "get" : {
        "tags" : [ "ContactVerification Tasks" ],
        "summary" : "Get ContactVerification",
        "description" : "Inquire the data for the specified verification.",
        "operationId" : "verificationInfo",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "reference",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataHandleVerification",
              "$ref" : "#/definitions/JsonResponseDataHandleVerification"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataHandleVerification",
              "$ref" : "#/definitions/JsonResponseDataHandleVerification"
            }
          }
        }
      }
    },
    "/contact/verification/{reference}/_confirm" : {
      "put" : {
        "tags" : [ "ContactVerification Tasks" ],
        "summary" : "confirm ContactVerification",
        "description" : "confirm an existing verification.",
        "operationId" : "verificationConfirm",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "contactVerification",
          "required" : false,
          "schema" : {
            "originalRef" : "HandleVerification",
            "$ref" : "#/definitions/HandleVerification"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataHandleVerification",
              "$ref" : "#/definitions/JsonResponseDataHandleVerification"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataHandleVerification",
              "$ref" : "#/definitions/JsonResponseDataHandleVerification"
            }
          }
        }
      }
    },
    "/contact/verification/{reference}/_resendEmail" : {
      "put" : {
        "tags" : [ "ContactVerification Tasks" ],
        "summary" : "resendEmail ContactVerification",
        "description" : "confirm an existing verification.",
        "operationId" : "verificationResendEmail",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "contactVerification",
          "required" : false,
          "schema" : {
            "originalRef" : "HandleVerification",
            "$ref" : "#/definitions/HandleVerification"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataHandleVerification",
              "$ref" : "#/definitions/JsonResponseDataHandleVerification"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataHandleVerification",
              "$ref" : "#/definitions/JsonResponseDataHandleVerification"
            }
          }
        }
      }
    },
    "/contact/{id}" : {
      "get" : {
        "tags" : [ "Contact Tasks" ],
        "summary" : "Get Contact",
        "description" : "Inquire the data for the specified domain contact.",
        "operationId" : "contactInfo",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataContact",
              "$ref" : "#/definitions/JsonResponseDataContact"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataContact",
              "$ref" : "#/definitions/JsonResponseDataContact"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Contact Tasks" ],
        "summary" : "Update Contact",
        "description" : "Update an existing domain contact.",
        "operationId" : "contactUpdate",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "contact",
          "required" : false,
          "schema" : {
            "originalRef" : "Contact",
            "$ref" : "#/definitions/Contact"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataContact",
              "$ref" : "#/definitions/JsonResponseDataContact"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataContact",
              "$ref" : "#/definitions/JsonResponseDataContact"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Contact Tasks" ],
        "summary" : "Delete Contact",
        "description" : "Delete an existing domain contact.",
        "operationId" : "contactDelete",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataJsonNoData",
              "$ref" : "#/definitions/JsonResponseDataJsonNoData"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataJsonNoData",
              "$ref" : "#/definitions/JsonResponseDataJsonNoData"
            }
          }
        }
      }
    },
    "/contact/{id}/_comment" : {
      "put" : {
        "tags" : [ "Certificate Tasks" ],
        "summary" : "Update Certificate Comment",
        "description" : "Update a comment for an existing certificate.",
        "operationId" : "contcatCommentUpdate",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "contact",
          "required" : false,
          "schema" : {
            "originalRef" : "Contact",
            "$ref" : "#/definitions/Contact"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataVoid",
              "$ref" : "#/definitions/JsonResponseDataVoid"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataVoid",
              "$ref" : "#/definitions/JsonResponseDataVoid"
            }
          }
        }
      }
    },
    "/document/{alias}" : {
      "get" : {
        "tags" : [ "Document Tasks" ],
        "summary" : "Get Document",
        "description" : "Fetch the document for the given alias. The alias can be an ID, UUID or a script name like pricelist.xml.",
        "operationId" : "documentInfoWithAlias",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "alias",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataBasicDocument",
              "$ref" : "#/definitions/JsonResponseDataBasicDocument"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataBasicDocument",
              "$ref" : "#/definitions/JsonResponseDataBasicDocument"
            }
          }
        }
      }
    },
    "/domain" : {
      "post" : {
        "tags" : [ "Domain Tasks" ],
        "summary" : "Create Domain",
        "description" : "Order a new domain. The operation is asynchronous and creates a job.",
        "operationId" : "domainCreate",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "domain",
          "required" : false,
          "schema" : {
            "originalRef" : "Domain",
            "$ref" : "#/definitions/Domain"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataObjectJob",
              "$ref" : "#/definitions/JsonResponseDataObjectJob"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataObjectJob",
              "$ref" : "#/definitions/JsonResponseDataObjectJob"
            }
          }
        }
      }
    },
    "/domain/_buy" : {
      "post" : {
        "tags" : [ "Domain Tasks" ],
        "summary" : "Buy a domain from the premium market",
        "description" : "Buy a domain from the premium market. The operation is asynchronous and creates a job.",
        "operationId" : "domainBuy",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "domain",
          "required" : false,
          "schema" : {
            "originalRef" : "Domain",
            "$ref" : "#/definitions/Domain"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataObjectJob",
              "$ref" : "#/definitions/JsonResponseDataObjectJob"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataObjectJob",
              "$ref" : "#/definitions/JsonResponseDataObjectJob"
            }
          }
        }
      }
    },
    "/domain/_search" : {
      "post" : {
        "tags" : [ "Domain Tasks" ],
        "summary" : "List Domains",
        "description" : "Inquire a list of domains with certain details. The data to be displayed can be extended per url paremeter.",
        "operationId" : "domainList",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "query",
          "required" : false,
          "schema" : {
            "originalRef" : "Query",
            "$ref" : "#/definitions/Query"
          }
        }, {
          "name" : "keys",
          "in" : "query",
          "description" : "The query parameter to fetch additional details.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "example" : "?keys[]=expire",
            "enum" : [ "{expire}" ]
          },
          "collectionFormat" : "multi",
          "x-example" : "?keys[]=expire"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataDomain",
              "$ref" : "#/definitions/JsonResponseDataDomain"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataDomain",
              "$ref" : "#/definitions/JsonResponseDataDomain"
            }
          }
        }
      }
    },
    "/domain/_services" : {
      "put" : {
        "tags" : [ "Domain Tasks" ],
        "summary" : "Update Domain Services",
        "description" : "Update the services of a domain.",
        "operationId" : "domainServicesUpdate",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "services",
          "required" : false,
          "schema" : {
            "originalRef" : "DomainServicesUpdate",
            "$ref" : "#/definitions/DomainServicesUpdate"
          }
        }, {
          "name" : "keys",
          "in" : "query",
          "description" : "If the dns should be provisioned if available.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "example" : "?keys[]=dnsProvisioning"
          },
          "collectionFormat" : "multi",
          "x-example" : "?keys[]=dnsProvisioning"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataJsonNoData",
              "$ref" : "#/definitions/JsonResponseDataJsonNoData"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataJsonNoData",
              "$ref" : "#/definitions/JsonResponseDataJsonNoData"
            }
          }
        }
      }
    },
    "/domain/_transfer" : {
      "post" : {
        "tags" : [ "Domain Tasks" ],
        "summary" : "Transfer Domain",
        "description" : "Transfer a domain. The operation is asynchronous and creates a job.",
        "operationId" : "domainTransfer",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "domain",
          "required" : false,
          "schema" : {
            "originalRef" : "Domain",
            "$ref" : "#/definitions/Domain"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataObjectJob",
              "$ref" : "#/definitions/JsonResponseDataObjectJob"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataObjectJob",
              "$ref" : "#/definitions/JsonResponseDataObjectJob"
            }
          }
        }
      }
    },
    "/domain/cancelation/_search" : {
      "post" : {
        "tags" : [ "Domain Tasks" ],
        "summary" : "List cancelation Domains",
        "description" : "Inquire a list of cancelations with certain details. The data to be displayed can be extended per url paremeter.",
        "operationId" : "domainCancelationList",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "query",
          "required" : false,
          "schema" : {
            "originalRef" : "Query",
            "$ref" : "#/definitions/Query"
          }
        }, {
          "name" : "keys",
          "in" : "query",
          "description" : "The query parameter to fetch additional details.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "example" : "?keys[]=expire",
            "enum" : [ "{expire}" ]
          },
          "collectionFormat" : "multi",
          "x-example" : "?keys[]=expire"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataDomainCancelation",
              "$ref" : "#/definitions/JsonResponseDataDomainCancelation"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataDomainCancelation",
              "$ref" : "#/definitions/JsonResponseDataDomainCancelation"
            }
          }
        }
      }
    },
    "/domain/restore/_search" : {
      "post" : {
        "tags" : [ "Domain Tasks" ],
        "summary" : "List restore Domains",
        "description" : "Inquire a list of restorable domains with certain details. The data to be displayed can be extended per url paremeter.",
        "operationId" : "domainRestoreList",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "query",
          "required" : false,
          "schema" : {
            "originalRef" : "Query",
            "$ref" : "#/definitions/Query"
          }
        }, {
          "name" : "keys",
          "in" : "query",
          "description" : "The query parameter to fetch additional details.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "example" : "?keys[]=expire",
            "enum" : [ "{expire}" ]
          },
          "collectionFormat" : "multi",
          "x-example" : "?keys[]=expire"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataDomainRestore",
              "$ref" : "#/definitions/JsonResponseDataDomainRestore"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataDomainRestore",
              "$ref" : "#/definitions/JsonResponseDataDomainRestore"
            }
          }
        }
      }
    },
    "/domain/{name}" : {
      "get" : {
        "tags" : [ "Domain Tasks" ],
        "summary" : "Get Domain",
        "description" : "Fetch the data for the specified domain.",
        "operationId" : "domainInfo",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataDomain",
              "$ref" : "#/definitions/JsonResponseDataDomain"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataDomain",
              "$ref" : "#/definitions/JsonResponseDataDomain"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Domain Tasks" ],
        "summary" : "Update Domain",
        "description" : "Update an existing domain. The operation is asynchronous and creates a job.",
        "operationId" : "domainUpdate",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "domain",
          "required" : false,
          "schema" : {
            "originalRef" : "Domain",
            "$ref" : "#/definitions/Domain"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataObjectJob",
              "$ref" : "#/definitions/JsonResponseDataObjectJob"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataObjectJob",
              "$ref" : "#/definitions/JsonResponseDataObjectJob"
            }
          }
        }
      }
    },
    "/domain/{name}/_authinfo1" : {
      "post" : {
        "tags" : [ "Domain Tasks" ],
        "summary" : "Create Domain Authinfo1",
        "description" : "Create an authinfo1 for the specified domain.",
        "operationId" : "domainAuthinfo1Create",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataDomain",
              "$ref" : "#/definitions/JsonResponseDataDomain"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataDomain",
              "$ref" : "#/definitions/JsonResponseDataDomain"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Domain Tasks" ],
        "summary" : "Delete DomainAuthinfo1",
        "description" : "Delete an existing authinfo1 for the specified domain.",
        "operationId" : "domainAuthinfo1Delete",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataJsonNoData",
              "$ref" : "#/definitions/JsonResponseDataJsonNoData"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataJsonNoData",
              "$ref" : "#/definitions/JsonResponseDataJsonNoData"
            }
          }
        }
      }
    },
    "/domain/{name}/_authinfo2" : {
      "post" : {
        "tags" : [ "Domain Tasks" ],
        "summary" : "Create Domain Authinfo2",
        "description" : "Create an authinfo2 for the specified domain.",
        "operationId" : "domainAuthinfo2Create",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataJsonNoData",
              "$ref" : "#/definitions/JsonResponseDataJsonNoData"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataJsonNoData",
              "$ref" : "#/definitions/JsonResponseDataJsonNoData"
            }
          }
        }
      }
    },
    "/domain/{name}/_autoDnssecKeyRollover" : {
      "put" : {
        "tags" : [ "Domain Tasks" ],
        "summary" : "Invokes an autodnssec key rollover for the requested domain.",
        "description" : "Invokes an autodnssec key rollover. Note the autodnssec feature must be enabled for the domain",
        "operationId" : "autoDnssecKeyRollover",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataVoid",
              "$ref" : "#/definitions/JsonResponseDataVoid"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataVoid",
              "$ref" : "#/definitions/JsonResponseDataVoid"
            }
          }
        }
      }
    },
    "/domain/{name}/_comment" : {
      "put" : {
        "tags" : [ "Domain Tasks" ],
        "summary" : "Update Domain Comment",
        "description" : "Update a comment for an existing domain.",
        "operationId" : "domainCommentUpdate",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "domain",
          "required" : false,
          "schema" : {
            "originalRef" : "Domain",
            "$ref" : "#/definitions/Domain"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataJsonNoData",
              "$ref" : "#/definitions/JsonResponseDataJsonNoData"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataJsonNoData",
              "$ref" : "#/definitions/JsonResponseDataJsonNoData"
            }
          }
        }
      }
    },
    "/domain/{name}/_renew" : {
      "put" : {
        "tags" : [ "Domain Tasks" ],
        "summary" : "Renew Domain",
        "description" : "Renews an existing domain.  The operation is asynchronous and creates a job.",
        "operationId" : "domainRenew",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "domain",
          "required" : false,
          "schema" : {
            "originalRef" : "Domain",
            "$ref" : "#/definitions/Domain"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataObjectJob",
              "$ref" : "#/definitions/JsonResponseDataObjectJob"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataObjectJob",
              "$ref" : "#/definitions/JsonResponseDataObjectJob"
            }
          }
        }
      }
    },
    "/domain/{name}/_restore" : {
      "put" : {
        "tags" : [ "Domain Tasks" ],
        "summary" : "Restore Domain",
        "description" : "Restore an existing domain.",
        "operationId" : "domainRestore",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "domain",
          "required" : false,
          "schema" : {
            "originalRef" : "DomainRestore",
            "$ref" : "#/definitions/DomainRestore"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataObjectJob",
              "$ref" : "#/definitions/JsonResponseDataObjectJob"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataObjectJob",
              "$ref" : "#/definitions/JsonResponseDataObjectJob"
            }
          }
        }
      }
    },
    "/domain/{name}/_statusUpdate" : {
      "put" : {
        "tags" : [ "Domain Tasks" ],
        "summary" : "Update Domain Status",
        "description" : "Update the registry status for an existing domain.",
        "operationId" : "domainStatusUpdate",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "domain",
          "required" : false,
          "schema" : {
            "originalRef" : "Domain",
            "$ref" : "#/definitions/Domain"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataJsonNoData",
              "$ref" : "#/definitions/JsonResponseDataJsonNoData"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataJsonNoData",
              "$ref" : "#/definitions/JsonResponseDataJsonNoData"
            }
          }
        }
      }
    },
    "/domain/{name}/cancelation" : {
      "get" : {
        "tags" : [ "Domain Tasks" ],
        "summary" : "Get DomainCancelation",
        "description" : "Fetch the cancelation data for the specified domain.",
        "operationId" : "domainCancelationInfo",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataDomainCancelation",
              "$ref" : "#/definitions/JsonResponseDataDomainCancelation"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataDomainCancelation",
              "$ref" : "#/definitions/JsonResponseDataDomainCancelation"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Domain Tasks" ],
        "summary" : "Create Domain Cancelation",
        "description" : "Create a cancelation for the specified domain.",
        "operationId" : "domainCancelationCreate",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "domain",
          "required" : false,
          "schema" : {
            "originalRef" : "DomainCancelation",
            "$ref" : "#/definitions/DomainCancelation"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataDomainCancelation",
              "$ref" : "#/definitions/JsonResponseDataDomainCancelation"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataDomainCancelation",
              "$ref" : "#/definitions/JsonResponseDataDomainCancelation"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Domain Tasks" ],
        "summary" : "Update DomainCancelation",
        "description" : "Update an existing cancelation for the specified domain.",
        "operationId" : "domainCancelationUpdate",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "domain",
          "required" : false,
          "schema" : {
            "originalRef" : "DomainCancelation",
            "$ref" : "#/definitions/DomainCancelation"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataDomainCancelation",
              "$ref" : "#/definitions/JsonResponseDataDomainCancelation"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataDomainCancelation",
              "$ref" : "#/definitions/JsonResponseDataDomainCancelation"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Domain Tasks" ],
        "summary" : "Delete DomainCancelation",
        "description" : "Delete an existing cancelation for the specified domain.",
        "operationId" : "domainCancelationDelete",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataJsonNoData",
              "$ref" : "#/definitions/JsonResponseDataJsonNoData"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataJsonNoData",
              "$ref" : "#/definitions/JsonResponseDataJsonNoData"
            }
          }
        }
      }
    },
    "/domainstudio" : {
      "post" : {
        "tags" : [ "Domain Search" ],
        "summary" : "Powerful search api for free domains, premium domains and alternate domain names.",
        "description" : "Configurable search results",
        "operationId" : "domainSearch",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "search",
          "required" : false,
          "schema" : {
            "originalRef" : "DomainEnvelopeSearchRequest",
            "$ref" : "#/definitions/DomainEnvelopeSearchRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataDomainEnvelope",
              "$ref" : "#/definitions/JsonResponseDataDomainEnvelope"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataDomainEnvelope",
              "$ref" : "#/definitions/JsonResponseDataDomainEnvelope"
            }
          }
        }
      }
    },
    "/id4MeAgent" : {
      "post" : {
        "tags" : [ "Id4me agent tasks" ],
        "summary" : "Creates a new id4me agent. Not available yet ... coming soon!",
        "description" : "Creates a new id4me agent",
        "operationId" : "createId4MeAgent",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "agent",
          "required" : false,
          "schema" : {
            "originalRef" : "Id4MeAgent",
            "$ref" : "#/definitions/Id4MeAgent"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataId4MeAgent",
              "$ref" : "#/definitions/JsonResponseDataId4MeAgent"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataId4MeAgent",
              "$ref" : "#/definitions/JsonResponseDataId4MeAgent"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Id4me agent tasks" ],
        "summary" : "Updates an existing id4me agent. Not available yet ... coming soon!",
        "description" : "Updates an existing id4me agent",
        "operationId" : "updateId4MeAgent",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "agent",
          "required" : false,
          "schema" : {
            "originalRef" : "Id4MeAgent",
            "$ref" : "#/definitions/Id4MeAgent"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataId4MeAgent",
              "$ref" : "#/definitions/JsonResponseDataId4MeAgent"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataId4MeAgent",
              "$ref" : "#/definitions/JsonResponseDataId4MeAgent"
            }
          }
        }
      }
    },
    "/id4MeAgent/_search" : {
      "post" : {
        "tags" : [ "Id4me agent tasks" ],
        "summary" : "Id4me agent list task. Not available yet ... coming soon!",
        "description" : "Inquire a list of id4Me agents with certain details.",
        "operationId" : "id4MeAgentList",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "query",
          "required" : false,
          "schema" : {
            "originalRef" : "Query",
            "$ref" : "#/definitions/Query"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataId4meIdentity",
              "$ref" : "#/definitions/JsonResponseDataId4meIdentity"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataId4meIdentity",
              "$ref" : "#/definitions/JsonResponseDataId4meIdentity"
            }
          }
        }
      }
    },
    "/id4MeAgent/{name}" : {
      "get" : {
        "tags" : [ "Id4me agent tasks" ],
        "summary" : "Get an id4me agent. Not available yet ... coming soon!",
        "description" : "Fetch the data for the specified name.",
        "operationId" : "id4MeAgentInfo",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataId4meIdentity",
              "$ref" : "#/definitions/JsonResponseDataId4meIdentity"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataId4meIdentity",
              "$ref" : "#/definitions/JsonResponseDataId4meIdentity"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Id4me agent tasks" ],
        "summary" : "Deletes an existing id4me agent. Not available yet ... coming soon!",
        "description" : "Deletes an existing id4me agent",
        "operationId" : "deleteId4MeAgent",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataJsonNoData",
              "$ref" : "#/definitions/JsonResponseDataJsonNoData"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataJsonNoData",
              "$ref" : "#/definitions/JsonResponseDataJsonNoData"
            }
          }
        }
      }
    },
    "/id4MeIdentity" : {
      "post" : {
        "tags" : [ "Id4me identity tasks" ],
        "summary" : "Creates a new id4me identity. Not available yet ... coming soon!",
        "description" : "Creates a new id4me identity",
        "operationId" : "createId4MeIdentity",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "identity",
          "required" : false,
          "schema" : {
            "originalRef" : "Id4meIdentity",
            "$ref" : "#/definitions/Id4meIdentity"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataId4meIdentity",
              "$ref" : "#/definitions/JsonResponseDataId4meIdentity"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataId4meIdentity",
              "$ref" : "#/definitions/JsonResponseDataId4meIdentity"
            }
          }
        }
      }
    },
    "/id4MeIdentity/_search" : {
      "post" : {
        "tags" : [ "Id4me identity tasks" ],
        "summary" : "Id4me identity list task. Not available yet ... coming soon!",
        "description" : "Inquire a list of id4me identities with certain details.",
        "operationId" : "id4MeIdentityList",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "query",
          "required" : false,
          "schema" : {
            "originalRef" : "Query",
            "$ref" : "#/definitions/Query"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataId4meIdentity",
              "$ref" : "#/definitions/JsonResponseDataId4meIdentity"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataId4meIdentity",
              "$ref" : "#/definitions/JsonResponseDataId4meIdentity"
            }
          }
        }
      }
    },
    "/id4MeIdentity/{name}" : {
      "get" : {
        "tags" : [ "Id4me identity tasks" ],
        "summary" : "Get an id4me identity. Not available yet ... coming soon!",
        "description" : "Fetch the data for the specified name.",
        "operationId" : "id4MeIdentityInfo",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataId4meIdentity",
              "$ref" : "#/definitions/JsonResponseDataId4meIdentity"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataId4meIdentity",
              "$ref" : "#/definitions/JsonResponseDataId4meIdentity"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Id4me identity tasks" ],
        "summary" : "Deletes an existing id4me identity. Not available yet ... coming soon!",
        "description" : "Deletes an existing id4me identity",
        "operationId" : "deleteId4MeIdentity",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataJsonNoData",
              "$ref" : "#/definitions/JsonResponseDataJsonNoData"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataJsonNoData",
              "$ref" : "#/definitions/JsonResponseDataJsonNoData"
            }
          }
        }
      }
    },
    "/id4MeIdentity/{name}/_confirm" : {
      "put" : {
        "tags" : [ "Id4me identity tasks" ],
        "summary" : "Confirms an existing id4me identity. Not available yet ... coming soon!",
        "description" : "Confirms an existing id4me identity",
        "operationId" : "confirmId4MeIdentity",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataId4meIdentity",
              "$ref" : "#/definitions/JsonResponseDataId4meIdentity"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataId4meIdentity",
              "$ref" : "#/definitions/JsonResponseDataId4meIdentity"
            }
          }
        }
      }
    },
    "/invoice/_search" : {
      "post" : {
        "tags" : [ "Invoice Tasks" ],
        "summary" : "List Invoice",
        "description" : "Inquire a list of invoices with certain details. The data to be displayed can be extended per url paremeter.",
        "operationId" : "InvoiceList",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "query",
          "required" : false,
          "schema" : {
            "originalRef" : "Query",
            "$ref" : "#/definitions/Query"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataInvoice",
              "$ref" : "#/definitions/JsonResponseDataInvoice"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataInvoice",
              "$ref" : "#/definitions/JsonResponseDataInvoice"
            }
          }
        }
      }
    },
    "/invoice/{id}" : {
      "get" : {
        "tags" : [ "InvoiceInfo tasks" ],
        "summary" : "Get Invoice",
        "description" : "Inquire the data for the specified Invoice.",
        "operationId" : "InvoiceInfo",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataInvoice",
              "$ref" : "#/definitions/JsonResponseDataInvoice"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataInvoice",
              "$ref" : "#/definitions/JsonResponseDataInvoice"
            }
          }
        }
      }
    },
    "/job/_search" : {
      "post" : {
        "tags" : [ "Job Tasks" ],
        "summary" : "List Jobs",
        "description" : "Inquire a list of jobs with certain details.",
        "operationId" : "jobList",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "query",
          "required" : false,
          "schema" : {
            "originalRef" : "Query",
            "$ref" : "#/definitions/Query"
          }
        }, {
          "name" : "keys",
          "in" : "query",
          "description" : "The query parameter to fetch additional details.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "example" : "?keys[]=type",
            "enum" : [ "{type", "owner", "updater}" ]
          },
          "collectionFormat" : "multi",
          "x-example" : "?keys[]=type"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataObjectJob",
              "$ref" : "#/definitions/JsonResponseDataObjectJob"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataObjectJob",
              "$ref" : "#/definitions/JsonResponseDataObjectJob"
            }
          }
        }
      }
    },
    "/job/history/_search" : {
      "post" : {
        "tags" : [ "Job Tasks" ],
        "summary" : "List history jobs",
        "description" : "Inquire a list of finished jobs with certain details.",
        "operationId" : "jobHistoryList",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "query",
          "required" : false,
          "schema" : {
            "originalRef" : "Query",
            "$ref" : "#/definitions/Query"
          }
        }, {
          "name" : "keys",
          "in" : "query",
          "description" : "The query parameter to fetch additional details.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "example" : "?keys[]=type",
            "enum" : [ "{type", "owner", "updater}" ]
          },
          "collectionFormat" : "multi",
          "x-example" : "?keys[]=type"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataObjectJob",
              "$ref" : "#/definitions/JsonResponseDataObjectJob"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataObjectJob",
              "$ref" : "#/definitions/JsonResponseDataObjectJob"
            }
          }
        }
      }
    },
    "/job/history/{id}" : {
      "get" : {
        "tags" : [ "Job Tasks" ],
        "summary" : "Get history job",
        "description" : "Inquire the data for the specified finished job.",
        "operationId" : "jobHistoryInfo",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataObjectJob",
              "$ref" : "#/definitions/JsonResponseDataObjectJob"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataObjectJob",
              "$ref" : "#/definitions/JsonResponseDataObjectJob"
            }
          }
        }
      }
    },
    "/job/{id}" : {
      "get" : {
        "tags" : [ "Job Tasks" ],
        "summary" : "Get Job",
        "description" : "Inquire the data for the specified job.",
        "operationId" : "jobInfo",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataObjectJob",
              "$ref" : "#/definitions/JsonResponseDataObjectJob"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataObjectJob",
              "$ref" : "#/definitions/JsonResponseDataObjectJob"
            }
          }
        }
      }
    },
    "/job/{id}/cancel" : {
      "put" : {
        "tags" : [ "Job Tasks" ],
        "summary" : "Cancel Job",
        "description" : "Cancel the specified job.",
        "operationId" : "jobCancel",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataJsonNoData",
              "$ref" : "#/definitions/JsonResponseDataJsonNoData"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataJsonNoData",
              "$ref" : "#/definitions/JsonResponseDataJsonNoData"
            }
          }
        }
      }
    },
    "/job/{id}/confirm" : {
      "put" : {
        "tags" : [ "Job Tasks" ],
        "summary" : "Confirm Job",
        "description" : "Confirm the specified job.",
        "operationId" : "jobConfirm",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataJsonNoData",
              "$ref" : "#/definitions/JsonResponseDataJsonNoData"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataJsonNoData",
              "$ref" : "#/definitions/JsonResponseDataJsonNoData"
            }
          }
        }
      }
    },
    "/job/{id}/reject" : {
      "put" : {
        "tags" : [ "Job Tasks" ],
        "summary" : "Reject Job",
        "description" : "Reject the specified job.",
        "operationId" : "jobReject",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataJsonNoData",
              "$ref" : "#/definitions/JsonResponseDataJsonNoData"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataJsonNoData",
              "$ref" : "#/definitions/JsonResponseDataJsonNoData"
            }
          }
        }
      }
    },
    "/login" : {
      "post" : {
        "tags" : [ "Session Tasks" ],
        "summary" : "Login",
        "description" : "Login and create a new session.",
        "operationId" : "login",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "user",
          "required" : false,
          "schema" : {
            "originalRef" : "LoginData",
            "$ref" : "#/definitions/LoginData"
          }
        }, {
          "name" : "acl",
          "in" : "query",
          "description" : "Specifies whether the acls are returned in the response. Returns extra data if parameter is set. Example : ?acl",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "profiles",
          "in" : "query",
          "description" : "Specifies whether the user profile is returned in the response. Returns extra data if parameter is set. Example : ?profiles",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "customer",
          "in" : "query",
          "description" : "Specifies whether the customer data is returned in the response. Returns extra data if parameter is set. Example : ?customer",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "subscription",
          "in" : "query",
          "description" : "Specifies whether the subscriptions are returned in the response. Returns extra data if parameter is set. Example : ?subscription",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "nameServerGroup",
          "in" : "query",
          "description" : "Specifies whether the nameserver groups are returned in the response. Returns extra data if parameter is set. Example : ?nameServerGroup",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "timeout",
          "in" : "query",
          "description" : "Defines the timeout of the session in minutes. Default is 10 minutes. Example : timeout=60",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataUser",
              "$ref" : "#/definitions/JsonResponseDataUser"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataUser",
              "$ref" : "#/definitions/JsonResponseDataUser"
            }
          }
        }
      }
    },
    "/logout" : {
      "get" : {
        "tags" : [ "Session Tasks" ],
        "summary" : "Logout",
        "description" : "Logout and delete the current session.",
        "operationId" : "logout",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataJsonNoData",
              "$ref" : "#/definitions/JsonResponseDataJsonNoData"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataJsonNoData",
              "$ref" : "#/definitions/JsonResponseDataJsonNoData"
            }
          }
        }
      }
    },
    "/mailProxy" : {
      "post" : {
        "tags" : [ "MailProxy Tasks" ],
        "summary" : "Create MailProxy",
        "description" : "Create a new mail proxy.",
        "operationId" : "mailProxyCreate",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "mailProxy",
          "required" : false,
          "schema" : {
            "originalRef" : "MailProxy",
            "$ref" : "#/definitions/MailProxy"
          }
        }, {
          "name" : "keys",
          "in" : "query",
          "description" : "If the dns should be provisioned if available.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "example" : "?keys[]=dnsProvisioning"
          },
          "collectionFormat" : "multi",
          "x-example" : "?keys[]=dnsProvisioning"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataJsonNoData",
              "$ref" : "#/definitions/JsonResponseDataJsonNoData"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataJsonNoData",
              "$ref" : "#/definitions/JsonResponseDataJsonNoData"
            }
          }
        }
      }
    },
    "/mailProxy/_search" : {
      "post" : {
        "tags" : [ "MailProxy Tasks" ],
        "summary" : "List MailProxy",
        "description" : "Inquire a list of mail proxies with certain details. The data to be displayed can be extended per url paremeter.",
        "operationId" : "mailProxyList",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "query",
          "required" : false,
          "schema" : {
            "originalRef" : "Query",
            "$ref" : "#/definitions/Query"
          }
        }, {
          "name" : "keys",
          "in" : "query",
          "description" : "The query parameter to fetch additional details.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "example" : "?keys[]=target",
            "enum" : [ "{target}" ]
          },
          "collectionFormat" : "multi",
          "x-example" : "?keys[]=target"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataMailProxy",
              "$ref" : "#/definitions/JsonResponseDataMailProxy"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataMailProxy",
              "$ref" : "#/definitions/JsonResponseDataMailProxy"
            }
          }
        }
      }
    },
    "/mailProxy/{domain}" : {
      "get" : {
        "tags" : [ "MailProxy Tasks" ],
        "summary" : "Get MailProxy",
        "description" : "Inquire the data for the specified mail proxy.",
        "operationId" : "mailProxyInfo",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "domain",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataMailProxy",
              "$ref" : "#/definitions/JsonResponseDataMailProxy"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataMailProxy",
              "$ref" : "#/definitions/JsonResponseDataMailProxy"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "MailProxy Tasks" ],
        "summary" : "Update MailProxy",
        "description" : "Update an existing mail proxy.",
        "operationId" : "mailProxyUpdate",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "domain",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "mailProxy",
          "required" : false,
          "schema" : {
            "originalRef" : "MailProxy",
            "$ref" : "#/definitions/MailProxy"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataJsonNoData",
              "$ref" : "#/definitions/JsonResponseDataJsonNoData"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataJsonNoData",
              "$ref" : "#/definitions/JsonResponseDataJsonNoData"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "MailProxy Tasks" ],
        "summary" : "Delete MailProxy",
        "description" : "Delete an existing mail proxy.",
        "operationId" : "mailProxyDelete",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "domain",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "keys",
          "in" : "query",
          "description" : "If the dns should be provisioned if available.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "example" : "?keys[]=dnsProvisioning"
          },
          "collectionFormat" : "multi",
          "x-example" : "?keys[]=dnsProvisioning"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataJsonNoData",
              "$ref" : "#/definitions/JsonResponseDataJsonNoData"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataJsonNoData",
              "$ref" : "#/definitions/JsonResponseDataJsonNoData"
            }
          }
        }
      }
    },
    "/poll" : {
      "get" : {
        "tags" : [ "Poll Tasks" ],
        "summary" : "Get PollMessage",
        "description" : "Fetch the latest poll message.",
        "operationId" : "pollInfo",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataPollMessage",
              "$ref" : "#/definitions/JsonResponseDataPollMessage"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataPollMessage",
              "$ref" : "#/definitions/JsonResponseDataPollMessage"
            }
          }
        }
      }
    },
    "/poll/{id}" : {
      "put" : {
        "tags" : [ "Poll Tasks" ],
        "summary" : "Confirm PollMessage",
        "description" : "Confirm the specified poll message",
        "operationId" : "pollConfirm",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataJsonNoData",
              "$ref" : "#/definitions/JsonResponseDataJsonNoData"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataJsonNoData",
              "$ref" : "#/definitions/JsonResponseDataJsonNoData"
            }
          }
        }
      }
    },
    "/redirect" : {
      "post" : {
        "tags" : [ "Redirect Tasks" ],
        "summary" : "Create Redirect",
        "description" : "Create a new redirect.",
        "operationId" : "redirectCreate",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "redirect",
          "required" : false,
          "schema" : {
            "originalRef" : "Redirect",
            "$ref" : "#/definitions/Redirect"
          }
        }, {
          "name" : "keys",
          "in" : "query",
          "description" : "If the dns should be provisioned if available.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "example" : "?keys[]=dnsProvisioning"
          },
          "collectionFormat" : "multi",
          "x-example" : "?keys[]=dnsProvisioning"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataRedirect",
              "$ref" : "#/definitions/JsonResponseDataRedirect"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataRedirect",
              "$ref" : "#/definitions/JsonResponseDataRedirect"
            }
          }
        }
      }
    },
    "/redirect/_search" : {
      "post" : {
        "tags" : [ "Redirect Tasks" ],
        "summary" : "List Redirect",
        "description" : "Inquire a list of redirects with certain details. The data to be displayed can be extended per url paremeter.",
        "operationId" : "redirectList",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "query",
          "required" : false,
          "schema" : {
            "originalRef" : "Query",
            "$ref" : "#/definitions/Query"
          }
        }, {
          "name" : "keys",
          "in" : "query",
          "description" : "The query parameter to fetch additional details.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "example" : "?keys[]=title",
            "enum" : [ "{title}" ]
          },
          "collectionFormat" : "multi",
          "x-example" : "?keys[]=title"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataRedirect",
              "$ref" : "#/definitions/JsonResponseDataRedirect"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataRedirect",
              "$ref" : "#/definitions/JsonResponseDataRedirect"
            }
          }
        }
      }
    },
    "/redirect/{source}" : {
      "get" : {
        "tags" : [ "Redirect Tasks" ],
        "summary" : "Get Redirect",
        "description" : "Inquire the data for the specified redirect.",
        "operationId" : "redirectInfo",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "source",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataRedirect",
              "$ref" : "#/definitions/JsonResponseDataRedirect"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataRedirect",
              "$ref" : "#/definitions/JsonResponseDataRedirect"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Redirect Tasks" ],
        "summary" : "Update Redirect",
        "description" : "Update an existing redirect.",
        "operationId" : "redirectUpdate",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "source",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "redirect",
          "required" : false,
          "schema" : {
            "originalRef" : "Redirect",
            "$ref" : "#/definitions/Redirect"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataRedirect",
              "$ref" : "#/definitions/JsonResponseDataRedirect"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataRedirect",
              "$ref" : "#/definitions/JsonResponseDataRedirect"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Redirect Tasks" ],
        "summary" : "Delete Redirect",
        "description" : "Delete an existing redirect.",
        "operationId" : "redirectDelete",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "source",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "keys",
          "in" : "query",
          "description" : "If the dns should be provisioned if available.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "example" : "?keys[]=dnsProvisioning"
          },
          "collectionFormat" : "multi",
          "x-example" : "?keys[]=dnsProvisioning"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataJsonNoData",
              "$ref" : "#/definitions/JsonResponseDataJsonNoData"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataJsonNoData",
              "$ref" : "#/definitions/JsonResponseDataJsonNoData"
            }
          }
        }
      }
    },
    "/sslcontact" : {
      "post" : {
        "tags" : [ "SslContact Tasks" ],
        "summary" : "Create SslContact",
        "description" : "Create a new sslcontact.",
        "operationId" : "sslContactCreate",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "sslcontact",
          "required" : false,
          "schema" : {
            "originalRef" : "SslContact",
            "$ref" : "#/definitions/SslContact"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataSslContact",
              "$ref" : "#/definitions/JsonResponseDataSslContact"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataSslContact",
              "$ref" : "#/definitions/JsonResponseDataSslContact"
            }
          }
        }
      }
    },
    "/sslcontact/_search" : {
      "post" : {
        "tags" : [ "SslContact Tasks" ],
        "summary" : "List SslContact",
        "description" : "Inquire a list of sslcontacts with certain details. The data to be displayed can be extended per url paremeter.",
        "operationId" : "sslContactList",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "query",
          "required" : false,
          "schema" : {
            "originalRef" : "Query",
            "$ref" : "#/definitions/Query"
          }
        }, {
          "name" : "keys",
          "in" : "query",
          "description" : "The query parameter to fetch additional details.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "example" : "?keys[]=email",
            "enum" : [ "{phone", "email", "title", "address", "postal_code", "city", "country", "state", "updater}" ]
          },
          "collectionFormat" : "multi",
          "x-example" : "?keys[]=email"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataSslContact",
              "$ref" : "#/definitions/JsonResponseDataSslContact"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataSslContact",
              "$ref" : "#/definitions/JsonResponseDataSslContact"
            }
          }
        }
      }
    },
    "/sslcontact/{id}" : {
      "get" : {
        "tags" : [ "SslContact Tasks" ],
        "summary" : "Get SslContact",
        "description" : "Inquire the data for the specified sslcontact.",
        "operationId" : "sslContactInfo",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataSslContact",
              "$ref" : "#/definitions/JsonResponseDataSslContact"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataSslContact",
              "$ref" : "#/definitions/JsonResponseDataSslContact"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "SslContact Tasks" ],
        "summary" : "Update SslContact",
        "description" : "Update an existing sslcontact.",
        "operationId" : "sslContactUpdate",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "sslcontact",
          "required" : false,
          "schema" : {
            "originalRef" : "SslContact",
            "$ref" : "#/definitions/SslContact"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataSslContact",
              "$ref" : "#/definitions/JsonResponseDataSslContact"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataSslContact",
              "$ref" : "#/definitions/JsonResponseDataSslContact"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "SslContact Tasks" ],
        "summary" : "Delete SslContact",
        "description" : "Delete an existing sslcontact.",
        "operationId" : "sslContactDelete",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataJsonNoData",
              "$ref" : "#/definitions/JsonResponseDataJsonNoData"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataJsonNoData",
              "$ref" : "#/definitions/JsonResponseDataJsonNoData"
            }
          }
        }
      }
    },
    "/subscription" : {
      "post" : {
        "tags" : [ "Subscription Tasks" ],
        "summary" : "Create Subscription",
        "description" : "Create a new subscription contract.",
        "operationId" : "subscriptionCreate",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "subscription",
          "required" : false,
          "schema" : {
            "originalRef" : "PeriodicBilling",
            "$ref" : "#/definitions/PeriodicBilling"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataPeriodicBilling",
              "$ref" : "#/definitions/JsonResponseDataPeriodicBilling"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataPeriodicBilling",
              "$ref" : "#/definitions/JsonResponseDataPeriodicBilling"
            }
          }
        }
      }
    },
    "/subscription/{contractId}" : {
      "put" : {
        "tags" : [ "Subscription Tasks" ],
        "summary" : "update Subscription",
        "description" : "update a subscription contract.",
        "operationId" : "subscriptionUpdate",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "subscription",
          "required" : false,
          "schema" : {
            "originalRef" : "PeriodicBilling",
            "$ref" : "#/definitions/PeriodicBilling"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataPeriodicBilling",
              "$ref" : "#/definitions/JsonResponseDataPeriodicBilling"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataPeriodicBilling",
              "$ref" : "#/definitions/JsonResponseDataPeriodicBilling"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Subscription Tasks" ],
        "summary" : "Delete Subscription",
        "description" : "Delete a subscription contract.",
        "operationId" : "subscriptionDelte",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "contractId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataPeriodicBilling",
              "$ref" : "#/definitions/JsonResponseDataPeriodicBilling"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataPeriodicBilling",
              "$ref" : "#/definitions/JsonResponseDataPeriodicBilling"
            }
          }
        }
      }
    },
    "/subscription/{contractId}/_upgrade" : {
      "put" : {
        "tags" : [ "Subscription Tasks" ],
        "summary" : "upgrade Subscription",
        "description" : "upgrade a subscription contract.",
        "operationId" : "subscriptionUpgrade",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "subscription",
          "required" : false,
          "schema" : {
            "originalRef" : "PeriodicBilling",
            "$ref" : "#/definitions/PeriodicBilling"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataPeriodicBilling",
              "$ref" : "#/definitions/JsonResponseDataPeriodicBilling"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataPeriodicBilling",
              "$ref" : "#/definitions/JsonResponseDataPeriodicBilling"
            }
          }
        }
      }
    },
    "/transferout/_search" : {
      "post" : {
        "tags" : [ "Transfer Request Tasks" ],
        "summary" : "List transferOut",
        "description" : "Inquire a list of transferOut with certain details. The data to be displayed can be extended per url paremeter.",
        "operationId" : "transferOutList",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "query",
          "required" : false,
          "schema" : {
            "originalRef" : "Query",
            "$ref" : "#/definitions/Query"
          }
        }, {
          "name" : "keys",
          "in" : "query",
          "description" : "The query parameter to fetch additional details.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "example" : "?keys[]=end",
            "enum" : [ "{transaction", "gaining_registrar", "loosing_registrar", "start", "reminder", "end}" ]
          },
          "collectionFormat" : "multi",
          "x-example" : "?keys[]=end"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataTransferOut",
              "$ref" : "#/definitions/JsonResponseDataTransferOut"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataTransferOut",
              "$ref" : "#/definitions/JsonResponseDataTransferOut"
            }
          }
        }
      }
    },
    "/transferout/{domain}/{_type}" : {
      "post" : {
        "tags" : [ "Transfer Request Tasks" ],
        "summary" : "answer transferOut",
        "description" : "ack or nack the transfer request.",
        "operationId" : "transferOutAnswer",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "query",
          "required" : false,
          "schema" : {
            "originalRef" : "Query",
            "$ref" : "#/definitions/Query"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataTransferOut",
              "$ref" : "#/definitions/JsonResponseDataTransferOut"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataTransferOut",
              "$ref" : "#/definitions/JsonResponseDataTransferOut"
            }
          }
        }
      }
    },
    "/transferout/{name}" : {
      "get" : {
        "tags" : [ "Transfer Request Tasks" ],
        "summary" : "Get transfer request",
        "description" : "Fetches supplied .",
        "operationId" : "transferOutInfo",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataTransfer",
              "$ref" : "#/definitions/JsonResponseDataTransfer"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataTransfer",
              "$ref" : "#/definitions/JsonResponseDataTransfer"
            }
          }
        }
      }
    },
    "/trustedapp" : {
      "post" : {
        "tags" : [ "TrustedApplication Tasks" ],
        "summary" : "Create TrustedApp",
        "description" : "Create a new trusted application.",
        "operationId" : "trustedAppCreate",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "trustedApplication",
          "required" : false,
          "schema" : {
            "originalRef" : "TrustedApplication",
            "$ref" : "#/definitions/TrustedApplication"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataTrustedApplication",
              "$ref" : "#/definitions/JsonResponseDataTrustedApplication"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataTrustedApplication",
              "$ref" : "#/definitions/JsonResponseDataTrustedApplication"
            }
          }
        }
      }
    },
    "/trustedapp/_search" : {
      "post" : {
        "tags" : [ "TrustedApplication Tasks" ],
        "summary" : "List TrustedApp",
        "description" : "Inquire a list of certificates with certain details. The data to be displayed can be extended per url paremeter.",
        "operationId" : "trustedAppList",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "query",
          "required" : false,
          "schema" : {
            "originalRef" : "Query",
            "$ref" : "#/definitions/Query"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataTrustedApplication",
              "$ref" : "#/definitions/JsonResponseDataTrustedApplication"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataTrustedApplication",
              "$ref" : "#/definitions/JsonResponseDataTrustedApplication"
            }
          }
        }
      }
    },
    "/trustedapp/{id}" : {
      "get" : {
        "tags" : [ "TrustedApplication Tasks" ],
        "summary" : "Get TrustedApp",
        "description" : "Fetch the data for the specified trusted application.",
        "operationId" : "trustedAppInfo",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataTrustedApplication",
              "$ref" : "#/definitions/JsonResponseDataTrustedApplication"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataTrustedApplication",
              "$ref" : "#/definitions/JsonResponseDataTrustedApplication"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "TrustedApplication Tasks" ],
        "summary" : "Update TrustedApp",
        "description" : "Update an existing trusted application.",
        "operationId" : "trustedAppUpdate",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "trustedApplication",
          "required" : false,
          "schema" : {
            "originalRef" : "TrustedApplication",
            "$ref" : "#/definitions/TrustedApplication"
          }
        }, {
          "name" : "keys",
          "in" : "query",
          "description" : "Defines additional option generate a new password",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "example" : "?keys[]=generatePassword",
            "enum" : [ "{generatePassword}" ]
          },
          "collectionFormat" : "multi",
          "x-example" : "?keys[]=generatePassword"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataJsonNoData",
              "$ref" : "#/definitions/JsonResponseDataJsonNoData"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataJsonNoData",
              "$ref" : "#/definitions/JsonResponseDataJsonNoData"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "TrustedApplication Tasks" ],
        "summary" : "Delete TrustedApp",
        "description" : "Delete an existing trusted application.",
        "operationId" : "trustedAppDelete",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataJsonNoData",
              "$ref" : "#/definitions/JsonResponseDataJsonNoData"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataJsonNoData",
              "$ref" : "#/definitions/JsonResponseDataJsonNoData"
            }
          }
        }
      }
    },
    "/user/_2fa" : {
      "put" : {
        "tags" : [ "User 2fa tasks" ],
        "summary" : "Activates the 2fa authentication for the logged in user. The response contains the rescue tokens",
        "description" : "",
        "operationId" : "user2faAktivate",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataOTPAuth",
              "$ref" : "#/definitions/JsonResponseDataOTPAuth"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataOTPAuth",
              "$ref" : "#/definitions/JsonResponseDataOTPAuth"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "User 2fa tasks" ],
        "summary" : "Deactivates the 2fa of the logged in user",
        "description" : "The auth type of the user is set back to password.",
        "operationId" : "user2faDelete",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataVoid",
              "$ref" : "#/definitions/JsonResponseDataVoid"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataVoid",
              "$ref" : "#/definitions/JsonResponseDataVoid"
            }
          }
        }
      }
    },
    "/user/_guest" : {
      "post" : {
        "tags" : [ "Guest account tasks" ],
        "summary" : "create guest account",
        "description" : "creates a guest account.",
        "operationId" : "guestCreate",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "user",
          "required" : false,
          "schema" : {
            "originalRef" : "Query",
            "$ref" : "#/definitions/Query"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataJsonNoData",
              "$ref" : "#/definitions/JsonResponseDataJsonNoData"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataJsonNoData",
              "$ref" : "#/definitions/JsonResponseDataJsonNoData"
            }
          }
        }
      }
    },
    "/user/_guestverify/{token}" : {
      "get" : {
        "tags" : [ "Guest account tasks" ],
        "summary" : "verify guest account",
        "description" : "applies a verification code for a guest account.",
        "operationId" : "guestApplyVerify",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "token",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataUser",
              "$ref" : "#/definitions/JsonResponseDataUser"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataUser",
              "$ref" : "#/definitions/JsonResponseDataUser"
            }
          }
        },
        "deprecated" : true
      }
    },
    "/user/_newPassword" : {
      "put" : {
        "tags" : [ "User Tasks" ],
        "summary" : "New Password",
        "description" : "This route is for setting a new password for a user.",
        "operationId" : "newPassword",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataVoid",
              "$ref" : "#/definitions/JsonResponseDataVoid"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataVoid",
              "$ref" : "#/definitions/JsonResponseDataVoid"
            }
          }
        }
      }
    },
    "/user/_newPasswordVerify" : {
      "get" : {
        "tags" : [ "User Tasks" ],
        "summary" : "New Password verify",
        "description" : "This route is for verifying the passwort change request",
        "operationId" : "newPasswordVerify",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataVoid",
              "$ref" : "#/definitions/JsonResponseDataVoid"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataVoid",
              "$ref" : "#/definitions/JsonResponseDataVoid"
            }
          }
        }
      }
    },
    "/user/_verify/{token}" : {
      "get" : {
        "tags" : [ "User verification confirm" ],
        "summary" : "verify user action",
        "description" : "applies a verification code for an user action.",
        "operationId" : "userConfirmVerification",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "token",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataUser",
              "$ref" : "#/definitions/JsonResponseDataUser"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataUser",
              "$ref" : "#/definitions/JsonResponseDataUser"
            }
          }
        }
      }
    },
    "/zone" : {
      "post" : {
        "tags" : [ "Zone Tasks" ],
        "summary" : "Create Zone",
        "description" : "Create a zone.",
        "operationId" : "zoneCreate",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "zone",
          "required" : false,
          "schema" : {
            "originalRef" : "Zone",
            "$ref" : "#/definitions/Zone"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataZone",
              "$ref" : "#/definitions/JsonResponseDataZone"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataZone",
              "$ref" : "#/definitions/JsonResponseDataZone"
            }
          }
        }
      }
    },
    "/zone/_search" : {
      "post" : {
        "tags" : [ "Zone Tasks" ],
        "summary" : "List Zones",
        "description" : "Inquire a list of zones with certain details. The data to be displayed can be extended per url paremeter.",
        "operationId" : "zoneList",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "query",
          "required" : false,
          "schema" : {
            "originalRef" : "Query",
            "$ref" : "#/definitions/Query"
          }
        }, {
          "name" : "keys",
          "in" : "query",
          "description" : "The query parameter to fetch additional details.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "example" : "?keys[]=primary",
            "enum" : [ "{primary", "secondary1", "secondary2", "secondary3", "secondary4", "secondary5", "secondary6", "secondary7", "comment}" ]
          },
          "collectionFormat" : "multi",
          "x-example" : "?keys[]=primary"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataZone",
              "$ref" : "#/definitions/JsonResponseDataZone"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataZone",
              "$ref" : "#/definitions/JsonResponseDataZone"
            }
          }
        }
      }
    },
    "/zone/{name}/_stream" : {
      "post" : {
        "tags" : [ "Zone Tasks" ],
        "summary" : "Zone Stream",
        "description" : "Add or remove records for any zone with the given name.",
        "operationId" : "zoneStream",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "zoneStream",
          "required" : false,
          "schema" : {
            "originalRef" : "ZoneStream",
            "$ref" : "#/definitions/ZoneStream"
          }
        }, {
          "name" : "keys",
          "in" : "query",
          "description" : "Contains the opional autofix parameter",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "example" : "?keys[]=autofix",
            "enum" : [ "{autofix}" ]
          },
          "collectionFormat" : "multi",
          "x-example" : "?keys[]=autofix"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataZone",
              "$ref" : "#/definitions/JsonResponseDataZone"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataZone",
              "$ref" : "#/definitions/JsonResponseDataZone"
            }
          }
        }
      }
    },
    "/zone/{name}/{systemNameServer}" : {
      "get" : {
        "tags" : [ "Zone Tasks" ],
        "summary" : "Get Zone",
        "description" : "Fetch the data for the specified zone.",
        "operationId" : "zoneInfo",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "systemNameServer",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataZone",
              "$ref" : "#/definitions/JsonResponseDataZone"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataZone",
              "$ref" : "#/definitions/JsonResponseDataZone"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Zone Tasks" ],
        "summary" : "Update Zone",
        "description" : "Update an existing zone.",
        "operationId" : "zoneUpdate",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "systemNameServer",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "zone",
          "required" : false,
          "schema" : {
            "originalRef" : "Zone",
            "$ref" : "#/definitions/Zone"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataZone",
              "$ref" : "#/definitions/JsonResponseDataZone"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataZone",
              "$ref" : "#/definitions/JsonResponseDataZone"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Zone Tasks" ],
        "summary" : "Delete Zone",
        "description" : "Delete an existing zone.",
        "operationId" : "zoneDelete",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "systemNameServer",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataJsonNoData",
              "$ref" : "#/definitions/JsonResponseDataJsonNoData"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataJsonNoData",
              "$ref" : "#/definitions/JsonResponseDataJsonNoData"
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Zone Tasks" ],
        "summary" : "Update Zone",
        "description" : "Update an existing zone.",
        "operationId" : "zonePatch",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "systemNameServer",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "zone",
          "required" : false,
          "schema" : {
            "originalRef" : "ZoneBasePatchRequest",
            "$ref" : "#/definitions/ZoneBasePatchRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataZone",
              "$ref" : "#/definitions/JsonResponseDataZone"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataZone",
              "$ref" : "#/definitions/JsonResponseDataZone"
            }
          }
        }
      }
    },
    "/zone/{name}/{systemNameServer}/_axfr" : {
      "get" : {
        "tags" : [ "Zone Tasks" ],
        "summary" : "Get Axfr",
        "description" : "Fetch the axfr data for the specified zone.",
        "operationId" : "zoneAxfr",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "systemNameServer",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataString",
              "$ref" : "#/definitions/JsonResponseDataString"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataString",
              "$ref" : "#/definitions/JsonResponseDataString"
            }
          }
        }
      }
    },
    "/zone/{name}/{systemNameServer}/_comment" : {
      "put" : {
        "tags" : [ "Zone Tasks" ],
        "summary" : "Update Zone Comment",
        "description" : "Update an existing zone.",
        "operationId" : "zoneUpdateComment",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "systemNameServer",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "zone",
          "required" : false,
          "schema" : {
            "originalRef" : "Zone",
            "$ref" : "#/definitions/Zone"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataZone",
              "$ref" : "#/definitions/JsonResponseDataZone"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataZone",
              "$ref" : "#/definitions/JsonResponseDataZone"
            }
          }
        }
      }
    },
    "/zone/{name}/{systemNameServer}/_copy" : {
      "put" : {
        "tags" : [ "Zone Tasks" ],
        "summary" : "Update Zone",
        "description" : "Copies an existing zone.",
        "operationId" : "zoneCopy",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "systemNameServer",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "zone",
          "required" : false,
          "schema" : {
            "originalRef" : "Zone",
            "$ref" : "#/definitions/Zone"
          }
        }, {
          "name" : "keys",
          "in" : "query",
          "description" : "Defines addtional option for copy of the zone",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "example" : "?keys[]=replace",
            "enum" : [ "{replace", "forceOwner}" ]
          },
          "collectionFormat" : "multi",
          "x-example" : "?keys[]=replace"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataZone",
              "$ref" : "#/definitions/JsonResponseDataZone"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataZone",
              "$ref" : "#/definitions/JsonResponseDataZone"
            }
          }
        }
      }
    },
    "/zone/{name}/{systemNameServer}/_import" : {
      "post" : {
        "tags" : [ "Zone Tasks" ],
        "summary" : "Import Zone",
        "description" : "Import the specified zone.",
        "operationId" : "zoneImport",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "systemNameServer",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "zone",
          "required" : false,
          "schema" : {
            "originalRef" : "Zone",
            "$ref" : "#/definitions/Zone"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataZone",
              "$ref" : "#/definitions/JsonResponseDataZone"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataZone",
              "$ref" : "#/definitions/JsonResponseDataZone"
            }
          }
        }
      }
    },
    "/zone/{name}/{systemNameServer}/_migrate" : {
      "put" : {
        "tags" : [ "Zone Tasks" ],
        "summary" : "Update Zone",
        "description" : "Copies an existing zone and updates the domain with the new name servers.",
        "operationId" : "zoneMigrate",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Domainrobot-Pin",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-User",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Owner-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Demo",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-SessionId",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Context",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-WS",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Domainrobot-Bulk-Limit",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "systemNameServer",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "zone",
          "required" : false,
          "schema" : {
            "originalRef" : "Zone",
            "$ref" : "#/definitions/Zone"
          }
        }, {
          "name" : "keys",
          "in" : "query",
          "description" : "Defines addtional option for copy of the zone",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "example" : "?keys[]=replace",
            "enum" : [ "{replace", "forceOwner}" ]
          },
          "collectionFormat" : "multi",
          "x-example" : "?keys[]=replace"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "originalRef" : "JsonResponseDataObjectJob",
              "$ref" : "#/definitions/JsonResponseDataObjectJob"
            },
            "responseSchema" : {
              "originalRef" : "JsonResponseDataObjectJob",
              "$ref" : "#/definitions/JsonResponseDataObjectJob"
            }
          }
        }
      }
    }
  },
  "definitions" : {
    "ACLRestriction" : {
      "type" : "string",
      "enum" : [ "USER_LOCKED", "CHILDREN_LOCKED", "PARENT_LOCK", "NOT_LOCKED" ]
    },
    "Account" : {
      "type" : "object",
      "required" : [ "customer" ],
      "properties" : {
        "customer" : {
          "description" : "The customer itself",
          "originalRef" : "GenericCustomer",
          "$ref" : "#/definitions/GenericCustomer"
        },
        "currentAccountBalance" : {
          "type" : "number",
          "format" : "double",
          "description" : "The real account balance"
        },
        "runningTotal" : {
          "type" : "number",
          "format" : "double",
          "description" : "The current total, the amount of all finished and unfinished transactions"
        },
        "creditLimit" : {
          "type" : "number",
          "format" : "double",
          "description" : "The credit limit of the account."
        },
        "currency" : {
          "type" : "string",
          "example" : "EUR",
          "description" : "The currency of the account",
          "x-custom-type" : "currency"
        },
        "minRunningTotalNotification" : {
          "type" : "number",
          "format" : "double",
          "description" : "The minimum running total amount if a notification should be send"
        },
        "minRunningTotalNotificationEmail" : {
          "type" : "string",
          "description" : "The recipient of the notification limit email"
        },
        "created" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The date of the acccount creation"
        },
        "updated" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The date of the las update."
        },
        "view" : {
          "description" : "The selected exchange for the account",
          "originalRef" : "CurrencyRate",
          "$ref" : "#/definitions/CurrencyRate"
        }
      }
    },
    "AccountingDocumentTypeConstants" : {
      "type" : "string",
      "enum" : [ "INVOICE", "CREDIT", "REFUND", "CANCELED", "CHARGE" ]
    },
    "Application" : {
      "type" : "object",
      "required" : [ "name" ],
      "properties" : {
        "created" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The created date."
        },
        "updated" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The updated date."
        },
        "name" : {
          "type" : "string",
          "description" : "The name of the application."
        },
        "functionCodes" : {
          "type" : "array",
          "description" : "The function codes for the application.",
          "uniqueItems" : true,
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "AuEligibilityIdTypeConstants" : {
      "type" : "string",
      "enum" : [ "ACN", "ABN", "VIC_BN", "NSW_BN", "SA", "BN", "NT_BN", "WA_BN", "TAS_BN", "ACT_BN", "QLD_BN", "TM", "OTHER" ]
    },
    "AuEligibilityTypeConstants" : {
      "type" : "string",
      "enum" : [ "COMPANY", "REGISTERED_BUSINESS", "SOLE_TRADER", "PARTNERSHIP", "TRADEMARK_OWNER", "PENDING_TM_OWNER", "CITIZEN_RESIDENT", "INCORPORATED_ASSOCIATION", "UNINCORPORATED_ASSOCIATION", "CLUB", "NON_PROFIT_ORGANISATION", "CHARITY", "TRADE_UNION", "INDUSTRY_BODY", "COMMERCIAL_STATUTORY_BODY", "POLITICAL_PARTY", "RELIGIOUS_CHURCH_GROUPS", "OTHER" ]
    },
    "AuRegistrantIdTypeConstants" : {
      "type" : "string",
      "enum" : [ "ACN", "ABN", "OTHER" ]
    },
    "AuthMethodConstants" : {
      "type" : "string",
      "enum" : [ "DNS", "EMAIL", "FILE", "ORG" ]
    },
    "AuthType" : {
      "type" : "string",
      "enum" : [ "PASSWORD", "PASSWORD_TOKEN", "ALIAS" ]
    },
    "AutoRenewStatusConstants" : {
      "type" : "string",
      "enum" : [ "TRUE", "FALSE", "ONCE" ]
    },
    "BackupMx" : {
      "type" : "object",
      "required" : [ "domain" ],
      "properties" : {
        "domain" : {
          "type" : "string",
          "description" : "The domain of the mail exchange to backup"
        },
        "idn" : {
          "type" : "string",
          "description" : "The idn version of the domain."
        },
        "created" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The date of the creation"
        },
        "updated" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The date of the last updated"
        },
        "owner" : {
          "description" : "The owner of the entry",
          "originalRef" : "BasicUser",
          "$ref" : "#/definitions/BasicUser"
        },
        "updater" : {
          "description" : "The last updater of the entry",
          "originalRef" : "BasicUser",
          "$ref" : "#/definitions/BasicUser"
        }
      }
    },
    "BasicCustomer" : {
      "type" : "object",
      "required" : [ "addressLines", "city", "client", "country", "name", "number", "payment", "pcode" ],
      "properties" : {
        "number" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Lorem Ipsum"
        },
        "client" : {
          "type" : "string",
          "description" : "Lorem Ipsum",
          "minLength" : 1,
          "maxLength" : 2147483647
        },
        "group" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Lorem Ipsum"
        },
        "name" : {
          "type" : "string",
          "description" : "The name of the customer.",
          "minLength" : 0,
          "maxLength" : 255
        },
        "organization" : {
          "type" : "string",
          "description" : "The name of the organization.",
          "minLength" : 0,
          "maxLength" : 70
        },
        "vatNumber" : {
          "type" : "string",
          "description" : "The value added tax number."
        },
        "gender" : {
          "description" : "The gender of the person.",
          "originalRef" : "GenderConstants",
          "$ref" : "#/definitions/GenderConstants"
        },
        "title" : {
          "type" : "string",
          "description" : "The title of the customer"
        },
        "addressLines" : {
          "type" : "array",
          "description" : "The address of the customer",
          "items" : {
            "type" : "string"
          },
          "maxItems" : 2147483647,
          "minItems" : 1
        },
        "city" : {
          "type" : "string",
          "description" : "The city of the customer."
        },
        "state" : {
          "type" : "string",
          "description" : "The state of the customer."
        },
        "country" : {
          "type" : "string",
          "description" : "The country of the customer."
        },
        "phone" : {
          "description" : "The phone number.",
          "originalRef" : "Phone",
          "$ref" : "#/definitions/Phone"
        },
        "fax" : {
          "description" : "The fax number.",
          "originalRef" : "Phone",
          "$ref" : "#/definitions/Phone"
        },
        "emails" : {
          "type" : "array",
          "description" : "The email addresses.",
          "items" : {
            "type" : "string"
          },
          "maxItems" : 2147483647,
          "minItems" : 1
        },
        "billingEmails" : {
          "type" : "array",
          "description" : "The billing recipients.",
          "items" : {
            "type" : "string"
          }
        },
        "payment" : {
          "description" : "The payment typ of the customer.",
          "originalRef" : "PaymentConstants",
          "$ref" : "#/definitions/PaymentConstants"
        },
        "paymentMode" : {
          "type" : "string",
          "description" : "The payment mode of the customer."
        },
        "paymentCurrency" : {
          "description" : "The payment currency of the customer.",
          "originalRef" : "Currency",
          "$ref" : "#/definitions/Currency"
        },
        "invoiceLanguage" : {
          "type" : "string",
          "description" : "The language to use for the invoice."
        },
        "taxable" : {
          "type" : "boolean",
          "description" : "The taxable flag of the customer."
        },
        "card" : {
          "description" : "The customers minimal credit card data if payament was post with credit card.",
          "originalRef" : "Card",
          "$ref" : "#/definitions/Card"
        },
        "contracts" : {
          "type" : "array",
          "description" : "The customers contracts.",
          "items" : {
            "originalRef" : "CustomerContract",
            "$ref" : "#/definitions/CustomerContract"
          }
        },
        "billingUsers" : {
          "type" : "array",
          "description" : "The billing users.",
          "items" : {
            "originalRef" : "BasicUser",
            "$ref" : "#/definitions/BasicUser"
          }
        },
        "account" : {
          "description" : "The account of the customer in case of prepayment or if the customer has a credit limit",
          "originalRef" : "Account",
          "$ref" : "#/definitions/Account"
        },
        "clearAccount" : {
          "description" : "The period after the post payment account will be cleared to zero",
          "originalRef" : "ClearAccountPeriod",
          "$ref" : "#/definitions/ClearAccountPeriod"
        },
        "fname" : {
          "type" : "string",
          "description" : "The first name.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "lname" : {
          "type" : "string",
          "description" : "The last name.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "pcode" : {
          "type" : "string",
          "description" : "The postal code of the city."
        },
        "sepa" : {
          "description" : "The customers sepa mandate if payament was post with sepa.",
          "originalRef" : "SEPAMandate",
          "$ref" : "#/definitions/SEPAMandate"
        }
      }
    },
    "BasicDocument" : {
      "type" : "object",
      "required" : [ "uuid" ],
      "properties" : {
        "created" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The created date."
        },
        "updated" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The updated date."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Lorem Ipsum"
        },
        "comment" : {
          "type" : "string",
          "description" : "Lorem Ipsum"
        },
        "type" : {
          "type" : "string",
          "description" : "Lorem Ipsum"
        },
        "mimeType" : {
          "type" : "string",
          "description" : "Lorem Ipsum"
        },
        "data" : {
          "type" : "string",
          "description" : "Lorem Ipsum"
        },
        "size" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Lorem Ipsum"
        },
        "name" : {
          "type" : "string",
          "description" : "Lorem Ipsum"
        },
        "link" : {
          "type" : "string",
          "description" : "Lorem Ipsum"
        },
        "uuid" : {
          "type" : "string",
          "description" : "The unique identifier of the document"
        },
        "alias" : {
          "type" : "string",
          "description" : "The alias of the document"
        },
        "owner" : {
          "description" : "The owner of the object.",
          "originalRef" : "BasicUser",
          "$ref" : "#/definitions/BasicUser"
        },
        "updater" : {
          "description" : "The updating user of the object.",
          "originalRef" : "BasicUser",
          "$ref" : "#/definitions/BasicUser"
        }
      }
    },
    "BasicUser" : {
      "type" : "object",
      "required" : [ "context", "user" ],
      "properties" : {
        "context" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The context."
        },
        "user" : {
          "type" : "string",
          "description" : "The user name.",
          "pattern" : "^[^_].*"
        }
      }
    },
    "BillingObjectLimit" : {
      "type" : "object",
      "properties" : {
        "created" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The created date."
        },
        "updated" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The updated date."
        },
        "articleLabel" : {
          "type" : "string",
          "description" : "Lorem Ipsum"
        },
        "limitSelf" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Lorem Ipsum"
        },
        "limitChildren" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Lorem Ipsum"
        },
        "articleTypeLabel" : {
          "type" : "string",
          "description" : "Lorem Ipsum"
        },
        "count" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The current count if available"
        }
      }
    },
    "BillingStatus" : {
      "type" : "string",
      "enum" : [ "ADD", "REMOVE", "UPDATE", "IGNORE", "CUSTOMER_CHANGED", "USER_CHANGED", "ACTIVE", "CANCELED", "CANCELED_EXPIRE", "RESTORE", "AUTODELETE", "REMOVED" ]
    },
    "BulkBackupMxDeleteRequest" : {
      "type" : "object",
      "properties" : {
        "objects" : {
          "type" : "array",
          "description" : "The objects to process",
          "items" : {
            "originalRef" : "BackupMx",
            "$ref" : "#/definitions/BackupMx"
          }
        },
        "query" : {
          "description" : "The query to fetch the object instead of defined list",
          "originalRef" : "Query",
          "$ref" : "#/definitions/Query"
        }
      }
    },
    "BulkBackupMxPostRequest" : {
      "type" : "object",
      "properties" : {
        "objects" : {
          "type" : "array",
          "description" : "The objects to process",
          "items" : {
            "originalRef" : "BackupMx",
            "$ref" : "#/definitions/BackupMx"
          }
        },
        "template" : {
          "description" : "The template for objects to process",
          "originalRef" : "BackupMx",
          "$ref" : "#/definitions/BackupMx"
        }
      }
    },
    "BulkDomainCancelationDeleteRequest" : {
      "type" : "object",
      "properties" : {
        "objects" : {
          "type" : "array",
          "description" : "The objects to process",
          "items" : {
            "originalRef" : "DomainCancelation",
            "$ref" : "#/definitions/DomainCancelation"
          }
        },
        "query" : {
          "description" : "The query to fetch the object instead of defined list",
          "originalRef" : "Query",
          "$ref" : "#/definitions/Query"
        }
      }
    },
    "BulkDomainCancelationPatchRequest" : {
      "type" : "object",
      "properties" : {
        "objects" : {
          "type" : "array",
          "description" : "The objects to process",
          "items" : {
            "originalRef" : "DomainCancelation",
            "$ref" : "#/definitions/DomainCancelation"
          }
        },
        "template" : {
          "description" : "The template for objects to process",
          "originalRef" : "DomainCancelation",
          "$ref" : "#/definitions/DomainCancelation"
        },
        "query" : {
          "description" : "The query to fetch the object instead of defined list",
          "originalRef" : "Query",
          "$ref" : "#/definitions/Query"
        }
      }
    },
    "BulkDomainCancelationPostRequest" : {
      "type" : "object",
      "properties" : {
        "objects" : {
          "type" : "array",
          "description" : "The objects to process",
          "items" : {
            "originalRef" : "DomainCancelation",
            "$ref" : "#/definitions/DomainCancelation"
          }
        },
        "template" : {
          "description" : "The template for objects to process",
          "originalRef" : "DomainCancelation",
          "$ref" : "#/definitions/DomainCancelation"
        }
      }
    },
    "BulkDomainCommentRequest" : {
      "type" : "object",
      "properties" : {
        "objects" : {
          "type" : "array",
          "description" : "The objects to process",
          "items" : {
            "originalRef" : "Domain",
            "$ref" : "#/definitions/Domain"
          }
        },
        "template" : {
          "description" : "The template for objects to process",
          "originalRef" : "Domain",
          "$ref" : "#/definitions/Domain"
        },
        "query" : {
          "description" : "The query to fetch the object instead of defined list",
          "originalRef" : "Query",
          "$ref" : "#/definitions/Query"
        }
      }
    },
    "BulkDomainDeleteRequest" : {
      "type" : "object",
      "properties" : {
        "objects" : {
          "type" : "array",
          "description" : "The objects to process",
          "items" : {
            "originalRef" : "Domain",
            "$ref" : "#/definitions/Domain"
          }
        },
        "query" : {
          "description" : "The query to fetch the object instead of defined list",
          "originalRef" : "Query",
          "$ref" : "#/definitions/Query"
        }
      }
    },
    "BulkDomainPatchRequest" : {
      "type" : "object",
      "properties" : {
        "objects" : {
          "type" : "array",
          "description" : "The objects to process",
          "items" : {
            "originalRef" : "Domain",
            "$ref" : "#/definitions/Domain"
          }
        },
        "template" : {
          "description" : "The template for objects to process",
          "originalRef" : "Domain",
          "$ref" : "#/definitions/Domain"
        },
        "query" : {
          "description" : "The query to fetch the object instead of defined list",
          "originalRef" : "Query",
          "$ref" : "#/definitions/Query"
        },
        "modifiers" : {
          "type" : "array",
          "description" : "The modifer to apply on the objects",
          "items" : {
            "originalRef" : "Modifier",
            "$ref" : "#/definitions/Modifier"
          }
        }
      }
    },
    "BulkDomainPostRequest" : {
      "type" : "object",
      "properties" : {
        "objects" : {
          "type" : "array",
          "description" : "The objects to process",
          "items" : {
            "originalRef" : "Domain",
            "$ref" : "#/definitions/Domain"
          }
        },
        "template" : {
          "description" : "The template for objects to process",
          "originalRef" : "Domain",
          "$ref" : "#/definitions/Domain"
        }
      }
    },
    "BulkMailProxyDeleteRequest" : {
      "type" : "object",
      "properties" : {
        "objects" : {
          "type" : "array",
          "description" : "The objects to process",
          "items" : {
            "originalRef" : "MailProxy",
            "$ref" : "#/definitions/MailProxy"
          }
        },
        "query" : {
          "description" : "The query to fetch the object instead of defined list",
          "originalRef" : "Query",
          "$ref" : "#/definitions/Query"
        }
      }
    },
    "BulkMailProxyPatchRequest" : {
      "type" : "object",
      "properties" : {
        "objects" : {
          "type" : "array",
          "description" : "The objects to process",
          "items" : {
            "originalRef" : "MailProxy",
            "$ref" : "#/definitions/MailProxy"
          }
        },
        "template" : {
          "description" : "The template for objects to process",
          "originalRef" : "MailProxy",
          "$ref" : "#/definitions/MailProxy"
        },
        "query" : {
          "description" : "The query to fetch the object instead of defined list",
          "originalRef" : "Query",
          "$ref" : "#/definitions/Query"
        }
      }
    },
    "BulkMailProxyPostRequest" : {
      "type" : "object",
      "properties" : {
        "objects" : {
          "type" : "array",
          "description" : "The objects to process",
          "items" : {
            "originalRef" : "MailProxy",
            "$ref" : "#/definitions/MailProxy"
          }
        },
        "template" : {
          "description" : "The template for objects to process",
          "originalRef" : "MailProxy",
          "$ref" : "#/definitions/MailProxy"
        }
      }
    },
    "BulkRedirectDeleteRequest" : {
      "type" : "object",
      "properties" : {
        "objects" : {
          "type" : "array",
          "description" : "The objects to process",
          "items" : {
            "originalRef" : "Redirect",
            "$ref" : "#/definitions/Redirect"
          }
        },
        "query" : {
          "description" : "The query to fetch the object instead of defined list",
          "originalRef" : "Query",
          "$ref" : "#/definitions/Query"
        }
      }
    },
    "BulkRedirectPatchRequest" : {
      "type" : "object",
      "properties" : {
        "objects" : {
          "type" : "array",
          "description" : "The objects to process",
          "items" : {
            "originalRef" : "Redirect",
            "$ref" : "#/definitions/Redirect"
          }
        },
        "template" : {
          "description" : "The template for objects to process",
          "originalRef" : "Redirect",
          "$ref" : "#/definitions/Redirect"
        },
        "query" : {
          "description" : "The query to fetch the object instead of defined list",
          "originalRef" : "Query",
          "$ref" : "#/definitions/Query"
        }
      }
    },
    "BulkRedirectPostRequest" : {
      "type" : "object",
      "properties" : {
        "objects" : {
          "type" : "array",
          "description" : "The objects to process",
          "items" : {
            "originalRef" : "Redirect",
            "$ref" : "#/definitions/Redirect"
          }
        },
        "template" : {
          "description" : "The template for objects to process",
          "originalRef" : "Redirect",
          "$ref" : "#/definitions/Redirect"
        }
      }
    },
    "BulkZoneCommentRequest" : {
      "type" : "object",
      "properties" : {
        "objects" : {
          "type" : "array",
          "description" : "The objects to process",
          "items" : {
            "originalRef" : "Zone",
            "$ref" : "#/definitions/Zone"
          }
        },
        "template" : {
          "description" : "The template for objects to process",
          "originalRef" : "Zone",
          "$ref" : "#/definitions/Zone"
        },
        "query" : {
          "description" : "The query to fetch the object instead of defined list",
          "originalRef" : "Query",
          "$ref" : "#/definitions/Query"
        }
      }
    },
    "BulkZoneDeleteRequest" : {
      "type" : "object",
      "properties" : {
        "objects" : {
          "type" : "array",
          "description" : "The objects to process",
          "items" : {
            "originalRef" : "Zone",
            "$ref" : "#/definitions/Zone"
          }
        },
        "query" : {
          "description" : "The query to fetch the object instead of defined list",
          "originalRef" : "Query",
          "$ref" : "#/definitions/Query"
        }
      }
    },
    "BulkZonePatchRequest" : {
      "type" : "object",
      "properties" : {
        "objects" : {
          "type" : "array",
          "description" : "The objects to process",
          "items" : {
            "originalRef" : "ZoneBasePatchRequest",
            "$ref" : "#/definitions/ZoneBasePatchRequest"
          }
        },
        "template" : {
          "description" : "The template for objects to process",
          "originalRef" : "ZoneBasePatchRequest",
          "$ref" : "#/definitions/ZoneBasePatchRequest"
        },
        "query" : {
          "description" : "The query to fetch the object instead of defined list",
          "originalRef" : "Query",
          "$ref" : "#/definitions/Query"
        },
        "modifiers" : {
          "type" : "array",
          "description" : "The modifer to apply on the objects",
          "items" : {
            "originalRef" : "Modifier",
            "$ref" : "#/definitions/Modifier"
          }
        }
      }
    },
    "BulkZonePostRequest" : {
      "type" : "object",
      "properties" : {
        "objects" : {
          "type" : "array",
          "description" : "The objects to process",
          "items" : {
            "originalRef" : "Zone",
            "$ref" : "#/definitions/Zone"
          }
        },
        "template" : {
          "description" : "The template for objects to process",
          "originalRef" : "Zone",
          "$ref" : "#/definitions/Zone"
        }
      }
    },
    "BusinessCategory" : {
      "type" : "string",
      "enum" : [ "PRIVATE_ORGANIZATION", "GOVERNMENT_ENTITY", "BUSINESS_ENTITY" ]
    },
    "CaCertificate" : {
      "type" : "object",
      "properties" : {
        "created" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The created date."
        },
        "updated" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The updated date."
        },
        "caType" : {
          "type" : "string",
          "description" : "The type of the intermediate certificate."
        },
        "caCertificate" : {
          "type" : "string",
          "description" : "The plain intermediate certificate."
        }
      }
    },
    "CancelationStatusConstants" : {
      "type" : "string",
      "enum" : [ "DELETE", "DELETE_EXPIRE", "TRANSIT", "TRANSIT_EXPIRE", "PREACK", "PREACK_EXPIRE" ]
    },
    "CancelationTypeConstants" : {
      "type" : "string",
      "enum" : [ "DELETE", "TRANSIT", "PREACK" ]
    },
    "Card" : {
      "type" : "object",
      "properties" : {
        "created" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The created date."
        },
        "updated" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The updated date."
        },
        "type" : {
          "description" : "The credit card vendor",
          "originalRef" : "CreditCardVendor",
          "$ref" : "#/definitions/CreditCardVendor"
        },
        "status" : {
          "description" : "The actual status of the credit card",
          "originalRef" : "CardStatus",
          "$ref" : "#/definitions/CardStatus"
        },
        "validFrom" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The valid from date"
        },
        "validTo" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The valid to date"
        }
      }
    },
    "CardStatus" : {
      "type" : "string",
      "enum" : [ "LOST", "EXPIRED", "ACTIVE" ]
    },
    "CertAuthentication" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "The domain name the authentication data belongs to."
        },
        "method" : {
          "description" : "The authentication method.",
          "originalRef" : "AuthMethodConstants",
          "$ref" : "#/definitions/AuthMethodConstants"
        },
        "dns" : {
          "type" : "string",
          "description" : "The dns entry for dns based authentication."
        },
        "fileName" : {
          "type" : "string",
          "description" : "The filename for file based authentication."
        },
        "fileContent" : {
          "type" : "string",
          "description" : "The content for file based authentication."
        },
        "approverEmails" : {
          "type" : "array",
          "description" : "The approver addresses for email based authentication.",
          "items" : {
            "type" : "string"
          }
        },
        "provisioning" : {
          "type" : "boolean",
          "description" : "Activates automatic provisioning of the zone for dns based authentication."
        }
      }
    },
    "Certificate" : {
      "type" : "object",
      "required" : [ "lifetime", "product", "software" ],
      "properties" : {
        "created" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The created date."
        },
        "updated" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The updated date."
        },
        "owner" : {
          "description" : "The owner of the object.",
          "originalRef" : "BasicUser",
          "$ref" : "#/definitions/BasicUser"
        },
        "updater" : {
          "description" : "The updating user of the object.",
          "originalRef" : "BasicUser",
          "$ref" : "#/definitions/BasicUser"
        },
        "extension" : {
          "description" : "The certificate extensions for comodo.",
          "originalRef" : "ExtendedValidationExtension",
          "$ref" : "#/definitions/ExtendedValidationExtension"
        },
        "id" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The ID of the certificate"
        },
        "partnerOrderId" : {
          "type" : "string",
          "description" : "The order number of the related request"
        },
        "orderId" : {
          "type" : "string",
          "description" : "The unique certificate order number"
        },
        "adminContact" : {
          "description" : "The administrative contact",
          "originalRef" : "SslContact",
          "$ref" : "#/definitions/SslContact"
        },
        "technicalContact" : {
          "description" : "The technical contact",
          "originalRef" : "SslContact",
          "$ref" : "#/definitions/SslContact"
        },
        "name" : {
          "type" : "string",
          "description" : "The name of the certificate"
        },
        "lifetime" : {
          "description" : "The certificate term in months",
          "originalRef" : "TimePeriod",
          "$ref" : "#/definitions/TimePeriod"
        },
        "software" : {
          "description" : "The webserver software in use, relevant values: 'II5' for Mircosoft, 'APACHE2' for Linux",
          "originalRef" : "ServerSoftwareTypeConstants",
          "$ref" : "#/definitions/ServerSoftwareTypeConstants"
        },
        "comment" : {
          "type" : "string",
          "description" : "A custom field. Can only be updated via PUT /certificate/{id}/_comment. Requires appropriate ACLs."
        },
        "csr" : {
          "type" : "string",
          "description" : "CSR - Key (Certificate Signing Request)"
        },
        "server" : {
          "type" : "string",
          "description" : "The certificate"
        },
        "serialNumber" : {
          "type" : "string",
          "description" : "Serial number of the certificate"
        },
        "product" : {
          "type" : "string",
          "description" : "The ordered product"
        },
        "codeSigningType" : {
          "description" : "The type of code signing",
          "originalRef" : "CodeSigningType",
          "$ref" : "#/definitions/CodeSigningType"
        },
        "certificateType" : {
          "description" : "The type of the certificate",
          "originalRef" : "CertificateType",
          "$ref" : "#/definitions/CertificateType"
        },
        "signatureHashAlgorithm" : {
          "description" : "The signature hash algorithm which was used",
          "originalRef" : "SignatureHashAlgorithmConstants",
          "$ref" : "#/definitions/SignatureHashAlgorithmConstants"
        },
        "expire" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The date on which the certificate expires"
        },
        "subjectAlternativeNames" : {
          "type" : "array",
          "description" : "Subject Alternative Names (SANs)",
          "items" : {
            "originalRef" : "SubjectAlternativeName",
            "$ref" : "#/definitions/SubjectAlternativeName"
          }
        },
        "histories" : {
          "type" : "array",
          "description" : "The history of the certificate (old certificate versions)",
          "items" : {
            "originalRef" : "CertificateHistory",
            "$ref" : "#/definitions/CertificateHistory"
          }
        },
        "certificationAuthority" : {
          "type" : "array",
          "description" : "The certificate authority chain",
          "items" : {
            "originalRef" : "CaCertificate",
            "$ref" : "#/definitions/CaCertificate"
          }
        },
        "password" : {
          "type" : "string",
          "description" : "The password that is to be used for the certificate download. Only for S/MIME!",
          "pattern" : "^[-a-zA-Z0-9 ]{8,32}$"
        },
        "firstname" : {
          "type" : "string",
          "description" : "First Name. Only for S/MIME!"
        },
        "lastname" : {
          "type" : "string",
          "description" : "Last Name. Only for S/MIME!"
        },
        "organizationUnitName" : {
          "type" : "string",
          "description" : "The organization unit. Only for S/MIME!"
        },
        "authentication" : {
          "description" : "The authentication of the certificate",
          "originalRef" : "CertAuthentication",
          "$ref" : "#/definitions/CertAuthentication"
        },
        "certificateTransparency" : {
          "type" : "boolean",
          "description" : "Activates the certificate transparency for a certificate. Default is \"True\"."
        },
        "certificateTransparencyPrivacy" : {
          "description" : "The privacy settings for certificate transparency. Default is \"Redacted\".",
          "originalRef" : "CertificateTransparencyPrivacyConstants",
          "$ref" : "#/definitions/CertificateTransparencyPrivacyConstants"
        },
        "domain" : {
          "type" : "string",
          "description" : "The domain, which the redirect belongs."
        },
        "hasCsr" : {
          "type" : "boolean",
          "description" : "States if a self created CSR is to be used for S/MIME. Default is false. Only for S/MIME!"
        },
        "idn" : {
          "type" : "string",
          "description" : "The IDN version of the URL of the target domain."
        }
      }
    },
    "CertificateData" : {
      "type" : "object",
      "properties" : {
        "plain" : {
          "type" : "string",
          "description" : "The plain csr."
        },
        "name" : {
          "type" : "string",
          "description" : "The common name."
        },
        "san" : {
          "type" : "array",
          "description" : "The subject alternative names, listed in the csr.",
          "items" : {
            "type" : "string"
          }
        },
        "histories" : {
          "type" : "array",
          "description" : "The certificate history.",
          "items" : {
            "originalRef" : "CertificateHistory",
            "$ref" : "#/definitions/CertificateHistory"
          }
        },
        "keySize" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The size of the csr key."
        },
        "countryCode" : {
          "type" : "string",
          "description" : "The country code defined in the csr."
        },
        "challengePassword" : {
          "type" : "string",
          "description" : "The password defined in the csr."
        },
        "state" : {
          "type" : "string",
          "description" : "The state defined in the csr."
        },
        "city" : {
          "type" : "string",
          "description" : "The city defined in the csr."
        },
        "organization" : {
          "type" : "string",
          "description" : "The organization defined in the csr."
        },
        "organizationUnit" : {
          "type" : "string",
          "description" : "The organization unit defined in the csr."
        },
        "email" : {
          "type" : "string",
          "description" : "The email defined in the csr."
        },
        "product" : {
          "type" : "string",
          "description" : "The ssl product."
        },
        "authentication" : {
          "type" : "array",
          "description" : "The authentication data.",
          "items" : {
            "originalRef" : "CertAuthentication",
            "$ref" : "#/definitions/CertAuthentication"
          }
        },
        "algorithm" : {
          "description" : "The csr algorithm.",
          "originalRef" : "CsrHashAlgorithmConstants",
          "$ref" : "#/definitions/CsrHashAlgorithmConstants"
        },
        "signatureHashAlgorithm" : {
          "description" : "The signature hash algorithm.",
          "originalRef" : "SignatureHashAlgorithmConstants",
          "$ref" : "#/definitions/SignatureHashAlgorithmConstants"
        },
        "idn" : {
          "type" : "string",
          "description" : "The idn version of the common name."
        },
        "checkCaa" : {
          "type" : "boolean",
          "description" : "Activates the caa record check."
        }
      }
    },
    "CertificateHistory" : {
      "type" : "object",
      "properties" : {
        "serialNumber" : {
          "type" : "string",
          "description" : "The serialnumber of the certificate."
        },
        "revoked" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The revoked date of the certificate."
        }
      }
    },
    "CertificateTransparencyPrivacyConstants" : {
      "type" : "string",
      "enum" : [ "PUBLIC", "REDACTED" ]
    },
    "CertificateType" : {
      "type" : "string",
      "enum" : [ "FQDN", "MAIL", "CODE" ]
    },
    "CiraCprConstants" : {
      "type" : "string",
      "enum" : [ "CCT", "RES", "CCO", "ABO", "TDM", "MAJ", "GOV", "LGR", "TRS", "PRT", "ASS", "TRD", "PLT", "EDU", "LAM", "HOP", "INB", "OMK" ]
    },
    "ClearAccountPeriod" : {
      "type" : "string",
      "enum" : [ "DAY", "MONTH", "BILL", "WEEK", "NONE" ]
    },
    "CodeSigningType" : {
      "type" : "string",
      "enum" : [ "JAVASOFT", "MS_AUTHENTICODE", "VBA", "ADOBE_AIR", "APPLE" ]
    },
    "ConditionType" : {
      "type" : "string",
      "enum" : [ "AND", "OR" ]
    },
    "Configuration" : {
      "type" : "object"
    },
    "Contact" : {
      "type" : "object",
      "required" : [ "address", "city", "country", "lname", "pcode", "type" ],
      "properties" : {
        "created" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The created date."
        },
        "updated" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The updated date."
        },
        "id" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1,
          "description" : "The unique identifier of the contact"
        },
        "owner" : {
          "description" : "The owner of the object.",
          "originalRef" : "BasicUser",
          "$ref" : "#/definitions/BasicUser"
        },
        "updater" : {
          "description" : "The updating user of the object.",
          "originalRef" : "BasicUser",
          "$ref" : "#/definitions/BasicUser"
        },
        "alias" : {
          "type" : "string",
          "example" : "John-Doe-1",
          "description" : "The unique alias of the contact"
        },
        "type" : {
          "description" : "The type of the contact",
          "originalRef" : "ContactTypeConstants",
          "$ref" : "#/definitions/ContactTypeConstants"
        },
        "organization" : {
          "type" : "string",
          "example" : "Company",
          "description" : "The name of the organization"
        },
        "title" : {
          "type" : "string",
          "example" : "Dr.",
          "description" : "The title of the contact"
        },
        "city" : {
          "type" : "string",
          "example" : "Anytown",
          "description" : "The city of the contact"
        },
        "country" : {
          "type" : "string",
          "example" : "DE",
          "description" : "The country of the contact",
          "x-custom-type" : "country"
        },
        "state" : {
          "type" : "string",
          "example" : "BY",
          "description" : "The local country state of the contact",
          "x-custom-type" : "state"
        },
        "email" : {
          "type" : "string",
          "example" : "john.doe@domain.com",
          "description" : "The email of the contact",
          "x-custom-type" : "email"
        },
        "protection" : {
          "description" : "The protection of the contact",
          "originalRef" : "ContactProtectionConstants",
          "$ref" : "#/definitions/ContactProtectionConstants"
        },
        "sip" : {
          "type" : "string",
          "description" : "The sip of the contact"
        },
        "remarks" : {
          "type" : "array",
          "description" : "The remarks of the contact",
          "items" : {
            "type" : "string"
          }
        },
        "domainsafe" : {
          "type" : "boolean",
          "description" : "The nic references of the contact"
        },
        "confirmOwnerConsent" : {
          "type" : "boolean",
          "description" : "???"
        },
        "comment" : {
          "type" : "string",
          "description" : "The comment for the contact"
        },
        "verification" : {
          "description" : "The verification status of the contact",
          "originalRef" : "GenericStatusConstants",
          "$ref" : "#/definitions/GenericStatusConstants"
        },
        "fname" : {
          "type" : "string",
          "example" : "John",
          "description" : "The first name of the contact"
        },
        "lname" : {
          "type" : "string",
          "example" : "Doe",
          "description" : "The last name of the contact"
        },
        "address" : {
          "type" : "array",
          "description" : "The address of the contact.",
          "items" : {
            "type" : "string"
          },
          "maxItems" : 2147483647,
          "minItems" : 1
        },
        "pcode" : {
          "type" : "string",
          "example" : "12345",
          "description" : "The pcode of the contact"
        },
        "phone" : {
          "type" : "string",
          "example" : "+49-123-12345",
          "description" : "The phone number of the contact",
          "x-custom-type" : "phone"
        },
        "fax" : {
          "type" : "string",
          "example" : "+49-123-12345",
          "description" : "The fax number of the contact",
          "x-custom-type" : "phone"
        },
        "nicRef" : {
          "type" : "array",
          "description" : "The nic references of the contact",
          "items" : {
            "originalRef" : "ContactReference",
            "$ref" : "#/definitions/ContactReference"
          }
        },
        "extensions" : {
          "description" : "The contact extensions.",
          "originalRef" : "ContactExtensions",
          "$ref" : "#/definitions/ContactExtensions"
        }
      }
    },
    "ContactAeroExtensions" : {
      "type" : "object",
      "properties" : {
        "ensAuthId" : {
          "type" : "string",
          "description" : "Aero Authentication ID."
        },
        "ensKey" : {
          "type" : "string",
          "description" : "Aero ENS key."
        }
      }
    },
    "ContactAuExtensions" : {
      "type" : "object",
      "properties" : {
        "eligibilityId" : {
          "type" : "string",
          "description" : "The corresponding ID number for the eligibility name if applicable, if in doubt just use the same details as your Registrant ID."
        },
        "eligibilityIdType" : {
          "description" : "The type of Eligibility ID.",
          "originalRef" : "AuEligibilityIdTypeConstants",
          "$ref" : "#/definitions/AuEligibilityIdTypeConstants"
        },
        "eligibilityName" : {
          "type" : "string",
          "description" : "\tThis field is usually optional and whether it is required is determined by your policy reason for the domain registration, if in doubt just use the same details as your Registrant Name."
        },
        "eligibilityType" : {
          "description" : "The type of entity that the registrant is.",
          "originalRef" : "AuEligibilityTypeConstants",
          "$ref" : "#/definitions/AuEligibilityTypeConstants"
        },
        "policyReason" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Reason for eligibility."
        },
        "registrantId" : {
          "type" : "string",
          "description" : "Australian Business Number or Registered Business Number."
        },
        "registrantIdType" : {
          "description" : "Concerns the Registrant ID which you have selected in the Registrant ID form field.",
          "originalRef" : "AuRegistrantIdTypeConstants",
          "$ref" : "#/definitions/AuRegistrantIdTypeConstants"
        },
        "registrantName" : {
          "type" : "string",
          "description" : "The registrants name."
        }
      }
    },
    "ContactBankExtensions" : {
      "type" : "object",
      "properties" : {
        "ftldToken" : {
          "type" : "string",
          "description" : "The FTLD token."
        }
      }
    },
    "ContactBarcelonaExtensions" : {
      "type" : "object",
      "properties" : {
        "intededUse" : {
          "type" : "string",
          "description" : "The statement of intended use for the domain name."
        }
      }
    },
    "ContactBirthExtensions" : {
      "type" : "object",
      "properties" : {
        "country" : {
          "type" : "string",
          "description" : "The country.",
          "x-custom-type" : "country"
        },
        "day" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The day.",
          "x-custom-type" : "date"
        },
        "postalCode" : {
          "type" : "string",
          "description" : "The postalCode.",
          "x-custom-type" : "pcode"
        },
        "place" : {
          "type" : "string",
          "description" : "The place."
        }
      }
    },
    "ContactCaExtensions" : {
      "type" : "object",
      "properties" : {
        "cpr" : {
          "description" : "The cira cpr.",
          "originalRef" : "CiraCprConstants",
          "$ref" : "#/definitions/CiraCprConstants"
        },
        "agreementVersion" : {
          "type" : "number",
          "format" : "double",
          "description" : "The agreement version."
        },
        "originatingIp" : {
          "type" : "string",
          "description" : "The originating ip.",
          "x-custom-type" : "ip"
        },
        "officialRepresentative" : {
          "type" : "string",
          "description" : "The official representative."
        },
        "trusteePercentage" : {
          "type" : "number",
          "format" : "double",
          "description" : "The trustee percentage."
        }
      }
    },
    "ContactCatExtensions" : {
      "type" : "object",
      "properties" : {
        "intendedUse" : {
          "type" : "string",
          "description" : "The statement of intended use for the domain name."
        }
      }
    },
    "ContactExtensions" : {
      "type" : "object",
      "properties" : {
        "aero" : {
          "description" : "The .aero contact extensions.",
          "originalRef" : "ContactAeroExtensions",
          "$ref" : "#/definitions/ContactAeroExtensions"
        },
        "au" : {
          "description" : "The .au contact extensions.",
          "originalRef" : "ContactAuExtensions",
          "$ref" : "#/definitions/ContactAuExtensions"
        },
        "cat" : {
          "description" : "The .cat contact extensions.",
          "originalRef" : "ContactCatExtensions",
          "$ref" : "#/definitions/ContactCatExtensions"
        },
        "jobs" : {
          "description" : "The .jobs contact extensions.",
          "originalRef" : "ContactJobsExtensions",
          "$ref" : "#/definitions/ContactJobsExtensions"
        },
        "it" : {
          "description" : "The .it contact extensions.",
          "originalRef" : "ContactItExtensions",
          "$ref" : "#/definitions/ContactItExtensions"
        },
        "jp" : {
          "description" : "The .jp contact extensions.",
          "originalRef" : "ContactJpExtensions",
          "$ref" : "#/definitions/ContactJpExtensions"
        },
        "xxx" : {
          "description" : "The .xxx contact extensions.",
          "originalRef" : "ContactXxxExtensions",
          "$ref" : "#/definitions/ContactXxxExtensions"
        },
        "hk" : {
          "description" : "The .hk contact extensions.",
          "originalRef" : "ContactHkExtensions",
          "$ref" : "#/definitions/ContactHkExtensions"
        },
        "bank" : {
          "description" : "The .bank contact extensions.",
          "originalRef" : "ContactBankExtensions",
          "$ref" : "#/definitions/ContactBankExtensions"
        },
        "swiss" : {
          "description" : "The .swiss contact extensions.",
          "originalRef" : "ContactSwissExtensions",
          "$ref" : "#/definitions/ContactSwissExtensions"
        },
        "ru" : {
          "description" : "The .ru contact extensions.",
          "originalRef" : "ContactRuExtensions",
          "$ref" : "#/definitions/ContactRuExtensions"
        },
        "uk" : {
          "description" : "The .uk contact extensions.",
          "originalRef" : "ContactUkExtensions",
          "$ref" : "#/definitions/ContactUkExtensions"
        },
        "ca" : {
          "description" : "The .ca contact extensions.",
          "originalRef" : "ContactCaExtensions",
          "$ref" : "#/definitions/ContactCaExtensions"
        },
        "ro" : {
          "description" : "The .ro contact extensions.",
          "originalRef" : "ContactRoExtensions",
          "$ref" : "#/definitions/ContactRoExtensions"
        },
        "barcelona" : {
          "description" : "The .barcelona contact extensions.",
          "originalRef" : "ContactBarcelonaExtensions",
          "$ref" : "#/definitions/ContactBarcelonaExtensions"
        },
        "general" : {
          "description" : "The general contact extensions.",
          "originalRef" : "ContactGeneralExtensions",
          "$ref" : "#/definitions/ContactGeneralExtensions"
        },
        "nz" : {
          "description" : "The .nz contact extensions",
          "originalRef" : "ContactNzExtensions",
          "$ref" : "#/definitions/ContactNzExtensions"
        },
        "sport" : {
          "description" : "The .sport contact extensions.",
          "originalRef" : "ContactSportExtensions",
          "$ref" : "#/definitions/ContactSportExtensions"
        },
        "luxe" : {
          "description" : "The .luxe contact extensions.",
          "originalRef" : "ContactLuxeExtensions",
          "$ref" : "#/definitions/ContactLuxeExtensions"
        },
        "madrid" : {
          "description" : "The .madrid contact extensions.",
          "originalRef" : "ContactMadridExtensions",
          "$ref" : "#/definitions/ContactMadridExtensions"
        }
      }
    },
    "ContactGeneralExtensions" : {
      "type" : "object",
      "properties" : {
        "birth" : {
          "description" : "The birth extensions.",
          "originalRef" : "ContactBirthExtensions",
          "$ref" : "#/definitions/ContactBirthExtensions"
        },
        "trademark" : {
          "description" : "The trademark extensions.",
          "originalRef" : "ContactTrademarkExtensions",
          "$ref" : "#/definitions/ContactTrademarkExtensions"
        },
        "identification" : {
          "description" : "The identification extensions.",
          "originalRef" : "ContactIdentificationExtensions",
          "$ref" : "#/definitions/ContactIdentificationExtensions"
        },
        "language" : {
          "type" : "string",
          "description" : "The language.",
          "x-custom-type" : "language"
        },
        "companyNumber" : {
          "type" : "string",
          "description" : "The company number."
        },
        "gender" : {
          "description" : "The gender.",
          "originalRef" : "GenderConstants",
          "$ref" : "#/definitions/GenderConstants"
        },
        "vatNumber" : {
          "type" : "string",
          "description" : "The vatnumber."
        },
        "citizenship" : {
          "type" : "string",
          "description" : "The citizenship.",
          "x-custom-type" : "country"
        },
        "mobilePhone" : {
          "type" : "string",
          "description" : "The mobile phonenumber.",
          "x-custom-type" : "phone"
        }
      }
    },
    "ContactHkExtensions" : {
      "type" : "object",
      "properties" : {
        "documentType" : {
          "description" : "The document types.",
          "originalRef" : "HkDocumentTypeConstants",
          "$ref" : "#/definitions/HkDocumentTypeConstants"
        },
        "others" : {
          "type" : "string",
          "description" : "Additional descriptions for OTHIDV and OTHORG."
        },
        "documentNumber" : {
          "type" : "string",
          "description" : "Document number."
        },
        "documentOrigin" : {
          "type" : "string",
          "description" : "Country of licensure.",
          "x-custom-type" : "country"
        },
        "above18" : {
          "type" : "boolean",
          "description" : "Is the person 18 years of age or older. For Person only."
        },
        "industryType" : {
          "description" : "The industry types.",
          "originalRef" : "HkIndustryTypeConstants",
          "$ref" : "#/definitions/HkIndustryTypeConstants"
        }
      }
    },
    "ContactIdentificationExtensions" : {
      "type" : "object",
      "properties" : {
        "number" : {
          "type" : "string",
          "description" : "The number."
        },
        "authority" : {
          "type" : "string",
          "description" : "The authority."
        },
        "dateOfIssue" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The date of issue.",
          "x-custom-type" : "date"
        },
        "validTill" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The valid till date.",
          "x-custom-type" : "date"
        }
      }
    },
    "ContactItExtensions" : {
      "type" : "object",
      "properties" : {
        "entityType" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The number of the matching entity."
        }
      }
    },
    "ContactJobsExtensions" : {
      "type" : "object",
      "properties" : {
        "adminType" : {
          "type" : "boolean",
          "description" : "Contact is the administrative contact with the permission to act as an independent agent / recruiter on behalf of the listed registrant."
        },
        "contactTitle" : {
          "type" : "string",
          "description" : "Title of the domain contact in the organization."
        },
        "hrMember" : {
          "type" : "boolean",
          "description" : "Choose whether the contact is is a member of the Human Resource Organization"
        },
        "industryClass" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The Industry class."
        },
        "website" : {
          "type" : "string",
          "description" : "The Website.",
          "x-custom-type" : "uri"
        }
      }
    },
    "ContactJpExtensions" : {
      "type" : "object",
      "properties" : {
        "first" : {
          "type" : "string",
          "description" : "The first name."
        },
        "last" : {
          "type" : "string",
          "description" : "The last name."
        },
        "organization" : {
          "type" : "string",
          "description" : "The organization."
        },
        "adressLine1" : {
          "type" : "string",
          "description" : "The first line of the address."
        },
        "adressLine2" : {
          "type" : "string",
          "description" : "The second line of the address."
        },
        "adressLine3" : {
          "type" : "string",
          "description" : "The third line of the address."
        }
      }
    },
    "ContactLuxeExtensions" : {
      "type" : "object",
      "properties" : {
        "walletAddress" : {
          "type" : "string",
          "description" : "The .luxe wallet address"
        }
      }
    },
    "ContactMadridExtensions" : {
      "type" : "object",
      "properties" : {
        "intendedUse" : {
          "type" : "string",
          "description" : "The statement of intended use for the domain name."
        }
      }
    },
    "ContactNzExtensions" : {
      "type" : "object",
      "properties" : {
        "irpo" : {
          "type" : "boolean",
          "description" : "The irpo."
        }
      }
    },
    "ContactProtectionConstants" : {
      "type" : "string",
      "enum" : [ "SHOW_ALL", "SHOW_NONE" ]
    },
    "ContactReference" : {
      "type" : "object",
      "properties" : {
        "nic" : {
          "description" : "The nic",
          "originalRef" : "NicMember",
          "$ref" : "#/definitions/NicMember"
        },
        "status" : {
          "description" : "The status",
          "originalRef" : "ObjectStatus",
          "$ref" : "#/definitions/ObjectStatus"
        },
        "type" : {
          "description" : "The contact reference type",
          "originalRef" : "ContactReferenceType",
          "$ref" : "#/definitions/ContactReferenceType"
        },
        "role" : {
          "description" : "The role as contact reference type",
          "originalRef" : "ContactReferenceType",
          "$ref" : "#/definitions/ContactReferenceType"
        },
        "name" : {
          "type" : "string",
          "description" : "The nic reference"
        }
      }
    },
    "ContactReferenceType" : {
      "type" : "string",
      "enum" : [ "ALL", "OWNERC", "ADMINC", "TECHC", "ZONEC", "BILLINGC" ]
    },
    "ContactRoExtensions" : {
      "type" : "object",
      "properties" : {
        "personType" : {
          "description" : "The entity person type.",
          "originalRef" : "RoPersonTypeConstants",
          "$ref" : "#/definitions/RoPersonTypeConstants"
        }
      }
    },
    "ContactRuExtensions" : {
      "type" : "object",
      "properties" : {
        "taxpayerIdentificationNumber" : {
          "type" : "string",
          "description" : "Taxpayer Identification Number (code). Mandatory for organisations which belong to the Russian Federation."
        },
        "territoryLinkedTaxpayerNumber" : {
          "type" : "string",
          "description" : "Territory-linked Taxpayer Number (kpp). Mandatory for organisations which belong to the Russian Federation."
        }
      }
    },
    "ContactSportExtensions" : {
      "type" : "object",
      "properties" : {
        "intendedUse" : {
          "type" : "string",
          "description" : "The intended use."
        }
      }
    },
    "ContactSwissExtensions" : {
      "type" : "object",
      "properties" : {
        "enterpriseId" : {
          "type" : "string",
          "description" : "The enterprise ID, in the specific context of .swiss based on current rules, is the Swiss UID/IDE/IDI."
        },
        "intededUse" : {
          "type" : "string",
          "description" : "The statement of intended use for the domain name."
        }
      }
    },
    "ContactTrademarkExtensions" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "The name."
        },
        "number" : {
          "type" : "string",
          "description" : "The number."
        },
        "country" : {
          "type" : "string",
          "description" : "The country.",
          "x-custom-type" : "country"
        },
        "regdate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The registration date.",
          "x-custom-type" : "date"
        },
        "appdate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The application date.",
          "x-custom-type" : "date"
        },
        "office" : {
          "type" : "string",
          "description" : "The office."
        }
      }
    },
    "ContactTypeConstants" : {
      "type" : "string",
      "enum" : [ "PERSON", "ORG", "ROLE" ]
    },
    "ContactUkExtensions" : {
      "type" : "object",
      "properties" : {
        "entityType" : {
          "description" : "The entity type.",
          "originalRef" : "UkTypeConstants",
          "$ref" : "#/definitions/UkTypeConstants"
        }
      }
    },
    "ContactVerificationDomain" : {
      "type" : "object",
      "properties" : {
        "created" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The created date."
        },
        "updated" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The updated date."
        },
        "name" : {
          "type" : "string",
          "description" : "the domain of the Verification"
        },
        "idn" : {
          "type" : "string",
          "description" : "the idn domain"
        },
        "status" : {
          "description" : "the status of the domain Verification",
          "originalRef" : "GenericStatusConstants",
          "$ref" : "#/definitions/GenericStatusConstants"
        },
        "deactivation" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "the deactivation of the domain Verification"
        }
      }
    },
    "ContactVerificationMessage" : {
      "type" : "object",
      "properties" : {
        "created" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The created date."
        },
        "updated" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The updated date."
        },
        "mail" : {
          "description" : "the email of the VerificationMessage",
          "originalRef" : "Message",
          "$ref" : "#/definitions/Message"
        },
        "status" : {
          "description" : "the status of the VerificationMessage",
          "originalRef" : "GenericStatusConstants",
          "$ref" : "#/definitions/GenericStatusConstants"
        }
      }
    },
    "ContactXxxExtensions" : {
      "type" : "object",
      "properties" : {
        "membershipID" : {
          "type" : "string",
          "description" : "Membership ID (token) for the .XXX community."
        },
        "nonResolverDomain" : {
          "type" : "boolean",
          "description" : "XXX community membership available or not."
        }
      }
    },
    "CreditCardVendor" : {
      "type" : "string",
      "enum" : [ "MC", "VISA", "AMEX", "DIC", "DISC", "CB" ]
    },
    "CryptoFormatConstants" : {
      "type" : "string",
      "enum" : [ "SHA1", "SHA256", "SHA512" ]
    },
    "CsrHashAlgorithmConstants" : {
      "type" : "string",
      "enum" : [ "ECC", "RSA", "DSA" ]
    },
    "Currency" : {
      "type" : "object"
    },
    "CurrencyRate" : {
      "type" : "object",
      "properties" : {
        "currency" : {
          "type" : "string",
          "example" : "EUR",
          "description" : "The currency of the exchange",
          "x-custom-type" : "currency"
        },
        "rate" : {
          "type" : "number",
          "format" : "double",
          "description" : "the rate of the exchange"
        }
      }
    },
    "Customer" : {
      "type" : "object",
      "required" : [ "addressLines", "city", "client", "country", "name", "number", "payment", "pcode" ],
      "properties" : {
        "number" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Lorem Ipsum"
        },
        "client" : {
          "type" : "string",
          "description" : "Lorem Ipsum",
          "minLength" : 1,
          "maxLength" : 2147483647
        },
        "group" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Lorem Ipsum"
        },
        "name" : {
          "type" : "string",
          "description" : "The name of the customer.",
          "minLength" : 0,
          "maxLength" : 255
        },
        "organization" : {
          "type" : "string",
          "description" : "The name of the organization.",
          "minLength" : 0,
          "maxLength" : 70
        },
        "vatNumber" : {
          "type" : "string",
          "description" : "The value added tax number."
        },
        "gender" : {
          "description" : "The gender of the person.",
          "originalRef" : "GenderConstants",
          "$ref" : "#/definitions/GenderConstants"
        },
        "title" : {
          "type" : "string",
          "description" : "The title of the customer"
        },
        "addressLines" : {
          "type" : "array",
          "description" : "The address of the customer",
          "items" : {
            "type" : "string"
          },
          "maxItems" : 2147483647,
          "minItems" : 1
        },
        "city" : {
          "type" : "string",
          "description" : "The city of the customer."
        },
        "state" : {
          "type" : "string",
          "description" : "The state of the customer."
        },
        "country" : {
          "type" : "string",
          "description" : "The country of the customer."
        },
        "phone" : {
          "description" : "The phone number.",
          "originalRef" : "Phone",
          "$ref" : "#/definitions/Phone"
        },
        "fax" : {
          "description" : "The fax number.",
          "originalRef" : "Phone",
          "$ref" : "#/definitions/Phone"
        },
        "emails" : {
          "type" : "array",
          "description" : "The email addresses.",
          "items" : {
            "type" : "string"
          },
          "maxItems" : 2147483647,
          "minItems" : 1
        },
        "billingEmails" : {
          "type" : "array",
          "description" : "The billing recipients.",
          "items" : {
            "type" : "string"
          }
        },
        "payment" : {
          "description" : "The payment typ of the customer.",
          "originalRef" : "PaymentConstants",
          "$ref" : "#/definitions/PaymentConstants"
        },
        "paymentMode" : {
          "type" : "string",
          "description" : "The payment mode of the customer."
        },
        "paymentCurrency" : {
          "description" : "The payment currency of the customer.",
          "originalRef" : "Currency",
          "$ref" : "#/definitions/Currency"
        },
        "invoiceLanguage" : {
          "type" : "string",
          "description" : "The language to use for the invoice."
        },
        "taxable" : {
          "type" : "boolean",
          "description" : "The taxable flag of the customer."
        },
        "card" : {
          "description" : "The customers minimal credit card data if payament was post with credit card.",
          "originalRef" : "Card",
          "$ref" : "#/definitions/Card"
        },
        "contracts" : {
          "type" : "array",
          "description" : "The customers contracts.",
          "items" : {
            "originalRef" : "CustomerContract",
            "$ref" : "#/definitions/CustomerContract"
          }
        },
        "billingUsers" : {
          "type" : "array",
          "description" : "The billing users.",
          "items" : {
            "originalRef" : "BasicUser",
            "$ref" : "#/definitions/BasicUser"
          }
        },
        "account" : {
          "description" : "The account of the customer in case of prepayment or if the customer has a credit limit",
          "originalRef" : "Account",
          "$ref" : "#/definitions/Account"
        },
        "clearAccount" : {
          "description" : "The period after the post payment account will be cleared to zero",
          "originalRef" : "ClearAccountPeriod",
          "$ref" : "#/definitions/ClearAccountPeriod"
        },
        "fname" : {
          "type" : "string",
          "description" : "The first name.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "lname" : {
          "type" : "string",
          "description" : "The last name.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "pcode" : {
          "type" : "string",
          "description" : "The postal code of the city."
        },
        "sepa" : {
          "description" : "The customers sepa mandate if payament was post with sepa.",
          "originalRef" : "SEPAMandate",
          "$ref" : "#/definitions/SEPAMandate"
        }
      }
    },
    "CustomerContract" : {
      "type" : "object",
      "required" : [ "contract" ],
      "properties" : {
        "created" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The created date."
        },
        "updated" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The updated date."
        },
        "contract" : {
          "description" : "The contract.",
          "originalRef" : "GenericLabelEntity",
          "$ref" : "#/definitions/GenericLabelEntity"
        },
        "notice" : {
          "type" : "string",
          "description" : "The notices."
        },
        "ticketNumber" : {
          "type" : "string",
          "description" : "The ticketing number if available."
        }
      }
    },
    "DNSCheck" : {
      "type" : "string",
      "enum" : [ "SOA", "NS", "ALL", "NONE" ]
    },
    "DNSSec" : {
      "type" : "object",
      "required" : [ "algorithm", "flags", "protocol", "publicKey" ],
      "properties" : {
        "algorithm" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The algorithm."
        },
        "flags" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The flags.",
          "minimum" : 256,
          "maximum" : 257
        },
        "protocol" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The protocol."
        },
        "publicKey" : {
          "type" : "string",
          "description" : "The public key.",
          "pattern" : "^[\\sA-Za-z0-9+\\/]+[=]*$"
        }
      }
    },
    "DNSSecJob" : {
      "type" : "object"
    },
    "Document" : {
      "type" : "object",
      "properties" : {
        "created" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The created date."
        },
        "updated" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The updated date."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Lorem Ipsum"
        },
        "comment" : {
          "type" : "string",
          "description" : "Lorem Ipsum"
        },
        "type" : {
          "type" : "string",
          "description" : "Lorem Ipsum"
        },
        "mimeType" : {
          "type" : "string",
          "description" : "Lorem Ipsum"
        },
        "data" : {
          "type" : "string",
          "description" : "Lorem Ipsum"
        },
        "size" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Lorem Ipsum"
        },
        "name" : {
          "type" : "string",
          "description" : "Lorem Ipsum"
        },
        "link" : {
          "type" : "string",
          "description" : "Lorem Ipsum"
        }
      }
    },
    "Domain" : {
      "type" : "object",
      "required" : [ "name", "payable", "removeCancelation" ],
      "properties" : {
        "created" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The created date."
        },
        "updated" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The updated date."
        },
        "owner" : {
          "description" : "The owner of the object.",
          "originalRef" : "BasicUser",
          "$ref" : "#/definitions/BasicUser"
        },
        "updater" : {
          "description" : "The updater of the object.",
          "originalRef" : "BasicUser",
          "$ref" : "#/definitions/BasicUser"
        },
        "name" : {
          "type" : "string",
          "example" : "domain.de",
          "description" : "The name of the domain."
        },
        "idn" : {
          "type" : "string",
          "example" : "müller.org",
          "description" : "The unicode domain name"
        },
        "nicMemberLabel" : {
          "type" : "string",
          "description" : "The nic member label."
        },
        "registryStatus" : {
          "description" : "The registry status.",
          "originalRef" : "RegistryStatusConstants",
          "$ref" : "#/definitions/RegistryStatusConstants"
        },
        "nameServers" : {
          "type" : "array",
          "description" : "The nameservers.",
          "items" : {
            "originalRef" : "NameServer",
            "$ref" : "#/definitions/NameServer"
          }
        },
        "nameServerEntries" : {
          "type" : "array",
          "description" : "NSentry is only be provided for .DE. If NSentry is used, nameServers is not allowed.",
          "items" : {
            "type" : "string"
          }
        },
        "period" : {
          "description" : "The renew period in years.",
          "originalRef" : "TimePeriod",
          "$ref" : "#/definitions/TimePeriod"
        },
        "trustee" : {
          "type" : "boolean",
          "description" : "Enable trustee service for the domain."
        },
        "privacy" : {
          "type" : "boolean",
          "description" : "Enable privacy service for the domain."
        },
        "authinfo" : {
          "type" : "string",
          "description" : "The authinfo."
        },
        "domainsafe" : {
          "type" : "boolean",
          "description" : "Enable domainsafe."
        },
        "parking" : {
          "description" : "The parking provider.",
          "originalRef" : "ParkingProviderConstants",
          "$ref" : "#/definitions/ParkingProviderConstants"
        },
        "extensions" : {
          "description" : "The domain extensions.",
          "originalRef" : "DomainExtensions",
          "$ref" : "#/definitions/DomainExtensions"
        },
        "logId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The logId"
        },
        "nsCheck" : {
          "description" : "An additional nameserver check will be carried out.",
          "originalRef" : "DNSCheck",
          "$ref" : "#/definitions/DNSCheck"
        },
        "confirmOrder" : {
          "type" : "boolean",
          "description" : "Some TLDs require a confirmation of the “Terms and Conditions of Registration."
        },
        "confirmOwnerConsent" : {
          "type" : "boolean",
          "description" : "Confirms the consent of the domainowner for the changes. Required for gTLDs and new gTLDs when changing the name, the email address or the organization of the domain owner."
        },
        "ignoreWhois" : {
          "type" : "boolean",
          "description" : "Ignore whois."
        },
        "comment" : {
          "type" : "string",
          "description" : "A custom field. Can only be updated via PUT /domain/{name}/_comment. Requires appropriate ACLs."
        },
        "includeWWW" : {
          "type" : "boolean",
          "description" : "Enable utomatic creation of the www subdomain."
        },
        "includeWildcard" : {
          "type" : "boolean",
          "description" : "Enable include wildcard."
        },
        "registrarStatus" : {
          "description" : "The registrar status.",
          "originalRef" : "RegistryStatusConstants",
          "$ref" : "#/definitions/RegistryStatusConstants"
        },
        "registrarStatusReason" : {
          "type" : "string",
          "description" : "The registrar status reason."
        },
        "removeCancelation" : {
          "type" : "boolean",
          "description" : "Remove cancelation."
        },
        "autodnsSecJob" : {
          "description" : "AutodnsSecJob",
          "originalRef" : "DNSSecJob",
          "$ref" : "#/definitions/DNSSecJob"
        },
        "priceClass" : {
          "type" : "string",
          "description" : "The priceclass for the registration of the domain."
        },
        "priceClassRenew" : {
          "type" : "string",
          "description" : "The priceclass for the renew of the domain."
        },
        "abuseEmail" : {
          "type" : "string",
          "description" : "The abuse email."
        },
        "generalRequestEmail" : {
          "type" : "string",
          "description" : "The general request mail."
        },
        "privacyPlusMail" : {
          "type" : "string",
          "description" : "The privacy plus mail."
        },
        "privacyPlus" : {
          "type" : "boolean",
          "description" : "Enable privacy plus."
        },
        "nameServerGroup" : {
          "type" : "string",
          "description" : "The nameserver group."
        },
        "rddsOptIn" : {
          "description" : "Enables the whois output to show redacted contacts.",
          "originalRef" : "RddsOptInConstants",
          "$ref" : "#/definitions/RddsOptInConstants"
        },
        "servicesAdd" : {
          "description" : "Adds pending services like BackupMX and MailProxy.",
          "originalRef" : "DomainServices",
          "$ref" : "#/definitions/DomainServices"
        },
        "servicesRem" : {
          "description" : "Removes pending services like BackupMX and MailProxy.",
          "originalRef" : "DomainServices",
          "$ref" : "#/definitions/DomainServices"
        },
        "ownerc" : {
          "description" : "The owner contact.",
          "originalRef" : "Contact",
          "$ref" : "#/definitions/Contact"
        },
        "adminc" : {
          "description" : "The administrative contact.",
          "originalRef" : "Contact",
          "$ref" : "#/definitions/Contact"
        },
        "techc" : {
          "description" : "The technical contact reference.",
          "originalRef" : "Contact",
          "$ref" : "#/definitions/Contact"
        },
        "zonec" : {
          "description" : "The dns contact.",
          "originalRef" : "Contact",
          "$ref" : "#/definitions/Contact"
        },
        "expire" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The expire date of the domain."
        },
        "payable" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The payable date of the domain."
        },
        "action" : {
          "description" : "The last action.",
          "originalRef" : "DomainActionConstants",
          "$ref" : "#/definitions/DomainActionConstants"
        },
        "autoDnssec" : {
          "type" : "boolean",
          "description" : "Enables or disables automatic DNSSEC for certain name servers (e.g. NodeSecure)."
        },
        "dnssec" : {
          "type" : "boolean",
          "description" : "Indicates whether DNSSEC is enabled for the domain or not."
        },
        "validCertificate" : {
          "type" : "boolean",
          "description" : "Domain has an matching certificate."
        },
        "cancelationStatus" : {
          "description" : "The cancelation status.",
          "originalRef" : "CancelationStatusConstants",
          "$ref" : "#/definitions/CancelationStatusConstants"
        },
        "autoRenewStatus" : {
          "description" : "The autorenew status.",
          "originalRef" : "AutoRenewStatusConstants",
          "$ref" : "#/definitions/AutoRenewStatusConstants"
        },
        "dnssecData" : {
          "type" : "array",
          "description" : "Submits the key material to the registry. If the list is empty, the key material is deleted at the registry. If the key is omitted during an update, the data is retained.",
          "items" : {
            "originalRef" : "DNSSec",
            "$ref" : "#/definitions/DNSSec"
          }
        },
        "zone" : {
          "description" : "The zone to create.",
          "originalRef" : "Zone",
          "$ref" : "#/definitions/Zone"
        }
      }
    },
    "DomainActionConstants" : {
      "type" : "string",
      "enum" : [ "CREATE", "UPDATE", "UPDATE_OWNER_CHANGE", "UPDATE_DNSSEC", "UPDATE_NAMESERVER", "DELETE", "TRANSIT", "TRANSFER", "TRANSFER_INTERN", "TRANSFER_INTERN_REGISTRAR_CHANGE", "TRANSFER_INTERN_REGISTRAR_CHANGE_RUNTIME_TAKEOVER", "IMPORT", "MIGRATE", "RESTORE", "RESTORE_NE", "RESTORE_RENEW", "RESTORE_ARGP", "RENEW", "AUTHINFO", "AUTHINFO_2", "UPDATE_STATUS", "REGISTRAR_UPDATE_STATUS", "UPDATE_COMMENT", "AUTOUPDATE_DNS", "OWNERCHANGE", "OWNERCHANGE_TRANSFER", "OWNERCHANGE_TRANSFER_INTERN", "OWNERCHANGE_TRANSFER_INTERN_REGISTRAR_CHANGE", "PREACK", "WHOIS_REGISTRY_STATUS", "DOMAIN_AWAY", "TRANSFER_OUT_AUTOACK", "DROP", "AUTHINFO_CREATE", "AUTHINFO_DELETE", "AUTOUPDATE_DEFERRED", "DOMAIN_BUY" ]
    },
    "DomainCancelation" : {
      "type" : "object",
      "required" : [ "domain", "execution", "registryWhen", "type" ],
      "properties" : {
        "created" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The created date."
        },
        "updated" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The updated date."
        },
        "owner" : {
          "description" : "The owner of the object.",
          "originalRef" : "BasicUser",
          "$ref" : "#/definitions/BasicUser"
        },
        "updater" : {
          "description" : "The updater of the object.",
          "originalRef" : "BasicUser",
          "$ref" : "#/definitions/BasicUser"
        },
        "domain" : {
          "type" : "string",
          "description" : "Lorem Ipsum"
        },
        "registryWhen" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The date of the execution. Only necessary when ExecutionType equals DATE."
        },
        "gainingRegistrar" : {
          "type" : "string",
          "description" : "Lorem Ipsum"
        },
        "disconnect" : {
          "type" : "boolean",
          "description" : "Lorem Ipsum"
        },
        "notice" : {
          "type" : "string",
          "description" : "Some remarks"
        },
        "logId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Lorem Ipsum"
        },
        "registryStatus" : {
          "description" : "Lorem Ipsum",
          "originalRef" : "RegistryStatusConstants",
          "$ref" : "#/definitions/RegistryStatusConstants"
        },
        "type" : {
          "description" : "The cancelation type. TRANSIT is only possible for certain TLDs.",
          "originalRef" : "CancelationTypeConstants",
          "$ref" : "#/definitions/CancelationTypeConstants"
        },
        "execution" : {
          "description" : "The execution type.",
          "originalRef" : "ExecutionTypeConstants",
          "$ref" : "#/definitions/ExecutionTypeConstants"
        }
      }
    },
    "DomainEnvelope" : {
      "type" : "object",
      "properties" : {
        "domain" : {
          "type" : "string",
          "example" : "domain.de",
          "description" : "The domain"
        },
        "idn" : {
          "type" : "string",
          "example" : "müller.org",
          "description" : "The unicode domain name"
        },
        "source" : {
          "description" : "Source",
          "originalRef" : "DomainStudioDomainSource",
          "$ref" : "#/definitions/DomainStudioDomainSource"
        },
        "services" : {
          "description" : "Source",
          "originalRef" : "DomainStudioService",
          "$ref" : "#/definitions/DomainStudioService"
        },
        "debugTime" : {
          "type" : "boolean",
          "description" : "Defines if the user already owns this domain."
        }
      }
    },
    "DomainEnvelopeSearchRequest" : {
      "type" : "object",
      "properties" : {
        "searchToken" : {
          "type" : "string",
          "description" : "Domain search token"
        },
        "currency" : {
          "type" : "string",
          "description" : "The currency for every price lookup"
        },
        "debug" : {
          "type" : "boolean",
          "description" : "Activates debugging"
        },
        "checkPortfolio" : {
          "type" : "boolean",
          "description" : "Activates the check for each domain whether the user already owns it."
        },
        "sources" : {
          "description" : "Wrapper for the configuration for each source",
          "originalRef" : "DomainStudioSources",
          "$ref" : "#/definitions/DomainStudioSources"
        },
        "clientIp" : {
          "type" : "string",
          "description" : "The ip of the client"
        }
      }
    },
    "DomainEnvelopeSearchService" : {
      "type" : "string",
      "enum" : [ "WHOIS", "PRICE", "ESTIMATION" ]
    },
    "DomainExtensions" : {
      "type" : "object",
      "properties" : {
        "parkingExtensions" : {
          "originalRef" : "DomainParkingExtensions",
          "$ref" : "#/definitions/DomainParkingExtensions"
        },
        "tmchClaimsNoticeExtensions" : {
          "originalRef" : "DomainTmchClaimNoticeExtensions",
          "$ref" : "#/definitions/DomainTmchClaimNoticeExtensions"
        }
      }
    },
    "DomainMonitoring" : {
      "type" : "object",
      "required" : [ "name" ],
      "properties" : {
        "created" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The created date."
        },
        "updated" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The updated date."
        },
        "owner" : {
          "description" : "The owner of the object.",
          "originalRef" : "BasicUser",
          "$ref" : "#/definitions/BasicUser"
        },
        "updater" : {
          "description" : "The updating user of the object.",
          "originalRef" : "BasicUser",
          "$ref" : "#/definitions/BasicUser"
        },
        "name" : {
          "type" : "string",
          "example" : "domain.de",
          "description" : "The name of the domain."
        },
        "idn" : {
          "type" : "string",
          "description" : "The idn version of the domain."
        },
        "notificationMobiles" : {
          "type" : "array",
          "description" : "The notification mobile phone numbers.",
          "items" : {
            "originalRef" : "Phone",
            "$ref" : "#/definitions/Phone"
          }
        },
        "ocval" : {
          "type" : "boolean",
          "description" : "The ocval"
        },
        "cancelation" : {
          "type" : "boolean",
          "description" : "The cancelation"
        },
        "removed" : {
          "type" : "boolean",
          "description" : "The removed"
        },
        "monitoringSetups" : {
          "type" : "array",
          "description" : "The monitoringSetups",
          "items" : {
            "originalRef" : "DomainMonitoringSetup",
            "$ref" : "#/definitions/DomainMonitoringSetup"
          }
        },
        "notificationEmails" : {
          "type" : "array",
          "description" : "The notification email-addresses.",
          "items" : {
            "type" : "string"
          },
          "maxItems" : 2147483647,
          "minItems" : 1
        }
      }
    },
    "DomainMonitoringSetup" : {
      "type" : "object",
      "properties" : {
        "created" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The created date."
        },
        "updated" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The updated date."
        },
        "data" : {
          "type" : "string",
          "description" : "The data"
        }
      }
    },
    "DomainParkingExtensions" : {
      "type" : "object",
      "properties" : {
        "parkingCategory" : {
          "type" : "string",
          "description" : "Lorem Ipsum"
        },
        "currency" : {
          "type" : "string",
          "example" : "EUR",
          "description" : "The currency of the sale",
          "x-custom-type" : "currency"
        },
        "domainLanguage" : {
          "type" : "string",
          "description" : "The parking"
        },
        "forSale" : {
          "type" : "boolean",
          "description" : "Should the domain be listed for sale"
        },
        "keyword" : {
          "type" : "string",
          "description" : "The keywords to use"
        },
        "price" : {
          "type" : "number",
          "format" : "double",
          "description" : "The price to use"
        },
        "fixedPrice" : {
          "type" : "boolean",
          "description" : "Is the price fix"
        },
        "minPrice" : {
          "type" : "number",
          "format" : "double",
          "description" : "The minimum of price"
        }
      }
    },
    "DomainRestore" : {
      "type" : "object",
      "required" : [ "name", "payable", "removeCancelation" ],
      "properties" : {
        "created" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The created date."
        },
        "updated" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The updated date."
        },
        "owner" : {
          "description" : "The owner of the object.",
          "originalRef" : "BasicUser",
          "$ref" : "#/definitions/BasicUser"
        },
        "updater" : {
          "description" : "The updater of the object.",
          "originalRef" : "BasicUser",
          "$ref" : "#/definitions/BasicUser"
        },
        "name" : {
          "type" : "string",
          "example" : "domain.de",
          "description" : "The name of the domain."
        },
        "idn" : {
          "type" : "string",
          "example" : "müller.org",
          "description" : "The unicode domain name"
        },
        "nicMemberLabel" : {
          "type" : "string",
          "description" : "The nic member label."
        },
        "registryStatus" : {
          "description" : "The registry status.",
          "originalRef" : "RegistryStatusConstants",
          "$ref" : "#/definitions/RegistryStatusConstants"
        },
        "nameServers" : {
          "type" : "array",
          "description" : "The nameservers.",
          "items" : {
            "originalRef" : "NameServer",
            "$ref" : "#/definitions/NameServer"
          }
        },
        "nameServerEntries" : {
          "type" : "array",
          "description" : "NSentry is only be provided for .DE. If NSentry is used, nameServers is not allowed.",
          "items" : {
            "type" : "string"
          }
        },
        "period" : {
          "description" : "The renew period in years.",
          "originalRef" : "TimePeriod",
          "$ref" : "#/definitions/TimePeriod"
        },
        "trustee" : {
          "type" : "boolean",
          "description" : "Enable trustee service for the domain."
        },
        "privacy" : {
          "type" : "boolean",
          "description" : "Enable privacy service for the domain."
        },
        "authinfo" : {
          "type" : "string",
          "description" : "The authinfo."
        },
        "domainsafe" : {
          "type" : "boolean",
          "description" : "Enable domainsafe."
        },
        "parking" : {
          "description" : "The parking provider.",
          "originalRef" : "ParkingProviderConstants",
          "$ref" : "#/definitions/ParkingProviderConstants"
        },
        "extensions" : {
          "description" : "The domain extensions.",
          "originalRef" : "DomainExtensions",
          "$ref" : "#/definitions/DomainExtensions"
        },
        "logId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The logId"
        },
        "nsCheck" : {
          "description" : "An additional nameserver check will be carried out.",
          "originalRef" : "DNSCheck",
          "$ref" : "#/definitions/DNSCheck"
        },
        "confirmOrder" : {
          "type" : "boolean",
          "description" : "Some TLDs require a confirmation of the “Terms and Conditions of Registration."
        },
        "confirmOwnerConsent" : {
          "type" : "boolean",
          "description" : "Confirms the consent of the domainowner for the changes. Required for gTLDs and new gTLDs when changing the name, the email address or the organization of the domain owner."
        },
        "ignoreWhois" : {
          "type" : "boolean",
          "description" : "Ignore whois."
        },
        "comment" : {
          "type" : "string",
          "description" : "A custom field. Can only be updated via PUT /domain/{name}/_comment. Requires appropriate ACLs."
        },
        "includeWWW" : {
          "type" : "boolean",
          "description" : "Enable utomatic creation of the www subdomain."
        },
        "includeWildcard" : {
          "type" : "boolean",
          "description" : "Enable include wildcard."
        },
        "registrarStatus" : {
          "description" : "The registrar status.",
          "originalRef" : "RegistryStatusConstants",
          "$ref" : "#/definitions/RegistryStatusConstants"
        },
        "registrarStatusReason" : {
          "type" : "string",
          "description" : "The registrar status reason."
        },
        "removeCancelation" : {
          "type" : "boolean",
          "description" : "Remove cancelation."
        },
        "autodnsSecJob" : {
          "description" : "AutodnsSecJob",
          "originalRef" : "DNSSecJob",
          "$ref" : "#/definitions/DNSSecJob"
        },
        "priceClass" : {
          "type" : "string",
          "description" : "The priceclass for the registration of the domain."
        },
        "priceClassRenew" : {
          "type" : "string",
          "description" : "The priceclass for the renew of the domain."
        },
        "abuseEmail" : {
          "type" : "string",
          "description" : "The abuse email."
        },
        "generalRequestEmail" : {
          "type" : "string",
          "description" : "The general request mail."
        },
        "privacyPlusMail" : {
          "type" : "string",
          "description" : "The privacy plus mail."
        },
        "privacyPlus" : {
          "type" : "boolean",
          "description" : "Enable privacy plus."
        },
        "nameServerGroup" : {
          "type" : "string",
          "description" : "The nameserver group."
        },
        "rddsOptIn" : {
          "description" : "Enables the whois output to show redacted contacts.",
          "originalRef" : "RddsOptInConstants",
          "$ref" : "#/definitions/RddsOptInConstants"
        },
        "servicesAdd" : {
          "description" : "Adds pending services like BackupMX and MailProxy.",
          "originalRef" : "DomainServices",
          "$ref" : "#/definitions/DomainServices"
        },
        "servicesRem" : {
          "description" : "Removes pending services like BackupMX and MailProxy.",
          "originalRef" : "DomainServices",
          "$ref" : "#/definitions/DomainServices"
        },
        "deleted" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The date at deletion of the domain"
        },
        "restorePhaseEnd" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The end of current restore phase"
        },
        "ownerc" : {
          "description" : "The owner contact.",
          "originalRef" : "Contact",
          "$ref" : "#/definitions/Contact"
        },
        "adminc" : {
          "description" : "The administrative contact.",
          "originalRef" : "Contact",
          "$ref" : "#/definitions/Contact"
        },
        "techc" : {
          "description" : "The technical contact reference.",
          "originalRef" : "Contact",
          "$ref" : "#/definitions/Contact"
        },
        "zonec" : {
          "description" : "The dns contact.",
          "originalRef" : "Contact",
          "$ref" : "#/definitions/Contact"
        },
        "expire" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The expire date of the domain."
        },
        "payable" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The payable date of the domain."
        },
        "action" : {
          "description" : "The last action.",
          "originalRef" : "DomainActionConstants",
          "$ref" : "#/definitions/DomainActionConstants"
        },
        "autoDnssec" : {
          "type" : "boolean",
          "description" : "Enables or disables automatic DNSSEC for certain name servers (e.g. NodeSecure)."
        },
        "dnssec" : {
          "type" : "boolean",
          "description" : "Indicates whether DNSSEC is enabled for the domain or not."
        },
        "validCertificate" : {
          "type" : "boolean",
          "description" : "Domain has an matching certificate."
        },
        "cancelationStatus" : {
          "description" : "The cancelation status.",
          "originalRef" : "CancelationStatusConstants",
          "$ref" : "#/definitions/CancelationStatusConstants"
        },
        "autoRenewStatus" : {
          "description" : "The autorenew status.",
          "originalRef" : "AutoRenewStatusConstants",
          "$ref" : "#/definitions/AutoRenewStatusConstants"
        },
        "dnssecData" : {
          "type" : "array",
          "description" : "Submits the key material to the registry. If the list is empty, the key material is deleted at the registry. If the key is omitted during an update, the data is retained.",
          "items" : {
            "originalRef" : "DNSSec",
            "$ref" : "#/definitions/DNSSec"
          }
        },
        "zone" : {
          "description" : "The zone to create.",
          "originalRef" : "Zone",
          "$ref" : "#/definitions/Zone"
        }
      }
    },
    "DomainServices" : {
      "type" : "object",
      "properties" : {
        "backupMx" : {
          "type" : "array",
          "description" : "Removes pending services like BackupMX and MailProxy.",
          "items" : {
            "originalRef" : "BackupMx",
            "$ref" : "#/definitions/BackupMx"
          }
        },
        "mailProxy" : {
          "type" : "array",
          "description" : "Removes pending services like BackupMX and MailProxy.",
          "items" : {
            "originalRef" : "MailProxy",
            "$ref" : "#/definitions/MailProxy"
          }
        },
        "redirect" : {
          "type" : "array",
          "description" : "Removes pending services like BackupMX and MailProxy.",
          "items" : {
            "originalRef" : "Redirect",
            "$ref" : "#/definitions/Redirect"
          }
        },
        "domainMonitoring" : {
          "type" : "array",
          "description" : "Removes pending services like BackupMX and MailProxy.",
          "items" : {
            "originalRef" : "DomainMonitoring",
            "$ref" : "#/definitions/DomainMonitoring"
          }
        }
      }
    },
    "DomainServicesUpdate" : {
      "type" : "object",
      "properties" : {
        "domains" : {
          "type" : "array",
          "description" : "The name of the domain.",
          "items" : {
            "originalRef" : "Domain",
            "$ref" : "#/definitions/Domain"
          }
        },
        "servicesAdd" : {
          "description" : "The services to add.",
          "originalRef" : "DomainServices",
          "$ref" : "#/definitions/DomainServices"
        },
        "servicesRem" : {
          "description" : "The services to remove.",
          "originalRef" : "DomainServices",
          "$ref" : "#/definitions/DomainServices"
        }
      }
    },
    "DomainStudioDomainSource" : {
      "type" : "string",
      "enum" : [ "INITIAL", "SUGGESTION", "PREMIUM", "GEO", "SIMILAR", "RECOMMENDED" ]
    },
    "DomainStudioDomainStatus" : {
      "type" : "string",
      "enum" : [ "FREE", "ASSIGNED", "MARKET", "PREMIUM", "INVALID", "ERROR", "TIMEOUT", "RESERVED", "PREMIUM_CLAIM", "CLAIM" ]
    },
    "DomainStudioService" : {
      "type" : "object",
      "properties" : {
        "whois" : {
          "description" : "The data for the whois service",
          "originalRef" : "WhoisServiceData",
          "$ref" : "#/definitions/WhoisServiceData"
        },
        "price" : {
          "description" : "The data for the price service",
          "originalRef" : "PriceServiceData",
          "$ref" : "#/definitions/PriceServiceData"
        },
        "estimation" : {
          "description" : "The data for the estimation service",
          "originalRef" : "EstimationServiceData",
          "$ref" : "#/definitions/EstimationServiceData"
        }
      }
    },
    "DomainStudioServiceStatus" : {
      "type" : "string",
      "enum" : [ "RUNNING", "SUCCESS", "FAILED", "TIMEOUT" ]
    },
    "DomainStudioSourceGeo" : {
      "type" : "object",
      "properties" : {
        "services" : {
          "type" : "array",
          "description" : "The services to fetch extra data from for this source",
          "items" : {
            "originalRef" : "DomainEnvelopeSearchService",
            "$ref" : "#/definitions/DomainEnvelopeSearchService"
          }
        },
        "max" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The maximum amount of fetched geo domains."
        }
      }
    },
    "DomainStudioSourceInitial" : {
      "type" : "object",
      "properties" : {
        "services" : {
          "type" : "array",
          "description" : "The services to fetch extra data from for this source",
          "items" : {
            "originalRef" : "DomainEnvelopeSearchService",
            "$ref" : "#/definitions/DomainEnvelopeSearchService"
          }
        },
        "tlds" : {
          "type" : "array",
          "description" : "Selected tlds",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "DomainStudioSourcePremium" : {
      "type" : "object",
      "properties" : {
        "services" : {
          "type" : "array",
          "description" : "The services to fetch extra data from for this source",
          "items" : {
            "originalRef" : "DomainEnvelopeSearchService",
            "$ref" : "#/definitions/DomainEnvelopeSearchService"
          }
        },
        "promoTlds" : {
          "type" : "array",
          "description" : "Promo tlds",
          "items" : {
            "type" : "string"
          }
        },
        "topTlds" : {
          "type" : "array",
          "description" : "Top tlds",
          "items" : {
            "type" : "string"
          }
        },
        "max" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The maximum amount of fetched premium and market domains."
        }
      }
    },
    "DomainStudioSourceSimilar" : {
      "type" : "object",
      "properties" : {
        "services" : {
          "type" : "array",
          "description" : "The services to fetch extra data from for this source",
          "items" : {
            "originalRef" : "DomainEnvelopeSearchService",
            "$ref" : "#/definitions/DomainEnvelopeSearchService"
          }
        },
        "max" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The maximum amount of generated similar domains."
        }
      }
    },
    "DomainStudioSourceSuggestion" : {
      "type" : "object",
      "properties" : {
        "services" : {
          "type" : "array",
          "description" : "The services to fetch extra data from for this source",
          "items" : {
            "originalRef" : "DomainEnvelopeSearchService",
            "$ref" : "#/definitions/DomainEnvelopeSearchService"
          }
        },
        "language" : {
          "type" : "string",
          "description" : "Suggestion language"
        },
        "max" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Maximum fetched suggested domains"
        },
        "maxSldLength" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Maximum sld length for suggested domains"
        },
        "useDash" : {
          "type" : "boolean",
          "description" : "Suggested domains with dash"
        },
        "useNumber" : {
          "type" : "boolean",
          "description" : "Suggested domains with numbers"
        },
        "useIdn" : {
          "type" : "boolean",
          "description" : "Suggested domains with idn"
        },
        "tlds" : {
          "type" : "array",
          "description" : "Selected tlds",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "DomainStudioSources" : {
      "type" : "object",
      "properties" : {
        "initial" : {
          "description" : "The configuration for the initial source",
          "originalRef" : "DomainStudioSourceInitial",
          "$ref" : "#/definitions/DomainStudioSourceInitial"
        },
        "suggestion" : {
          "description" : "The configuration for the suggestion source",
          "originalRef" : "DomainStudioSourceSuggestion",
          "$ref" : "#/definitions/DomainStudioSourceSuggestion"
        },
        "premium" : {
          "description" : "The configuration for the premium source",
          "originalRef" : "DomainStudioSourcePremium",
          "$ref" : "#/definitions/DomainStudioSourcePremium"
        },
        "geo" : {
          "description" : "The configuration for the geo source",
          "originalRef" : "DomainStudioSourceGeo",
          "$ref" : "#/definitions/DomainStudioSourceGeo"
        },
        "similar" : {
          "description" : "The configuration for the similar source",
          "originalRef" : "DomainStudioSourceSimilar",
          "$ref" : "#/definitions/DomainStudioSourceSimilar"
        },
        "recommended" : {
          "description" : "The configuration for the recommended source",
          "originalRef" : "DomainStudioSourceSimilar",
          "$ref" : "#/definitions/DomainStudioSourceSimilar"
        }
      }
    },
    "DomainTmchClaimNoticeExtensions" : {
      "type" : "object",
      "properties" : {
        "externalReference" : {
          "type" : "string",
          "description" : "The external refernce"
        },
        "notAfter" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date after the claim expires"
        },
        "confirmed" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The date of confirmation"
        },
        "confirmIp" : {
          "type" : "string",
          "description" : "The confirm ip"
        }
      }
    },
    "EstimationData" : {
      "type" : "object",
      "properties" : {
        "currency" : {
          "description" : "The currency",
          "originalRef" : "Currency",
          "$ref" : "#/definitions/Currency"
        },
        "amount" : {
          "type" : "number",
          "format" : "double",
          "description" : "The amount"
        }
      }
    },
    "EstimationServiceData" : {
      "type" : "object",
      "properties" : {
        "debugTime" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The debug time"
        },
        "status" : {
          "description" : "The status",
          "originalRef" : "DomainStudioServiceStatus",
          "$ref" : "#/definitions/DomainStudioServiceStatus"
        },
        "message" : {
          "type" : "string",
          "description" : "A message with more information, if the status is FAILED."
        },
        "data" : {
          "description" : "The service data",
          "originalRef" : "EstimationData",
          "$ref" : "#/definitions/EstimationData"
        }
      }
    },
    "ExchangedPrice" : {
      "type" : "object",
      "required" : [ "currency" ],
      "properties" : {
        "created" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The created date."
        },
        "updated" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The updated date."
        },
        "owner" : {
          "description" : "The owner of the object.",
          "originalRef" : "BasicUser",
          "$ref" : "#/definitions/BasicUser"
        },
        "updater" : {
          "description" : "The updating user of the object.",
          "originalRef" : "BasicUser",
          "$ref" : "#/definitions/BasicUser"
        },
        "amount" : {
          "type" : "number",
          "format" : "double",
          "description" : "Lorem Ipum"
        },
        "type" : {
          "description" : "Lorem Ipum",
          "originalRef" : "PriceTypeConstants",
          "$ref" : "#/definitions/PriceTypeConstants"
        },
        "currency" : {
          "type" : "string",
          "example" : "EUR",
          "description" : "Lorem Ipsum",
          "x-custom-type" : "currency"
        },
        "priority" : {
          "description" : "Lorem Ipum",
          "originalRef" : "PriorityConstants",
          "$ref" : "#/definitions/PriorityConstants"
        },
        "customer" : {
          "description" : "Lorem Ipum",
          "originalRef" : "Customer",
          "$ref" : "#/definitions/Customer"
        },
        "period" : {
          "description" : "Lorem Ipum",
          "originalRef" : "TimePeriod",
          "$ref" : "#/definitions/TimePeriod"
        },
        "discountable" : {
          "type" : "boolean",
          "description" : "Lorem Ipum"
        },
        "logId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Lorem Ipum"
        },
        "refund" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Lorem Ipum"
        },
        "priceConditions" : {
          "type" : "array",
          "description" : "Lorem Ipum",
          "items" : {
            "originalRef" : "PriceServiceEntity",
            "$ref" : "#/definitions/PriceServiceEntity"
          }
        },
        "comment" : {
          "type" : "string",
          "description" : "Lorem Ipum"
        },
        "normalPrice" : {
          "description" : "Lorem Ipum",
          "originalRef" : "ExchangedPrice",
          "$ref" : "#/definitions/ExchangedPrice"
        },
        "valid" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Lorem Ipum"
        },
        "vatRate" : {
          "type" : "number",
          "format" : "double",
          "description" : "Lorem Ipsum"
        },
        "vatAmount" : {
          "type" : "number",
          "format" : "double",
          "description" : "Lorem Ipsum"
        },
        "rate" : {
          "type" : "number",
          "format" : "double",
          "description" : "Lorem Ipsum"
        }
      }
    },
    "ExecutionTypeConstants" : {
      "type" : "string",
      "enum" : [ "DATE", "EXPIRE", "NOW" ]
    },
    "ExtendedValidationExtension" : {
      "type" : "object",
      "properties" : {
        "joiCountryName" : {
          "type" : "string",
          "description" : "Country of judicial formation"
        },
        "companyNumber" : {
          "type" : "string",
          "description" : "The company number"
        },
        "businessCategory" : {
          "description" : "Additional validation data required for certain Comodo products.",
          "originalRef" : "BusinessCategory",
          "$ref" : "#/definitions/BusinessCategory"
        }
      }
    },
    "GenderConstants" : {
      "type" : "string",
      "enum" : [ "MALE", "FEMALE" ]
    },
    "GenericCustomer" : {
      "type" : "object",
      "required" : [ "client", "number" ],
      "properties" : {
        "number" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Lorem Ipsum"
        },
        "client" : {
          "type" : "string",
          "description" : "Lorem Ipsum",
          "minLength" : 1,
          "maxLength" : 2147483647
        },
        "group" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Lorem Ipsum"
        }
      }
    },
    "GenericLabelEntity" : {
      "type" : "object",
      "required" : [ "label" ],
      "properties" : {
        "created" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The created date."
        },
        "updated" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The updated date."
        },
        "label" : {
          "type" : "string",
          "description" : "Lorem Ipum"
        },
        "name" : {
          "type" : "string",
          "description" : "The name of the contract."
        },
        "packageLabel" : {
          "type" : "string",
          "description" : "The related package label of the contract"
        }
      }
    },
    "GenericObject" : {
      "type" : "object",
      "properties" : {
        "type" : {
          "type" : "string",
          "description" : "The type of the object."
        },
        "value" : {
          "type" : "string",
          "description" : "The value of the object."
        }
      }
    },
    "GenericStatusConstants" : {
      "type" : "string",
      "enum" : [ "PENDING", "SUCCESS", "FAILED", "NOT_SET" ]
    },
    "HandleVerification" : {
      "type" : "object",
      "required" : [ "confirmIp", "handle" ],
      "properties" : {
        "created" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The created date."
        },
        "updated" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The updated date."
        },
        "owner" : {
          "description" : "The owner of the object.",
          "originalRef" : "BasicUser",
          "$ref" : "#/definitions/BasicUser"
        },
        "updater" : {
          "description" : "The updater of the object.",
          "originalRef" : "BasicUser",
          "$ref" : "#/definitions/BasicUser"
        },
        "reference" : {
          "type" : "string",
          "description" : "the reference of the Verification"
        },
        "messageSend" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "the messageSend date of the Verification"
        },
        "confirmed" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "the confirmed date of the Verification"
        },
        "confirmIp" : {
          "description" : "the confirmIp of the Verification",
          "originalRef" : "InetAddress",
          "$ref" : "#/definitions/InetAddress"
        },
        "failed" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "the failed date of the Verification"
        },
        "domain" : {
          "type" : "array",
          "description" : "the domains of the Verification",
          "items" : {
            "originalRef" : "ContactVerificationDomain",
            "$ref" : "#/definitions/ContactVerificationDomain"
          }
        },
        "verificationMail" : {
          "type" : "array",
          "description" : "the messages of the Verification",
          "items" : {
            "originalRef" : "ContactVerificationMessage",
            "$ref" : "#/definitions/ContactVerificationMessage"
          }
        },
        "comment" : {
          "type" : "string",
          "description" : "the comment of the Verification"
        },
        "action" : {
          "type" : "string",
          "description" : "the action of the Verification"
        },
        "handle" : {
          "description" : "the contact of the Verification",
          "originalRef" : "Contact",
          "$ref" : "#/definitions/Contact"
        }
      }
    },
    "HkDocumentTypeConstants" : {
      "type" : "string",
      "enum" : [ "HKID", "OTHID", "PASSNO", "BIRTHCERT", "OTHIDV", "BR", "CI", "CRS", "HKSARG", "HKORDINANCE", "OTHORG" ]
    },
    "HkIndustryTypeConstants" : {
      "type" : "string",
      "enum" : [ "_0", "_4160", "_4224", "_4288", "_4352", "_4416", "_8256", "_8320", "_8384", "_8448", "_8512", "_12352", "_12416", "_16448", "_16512", "_16576", "_16640", "_16704", "_16768", "_16832", "_20544", "_20608", "_20672", "_20736", "_20800", "_20864", "_20928", "_24640", "_24704", "_24768", "_28736", "_28800", "_28864", "_28928", "_28992", "_29056", "_29120", "_070800", "_070900", "_080100", "_080200", "_080300", "_080400", "_080500", "_080600", "_080700", "_080800", "_080900", "_081000", "_081100", "_090100", "_090200", "_090300", "_090400", "_090500", "_100100", "_100200", "_100300", "_100400", "_100500", "_110100", "_110200", "_110300", "_110400", "_110500", "_110600", "_120100", "_120200", "_120300", "_120400", "_120500", "_120600", "_120700", "_120800", "_120900", "_130100", "_130200", "_130300", "_130400", "_130500", "_130600", "_130700", "_130800", "_140101", "_140102", "_140103", "_140200", "_140300", "_140400", "_140500", "_140600", "_140700" ]
    },
    "Id4MeAgent" : {
      "type" : "object",
      "required" : [ "name" ],
      "properties" : {
        "created" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The created date."
        },
        "updated" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The updated date."
        },
        "owner" : {
          "description" : "The owner of the object.",
          "originalRef" : "BasicUser",
          "$ref" : "#/definitions/BasicUser"
        },
        "updater" : {
          "description" : "The updater of the object.",
          "originalRef" : "BasicUser",
          "$ref" : "#/definitions/BasicUser"
        },
        "externalReference" : {
          "type" : "string",
          "description" : "External reference"
        },
        "certificate" : {
          "description" : "Virtual host with certificate data",
          "originalRef" : "VhostCertificate",
          "$ref" : "#/definitions/VhostCertificate"
        },
        "layoutAddon" : {
          "description" : "Layout properties",
          "originalRef" : "Configuration",
          "$ref" : "#/definitions/Configuration"
        },
        "name" : {
          "type" : "string",
          "description" : "Fully qualified domain name"
        },
        "status" : {
          "example" : "PENDING",
          "description" : "Agent status",
          "originalRef" : "Id4MeAgentStatus",
          "$ref" : "#/definitions/Id4MeAgentStatus"
        },
        "records" : {
          "type" : "array",
          "description" : "List of dns text records",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "Id4MeAgentStatus" : {
      "type" : "string",
      "enum" : [ "PENDING", "PENDING_SSL", "PENDING_SSL_VERIFY", "SUCCESS", "FAILED" ]
    },
    "Id4meIdentity" : {
      "type" : "object",
      "required" : [ "agent", "language" ],
      "properties" : {
        "created" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The created date."
        },
        "updated" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The updated date."
        },
        "owner" : {
          "description" : "The owner of the object.",
          "originalRef" : "BasicUser",
          "$ref" : "#/definitions/BasicUser"
        },
        "updater" : {
          "description" : "The updater of the object.",
          "originalRef" : "BasicUser",
          "$ref" : "#/definitions/BasicUser"
        },
        "agent" : {
          "description" : "The ID4ME agent",
          "originalRef" : "Id4MeAgent",
          "$ref" : "#/definitions/Id4MeAgent"
        },
        "verifyExpire" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Expiration of verification"
        },
        "addons" : {
          "description" : "Additional information",
          "originalRef" : "Configuration",
          "$ref" : "#/definitions/Configuration"
        },
        "magicLink" : {
          "type" : "string",
          "description" : "The generated magic link"
        },
        "claims" : {
          "description" : "The initial claims",
          "originalRef" : "claims",
          "$ref" : "#/definitions/claims"
        },
        "showClaims" : {
          "type" : "boolean",
          "description" : "Enables showing claims."
        },
        "resetUrl" : {
          "type" : "string",
          "description" : "Url to redirect to passwort reset"
        },
        "resetUrlExpire" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "time when reset url expire"
        },
        "name" : {
          "type" : "string",
          "description" : "Fully qualified domain name"
        },
        "status" : {
          "example" : "VERIFY",
          "description" : "status",
          "originalRef" : "IdentityStatus",
          "$ref" : "#/definitions/IdentityStatus"
        },
        "language" : {
          "type" : "string",
          "description" : "The language."
        },
        "record" : {
          "type" : "array",
          "description" : "DNS text records",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "IdentityStatus" : {
      "type" : "string",
      "enum" : [ "VERIFY", "SUCCESS" ]
    },
    "InetAddress" : {
      "type" : "object"
    },
    "Invoice" : {
      "type" : "object",
      "properties" : {
        "created" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The created date."
        },
        "updated" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The updated date."
        },
        "owner" : {
          "description" : "The owner of the object.",
          "originalRef" : "BasicUser",
          "$ref" : "#/definitions/BasicUser"
        },
        "updater" : {
          "description" : "The updater of the object.",
          "originalRef" : "BasicUser",
          "$ref" : "#/definitions/BasicUser"
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Lorem Ipsum"
        },
        "number" : {
          "type" : "string",
          "description" : "Lorem Ipsum"
        },
        "customer" : {
          "description" : "Lorem Ipum",
          "originalRef" : "Customer",
          "$ref" : "#/definitions/Customer"
        },
        "payment" : {
          "description" : "Lorem Ipsum",
          "originalRef" : "PaymentConstants",
          "$ref" : "#/definitions/PaymentConstants"
        },
        "paymentMode" : {
          "type" : "string",
          "description" : "Lorem Ipsum"
        },
        "paymentTransaction" : {
          "type" : "string",
          "description" : "Lorem Ipsum"
        },
        "subType" : {
          "type" : "string",
          "description" : "The sub type of the invoice, e.g. domain invoice or server invoice"
        },
        "sepaMandateReference" : {
          "type" : "string",
          "description" : "Lorem Ipsum"
        },
        "sepaMandateCollection" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Lorem Ipsum"
        },
        "amount" : {
          "type" : "number",
          "format" : "double",
          "description" : "Lorem Ipsum"
        },
        "vatAmount" : {
          "type" : "number",
          "format" : "double",
          "description" : "Lorem Ipsum"
        },
        "status" : {
          "description" : "Lorem Ipsum",
          "originalRef" : "InvoiceStatusConstants",
          "$ref" : "#/definitions/InvoiceStatusConstants"
        },
        "type" : {
          "description" : "Lorem Ipsum",
          "originalRef" : "AccountingDocumentTypeConstants",
          "$ref" : "#/definitions/AccountingDocumentTypeConstants"
        },
        "failed" : {
          "type" : "boolean",
          "description" : "Lorem Ipsum"
        },
        "currency" : {
          "type" : "string",
          "example" : "EUR",
          "description" : "Lorem Ipsum",
          "x-custom-type" : "currency"
        },
        "paid" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Lorem Ipsum"
        },
        "document" : {
          "description" : "Lorem Ipsum",
          "originalRef" : "Document",
          "$ref" : "#/definitions/Document"
        },
        "comment" : {
          "type" : "string",
          "description" : "Lorem Ipsum"
        }
      }
    },
    "InvoiceStatusConstants" : {
      "type" : "string",
      "enum" : [ "CREATED", "SIGNED", "SENT", "RESEND", "FINISHED", "LIVECONFIRMED", "LIVEPENDING", "POSTPENDING", "POSTCONFIRMED" ]
    },
    "IpRestriction" : {
      "type" : "object",
      "required" : [ "address", "type" ],
      "properties" : {
        "created" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The created date."
        },
        "updated" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The updated date."
        },
        "type" : {
          "description" : "The restriction level",
          "originalRef" : "IpRestrictionTypeConstants",
          "$ref" : "#/definitions/IpRestrictionTypeConstants"
        },
        "address" : {
          "type" : "string",
          "example" : "192.33.1.4/24",
          "description" : "A net address or ip address"
        }
      }
    },
    "IpRestrictionTypeConstants" : {
      "type" : "string",
      "enum" : [ "CLONE", "USER", "CONTEXT" ]
    },
    "IpRestrictions" : {
      "type" : "object",
      "properties" : {
        "acls" : {
          "type" : "array",
          "description" : "A list of ip restrictions",
          "items" : {
            "originalRef" : "IpRestriction",
            "$ref" : "#/definitions/IpRestriction"
          }
        }
      }
    },
    "Job" : {
      "type" : "object",
      "properties" : {
        "created" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The created date."
        },
        "updated" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The updated date."
        },
        "owner" : {
          "description" : "The owner of the object.",
          "originalRef" : "BasicUser",
          "$ref" : "#/definitions/BasicUser"
        },
        "updater" : {
          "description" : "The updater of the object.",
          "originalRef" : "BasicUser",
          "$ref" : "#/definitions/BasicUser"
        },
        "status" : {
          "description" : "The status of the job.",
          "originalRef" : "JobStatusConstants",
          "$ref" : "#/definitions/JobStatusConstants"
        },
        "subStatus" : {
          "type" : "string",
          "description" : "The substatus of the job."
        },
        "execution" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The next execution date of the job."
        },
        "events" : {
          "type" : "array",
          "description" : "The events.",
          "items" : {
            "originalRef" : "WorkflowEvent",
            "$ref" : "#/definitions/WorkflowEvent"
          }
        },
        "subType" : {
          "type" : "string",
          "description" : "The job subtype."
        },
        "action" : {
          "type" : "string",
          "description" : "The job action."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The job id."
        }
      }
    },
    "JobStatusConstants" : {
      "type" : "string",
      "enum" : [ "RUNNING", "SUCCESS", "FAILED", "CANCELED", "SUPPORT", "DEFERRED", "NOT_SET", "WAIT" ]
    },
    "JsonNoData" : {
      "type" : "object"
    },
    "JsonResponseData" : {
      "type" : "object",
      "properties" : {
        "stid" : {
          "type" : "string",
          "description" : "The server transaction id for the response."
        },
        "messages" : {
          "type" : "array",
          "description" : "The messages belonging to the response.",
          "items" : {
            "originalRef" : "Message",
            "$ref" : "#/definitions/Message"
          }
        },
        "status" : {
          "description" : "The status of the response.",
          "originalRef" : "ResponseStatus",
          "$ref" : "#/definitions/ResponseStatus"
        },
        "object" : {
          "description" : "The object of the response.",
          "originalRef" : "ResponseObject",
          "$ref" : "#/definitions/ResponseObject"
        },
        "data" : {
          "type" : "array",
          "description" : "The data for the response. The type of the objects are depending on the request and are also specified in the responseObject value of the response.",
          "items" : {
            "type" : "object"
          }
        },
        "ctid" : {
          "type" : "string",
          "description" : "The client transaction id for the response."
        }
      }
    },
    "JsonResponseDataBackupMx" : {
      "type" : "object",
      "properties" : {
        "stid" : {
          "type" : "string",
          "description" : "The server transaction id for the response."
        },
        "messages" : {
          "type" : "array",
          "description" : "The messages belonging to the response.",
          "items" : {
            "originalRef" : "Message",
            "$ref" : "#/definitions/Message"
          }
        },
        "status" : {
          "description" : "The status of the response.",
          "originalRef" : "ResponseStatus",
          "$ref" : "#/definitions/ResponseStatus"
        },
        "object" : {
          "description" : "The object of the response.",
          "originalRef" : "ResponseObject",
          "$ref" : "#/definitions/ResponseObject"
        },
        "data" : {
          "type" : "array",
          "description" : "The data for the response. The type of the objects are depending on the request and are also specified in the responseObject value of the response.",
          "items" : {
            "originalRef" : "BackupMx",
            "$ref" : "#/definitions/BackupMx"
          }
        },
        "ctid" : {
          "type" : "string",
          "description" : "The client transaction id for the response."
        }
      }
    },
    "JsonResponseDataBasicDocument" : {
      "type" : "object",
      "properties" : {
        "stid" : {
          "type" : "string",
          "description" : "The server transaction id for the response."
        },
        "messages" : {
          "type" : "array",
          "description" : "The messages belonging to the response.",
          "items" : {
            "originalRef" : "Message",
            "$ref" : "#/definitions/Message"
          }
        },
        "status" : {
          "description" : "The status of the response.",
          "originalRef" : "ResponseStatus",
          "$ref" : "#/definitions/ResponseStatus"
        },
        "object" : {
          "description" : "The object of the response.",
          "originalRef" : "ResponseObject",
          "$ref" : "#/definitions/ResponseObject"
        },
        "data" : {
          "type" : "array",
          "description" : "The data for the response. The type of the objects are depending on the request and are also specified in the responseObject value of the response.",
          "items" : {
            "originalRef" : "BasicDocument",
            "$ref" : "#/definitions/BasicDocument"
          }
        },
        "ctid" : {
          "type" : "string",
          "description" : "The client transaction id for the response."
        }
      }
    },
    "JsonResponseDataCertificate" : {
      "type" : "object",
      "properties" : {
        "stid" : {
          "type" : "string",
          "description" : "The server transaction id for the response."
        },
        "messages" : {
          "type" : "array",
          "description" : "The messages belonging to the response.",
          "items" : {
            "originalRef" : "Message",
            "$ref" : "#/definitions/Message"
          }
        },
        "status" : {
          "description" : "The status of the response.",
          "originalRef" : "ResponseStatus",
          "$ref" : "#/definitions/ResponseStatus"
        },
        "object" : {
          "description" : "The object of the response.",
          "originalRef" : "ResponseObject",
          "$ref" : "#/definitions/ResponseObject"
        },
        "data" : {
          "type" : "array",
          "description" : "The data for the response. The type of the objects are depending on the request and are also specified in the responseObject value of the response.",
          "items" : {
            "originalRef" : "Certificate",
            "$ref" : "#/definitions/Certificate"
          }
        },
        "ctid" : {
          "type" : "string",
          "description" : "The client transaction id for the response."
        }
      }
    },
    "JsonResponseDataCertificateData" : {
      "type" : "object",
      "properties" : {
        "stid" : {
          "type" : "string",
          "description" : "The server transaction id for the response."
        },
        "messages" : {
          "type" : "array",
          "description" : "The messages belonging to the response.",
          "items" : {
            "originalRef" : "Message",
            "$ref" : "#/definitions/Message"
          }
        },
        "status" : {
          "description" : "The status of the response.",
          "originalRef" : "ResponseStatus",
          "$ref" : "#/definitions/ResponseStatus"
        },
        "object" : {
          "description" : "The object of the response.",
          "originalRef" : "ResponseObject",
          "$ref" : "#/definitions/ResponseObject"
        },
        "data" : {
          "type" : "array",
          "description" : "The data for the response. The type of the objects are depending on the request and are also specified in the responseObject value of the response.",
          "items" : {
            "originalRef" : "CertificateData",
            "$ref" : "#/definitions/CertificateData"
          }
        },
        "ctid" : {
          "type" : "string",
          "description" : "The client transaction id for the response."
        }
      }
    },
    "JsonResponseDataContact" : {
      "type" : "object",
      "properties" : {
        "stid" : {
          "type" : "string",
          "description" : "The server transaction id for the response."
        },
        "messages" : {
          "type" : "array",
          "description" : "The messages belonging to the response.",
          "items" : {
            "originalRef" : "Message",
            "$ref" : "#/definitions/Message"
          }
        },
        "status" : {
          "description" : "The status of the response.",
          "originalRef" : "ResponseStatus",
          "$ref" : "#/definitions/ResponseStatus"
        },
        "object" : {
          "description" : "The object of the response.",
          "originalRef" : "ResponseObject",
          "$ref" : "#/definitions/ResponseObject"
        },
        "data" : {
          "type" : "array",
          "description" : "The data for the response. The type of the objects are depending on the request and are also specified in the responseObject value of the response.",
          "items" : {
            "originalRef" : "Contact",
            "$ref" : "#/definitions/Contact"
          }
        },
        "ctid" : {
          "type" : "string",
          "description" : "The client transaction id for the response."
        }
      }
    },
    "JsonResponseDataDomain" : {
      "type" : "object",
      "properties" : {
        "stid" : {
          "type" : "string",
          "description" : "The server transaction id for the response."
        },
        "messages" : {
          "type" : "array",
          "description" : "The messages belonging to the response.",
          "items" : {
            "originalRef" : "Message",
            "$ref" : "#/definitions/Message"
          }
        },
        "status" : {
          "description" : "The status of the response.",
          "originalRef" : "ResponseStatus",
          "$ref" : "#/definitions/ResponseStatus"
        },
        "object" : {
          "description" : "The object of the response.",
          "originalRef" : "ResponseObject",
          "$ref" : "#/definitions/ResponseObject"
        },
        "data" : {
          "type" : "array",
          "description" : "The data for the response. The type of the objects are depending on the request and are also specified in the responseObject value of the response.",
          "items" : {
            "originalRef" : "Domain",
            "$ref" : "#/definitions/Domain"
          }
        },
        "ctid" : {
          "type" : "string",
          "description" : "The client transaction id for the response."
        }
      }
    },
    "JsonResponseDataDomainCancelation" : {
      "type" : "object",
      "properties" : {
        "stid" : {
          "type" : "string",
          "description" : "The server transaction id for the response."
        },
        "messages" : {
          "type" : "array",
          "description" : "The messages belonging to the response.",
          "items" : {
            "originalRef" : "Message",
            "$ref" : "#/definitions/Message"
          }
        },
        "status" : {
          "description" : "The status of the response.",
          "originalRef" : "ResponseStatus",
          "$ref" : "#/definitions/ResponseStatus"
        },
        "object" : {
          "description" : "The object of the response.",
          "originalRef" : "ResponseObject",
          "$ref" : "#/definitions/ResponseObject"
        },
        "data" : {
          "type" : "array",
          "description" : "The data for the response. The type of the objects are depending on the request and are also specified in the responseObject value of the response.",
          "items" : {
            "originalRef" : "DomainCancelation",
            "$ref" : "#/definitions/DomainCancelation"
          }
        },
        "ctid" : {
          "type" : "string",
          "description" : "The client transaction id for the response."
        }
      }
    },
    "JsonResponseDataDomainEnvelope" : {
      "type" : "object",
      "properties" : {
        "stid" : {
          "type" : "string",
          "description" : "The server transaction id for the response."
        },
        "messages" : {
          "type" : "array",
          "description" : "The messages belonging to the response.",
          "items" : {
            "originalRef" : "Message",
            "$ref" : "#/definitions/Message"
          }
        },
        "status" : {
          "description" : "The status of the response.",
          "originalRef" : "ResponseStatus",
          "$ref" : "#/definitions/ResponseStatus"
        },
        "object" : {
          "description" : "The object of the response.",
          "originalRef" : "ResponseObject",
          "$ref" : "#/definitions/ResponseObject"
        },
        "data" : {
          "type" : "array",
          "description" : "The data for the response. The type of the objects are depending on the request and are also specified in the responseObject value of the response.",
          "items" : {
            "originalRef" : "DomainEnvelope",
            "$ref" : "#/definitions/DomainEnvelope"
          }
        },
        "ctid" : {
          "type" : "string",
          "description" : "The client transaction id for the response."
        }
      }
    },
    "JsonResponseDataDomainRestore" : {
      "type" : "object",
      "properties" : {
        "stid" : {
          "type" : "string",
          "description" : "The server transaction id for the response."
        },
        "messages" : {
          "type" : "array",
          "description" : "The messages belonging to the response.",
          "items" : {
            "originalRef" : "Message",
            "$ref" : "#/definitions/Message"
          }
        },
        "status" : {
          "description" : "The status of the response.",
          "originalRef" : "ResponseStatus",
          "$ref" : "#/definitions/ResponseStatus"
        },
        "object" : {
          "description" : "The object of the response.",
          "originalRef" : "ResponseObject",
          "$ref" : "#/definitions/ResponseObject"
        },
        "data" : {
          "type" : "array",
          "description" : "The data for the response. The type of the objects are depending on the request and are also specified in the responseObject value of the response.",
          "items" : {
            "originalRef" : "DomainRestore",
            "$ref" : "#/definitions/DomainRestore"
          }
        },
        "ctid" : {
          "type" : "string",
          "description" : "The client transaction id for the response."
        }
      }
    },
    "JsonResponseDataHandleVerification" : {
      "type" : "object",
      "properties" : {
        "stid" : {
          "type" : "string",
          "description" : "The server transaction id for the response."
        },
        "messages" : {
          "type" : "array",
          "description" : "The messages belonging to the response.",
          "items" : {
            "originalRef" : "Message",
            "$ref" : "#/definitions/Message"
          }
        },
        "status" : {
          "description" : "The status of the response.",
          "originalRef" : "ResponseStatus",
          "$ref" : "#/definitions/ResponseStatus"
        },
        "object" : {
          "description" : "The object of the response.",
          "originalRef" : "ResponseObject",
          "$ref" : "#/definitions/ResponseObject"
        },
        "data" : {
          "type" : "array",
          "description" : "The data for the response. The type of the objects are depending on the request and are also specified in the responseObject value of the response.",
          "items" : {
            "originalRef" : "HandleVerification",
            "$ref" : "#/definitions/HandleVerification"
          }
        },
        "ctid" : {
          "type" : "string",
          "description" : "The client transaction id for the response."
        }
      }
    },
    "JsonResponseDataId4MeAgent" : {
      "type" : "object",
      "properties" : {
        "stid" : {
          "type" : "string",
          "description" : "The server transaction id for the response."
        },
        "messages" : {
          "type" : "array",
          "description" : "The messages belonging to the response.",
          "items" : {
            "originalRef" : "Message",
            "$ref" : "#/definitions/Message"
          }
        },
        "status" : {
          "description" : "The status of the response.",
          "originalRef" : "ResponseStatus",
          "$ref" : "#/definitions/ResponseStatus"
        },
        "object" : {
          "description" : "The object of the response.",
          "originalRef" : "ResponseObject",
          "$ref" : "#/definitions/ResponseObject"
        },
        "data" : {
          "type" : "array",
          "description" : "The data for the response. The type of the objects are depending on the request and are also specified in the responseObject value of the response.",
          "items" : {
            "originalRef" : "Id4MeAgent",
            "$ref" : "#/definitions/Id4MeAgent"
          }
        },
        "ctid" : {
          "type" : "string",
          "description" : "The client transaction id for the response."
        }
      }
    },
    "JsonResponseDataId4meIdentity" : {
      "type" : "object",
      "properties" : {
        "stid" : {
          "type" : "string",
          "description" : "The server transaction id for the response."
        },
        "messages" : {
          "type" : "array",
          "description" : "The messages belonging to the response.",
          "items" : {
            "originalRef" : "Message",
            "$ref" : "#/definitions/Message"
          }
        },
        "status" : {
          "description" : "The status of the response.",
          "originalRef" : "ResponseStatus",
          "$ref" : "#/definitions/ResponseStatus"
        },
        "object" : {
          "description" : "The object of the response.",
          "originalRef" : "ResponseObject",
          "$ref" : "#/definitions/ResponseObject"
        },
        "data" : {
          "type" : "array",
          "description" : "The data for the response. The type of the objects are depending on the request and are also specified in the responseObject value of the response.",
          "items" : {
            "originalRef" : "Id4meIdentity",
            "$ref" : "#/definitions/Id4meIdentity"
          }
        },
        "ctid" : {
          "type" : "string",
          "description" : "The client transaction id for the response."
        }
      }
    },
    "JsonResponseDataInvoice" : {
      "type" : "object",
      "properties" : {
        "stid" : {
          "type" : "string",
          "description" : "The server transaction id for the response."
        },
        "messages" : {
          "type" : "array",
          "description" : "The messages belonging to the response.",
          "items" : {
            "originalRef" : "Message",
            "$ref" : "#/definitions/Message"
          }
        },
        "status" : {
          "description" : "The status of the response.",
          "originalRef" : "ResponseStatus",
          "$ref" : "#/definitions/ResponseStatus"
        },
        "object" : {
          "description" : "The object of the response.",
          "originalRef" : "ResponseObject",
          "$ref" : "#/definitions/ResponseObject"
        },
        "data" : {
          "type" : "array",
          "description" : "The data for the response. The type of the objects are depending on the request and are also specified in the responseObject value of the response.",
          "items" : {
            "originalRef" : "Invoice",
            "$ref" : "#/definitions/Invoice"
          }
        },
        "ctid" : {
          "type" : "string",
          "description" : "The client transaction id for the response."
        }
      }
    },
    "JsonResponseDataJsonNoData" : {
      "type" : "object",
      "properties" : {
        "stid" : {
          "type" : "string",
          "description" : "The server transaction id for the response."
        },
        "messages" : {
          "type" : "array",
          "description" : "The messages belonging to the response.",
          "items" : {
            "originalRef" : "Message",
            "$ref" : "#/definitions/Message"
          }
        },
        "status" : {
          "description" : "The status of the response.",
          "originalRef" : "ResponseStatus",
          "$ref" : "#/definitions/ResponseStatus"
        },
        "object" : {
          "description" : "The object of the response.",
          "originalRef" : "ResponseObject",
          "$ref" : "#/definitions/ResponseObject"
        },
        "data" : {
          "type" : "array",
          "description" : "The data for the response. The type of the objects are depending on the request and are also specified in the responseObject value of the response.",
          "items" : {
            "originalRef" : "JsonNoData",
            "$ref" : "#/definitions/JsonNoData"
          }
        },
        "ctid" : {
          "type" : "string",
          "description" : "The client transaction id for the response."
        }
      }
    },
    "JsonResponseDataListJsonResponseDataBackupMx" : {
      "type" : "object",
      "properties" : {
        "stid" : {
          "type" : "string",
          "description" : "The server transaction id for the response."
        },
        "messages" : {
          "type" : "array",
          "description" : "The messages belonging to the response.",
          "items" : {
            "originalRef" : "Message",
            "$ref" : "#/definitions/Message"
          }
        },
        "status" : {
          "description" : "The status of the response.",
          "originalRef" : "ResponseStatus",
          "$ref" : "#/definitions/ResponseStatus"
        },
        "object" : {
          "description" : "The object of the response.",
          "originalRef" : "ResponseObject",
          "$ref" : "#/definitions/ResponseObject"
        },
        "data" : {
          "type" : "array",
          "description" : "The data for the response. The type of the objects are depending on the request and are also specified in the responseObject value of the response.",
          "items" : {
            "type" : "array",
            "items" : {
              "originalRef" : "JsonResponseDataBackupMx",
              "$ref" : "#/definitions/JsonResponseDataBackupMx"
            }
          }
        },
        "ctid" : {
          "type" : "string",
          "description" : "The client transaction id for the response."
        }
      }
    },
    "JsonResponseDataListJsonResponseDataDomain" : {
      "type" : "object",
      "properties" : {
        "stid" : {
          "type" : "string",
          "description" : "The server transaction id for the response."
        },
        "messages" : {
          "type" : "array",
          "description" : "The messages belonging to the response.",
          "items" : {
            "originalRef" : "Message",
            "$ref" : "#/definitions/Message"
          }
        },
        "status" : {
          "description" : "The status of the response.",
          "originalRef" : "ResponseStatus",
          "$ref" : "#/definitions/ResponseStatus"
        },
        "object" : {
          "description" : "The object of the response.",
          "originalRef" : "ResponseObject",
          "$ref" : "#/definitions/ResponseObject"
        },
        "data" : {
          "type" : "array",
          "description" : "The data for the response. The type of the objects are depending on the request and are also specified in the responseObject value of the response.",
          "items" : {
            "type" : "array",
            "items" : {
              "originalRef" : "JsonResponseDataDomain",
              "$ref" : "#/definitions/JsonResponseDataDomain"
            }
          }
        },
        "ctid" : {
          "type" : "string",
          "description" : "The client transaction id for the response."
        }
      }
    },
    "JsonResponseDataListJsonResponseDataDomainCancelation" : {
      "type" : "object",
      "properties" : {
        "stid" : {
          "type" : "string",
          "description" : "The server transaction id for the response."
        },
        "messages" : {
          "type" : "array",
          "description" : "The messages belonging to the response.",
          "items" : {
            "originalRef" : "Message",
            "$ref" : "#/definitions/Message"
          }
        },
        "status" : {
          "description" : "The status of the response.",
          "originalRef" : "ResponseStatus",
          "$ref" : "#/definitions/ResponseStatus"
        },
        "object" : {
          "description" : "The object of the response.",
          "originalRef" : "ResponseObject",
          "$ref" : "#/definitions/ResponseObject"
        },
        "data" : {
          "type" : "array",
          "description" : "The data for the response. The type of the objects are depending on the request and are also specified in the responseObject value of the response.",
          "items" : {
            "type" : "array",
            "items" : {
              "originalRef" : "JsonResponseDataDomainCancelation",
              "$ref" : "#/definitions/JsonResponseDataDomainCancelation"
            }
          }
        },
        "ctid" : {
          "type" : "string",
          "description" : "The client transaction id for the response."
        }
      }
    },
    "JsonResponseDataListJsonResponseDataMailProxy" : {
      "type" : "object",
      "properties" : {
        "stid" : {
          "type" : "string",
          "description" : "The server transaction id for the response."
        },
        "messages" : {
          "type" : "array",
          "description" : "The messages belonging to the response.",
          "items" : {
            "originalRef" : "Message",
            "$ref" : "#/definitions/Message"
          }
        },
        "status" : {
          "description" : "The status of the response.",
          "originalRef" : "ResponseStatus",
          "$ref" : "#/definitions/ResponseStatus"
        },
        "object" : {
          "description" : "The object of the response.",
          "originalRef" : "ResponseObject",
          "$ref" : "#/definitions/ResponseObject"
        },
        "data" : {
          "type" : "array",
          "description" : "The data for the response. The type of the objects are depending on the request and are also specified in the responseObject value of the response.",
          "items" : {
            "type" : "array",
            "items" : {
              "originalRef" : "JsonResponseDataMailProxy",
              "$ref" : "#/definitions/JsonResponseDataMailProxy"
            }
          }
        },
        "ctid" : {
          "type" : "string",
          "description" : "The client transaction id for the response."
        }
      }
    },
    "JsonResponseDataListJsonResponseDataRedirect" : {
      "type" : "object",
      "properties" : {
        "stid" : {
          "type" : "string",
          "description" : "The server transaction id for the response."
        },
        "messages" : {
          "type" : "array",
          "description" : "The messages belonging to the response.",
          "items" : {
            "originalRef" : "Message",
            "$ref" : "#/definitions/Message"
          }
        },
        "status" : {
          "description" : "The status of the response.",
          "originalRef" : "ResponseStatus",
          "$ref" : "#/definitions/ResponseStatus"
        },
        "object" : {
          "description" : "The object of the response.",
          "originalRef" : "ResponseObject",
          "$ref" : "#/definitions/ResponseObject"
        },
        "data" : {
          "type" : "array",
          "description" : "The data for the response. The type of the objects are depending on the request and are also specified in the responseObject value of the response.",
          "items" : {
            "type" : "array",
            "items" : {
              "originalRef" : "JsonResponseDataRedirect",
              "$ref" : "#/definitions/JsonResponseDataRedirect"
            }
          }
        },
        "ctid" : {
          "type" : "string",
          "description" : "The client transaction id for the response."
        }
      }
    },
    "JsonResponseDataListJsonResponseDataZone" : {
      "type" : "object",
      "properties" : {
        "stid" : {
          "type" : "string",
          "description" : "The server transaction id for the response."
        },
        "messages" : {
          "type" : "array",
          "description" : "The messages belonging to the response.",
          "items" : {
            "originalRef" : "Message",
            "$ref" : "#/definitions/Message"
          }
        },
        "status" : {
          "description" : "The status of the response.",
          "originalRef" : "ResponseStatus",
          "$ref" : "#/definitions/ResponseStatus"
        },
        "object" : {
          "description" : "The object of the response.",
          "originalRef" : "ResponseObject",
          "$ref" : "#/definitions/ResponseObject"
        },
        "data" : {
          "type" : "array",
          "description" : "The data for the response. The type of the objects are depending on the request and are also specified in the responseObject value of the response.",
          "items" : {
            "type" : "array",
            "items" : {
              "originalRef" : "JsonResponseDataZone",
              "$ref" : "#/definitions/JsonResponseDataZone"
            }
          }
        },
        "ctid" : {
          "type" : "string",
          "description" : "The client transaction id for the response."
        }
      }
    },
    "JsonResponseDataMailProxy" : {
      "type" : "object",
      "properties" : {
        "stid" : {
          "type" : "string",
          "description" : "The server transaction id for the response."
        },
        "messages" : {
          "type" : "array",
          "description" : "The messages belonging to the response.",
          "items" : {
            "originalRef" : "Message",
            "$ref" : "#/definitions/Message"
          }
        },
        "status" : {
          "description" : "The status of the response.",
          "originalRef" : "ResponseStatus",
          "$ref" : "#/definitions/ResponseStatus"
        },
        "object" : {
          "description" : "The object of the response.",
          "originalRef" : "ResponseObject",
          "$ref" : "#/definitions/ResponseObject"
        },
        "data" : {
          "type" : "array",
          "description" : "The data for the response. The type of the objects are depending on the request and are also specified in the responseObject value of the response.",
          "items" : {
            "originalRef" : "MailProxy",
            "$ref" : "#/definitions/MailProxy"
          }
        },
        "ctid" : {
          "type" : "string",
          "description" : "The client transaction id for the response."
        }
      }
    },
    "JsonResponseDataOTPAuth" : {
      "type" : "object",
      "properties" : {
        "stid" : {
          "type" : "string",
          "description" : "The server transaction id for the response."
        },
        "messages" : {
          "type" : "array",
          "description" : "The messages belonging to the response.",
          "items" : {
            "originalRef" : "Message",
            "$ref" : "#/definitions/Message"
          }
        },
        "status" : {
          "description" : "The status of the response.",
          "originalRef" : "ResponseStatus",
          "$ref" : "#/definitions/ResponseStatus"
        },
        "object" : {
          "description" : "The object of the response.",
          "originalRef" : "ResponseObject",
          "$ref" : "#/definitions/ResponseObject"
        },
        "data" : {
          "type" : "array",
          "description" : "The data for the response. The type of the objects are depending on the request and are also specified in the responseObject value of the response.",
          "items" : {
            "originalRef" : "OTPAuth",
            "$ref" : "#/definitions/OTPAuth"
          }
        },
        "ctid" : {
          "type" : "string",
          "description" : "The client transaction id for the response."
        }
      }
    },
    "JsonResponseDataObjectJob" : {
      "type" : "object",
      "properties" : {
        "stid" : {
          "type" : "string",
          "description" : "The server transaction id for the response."
        },
        "messages" : {
          "type" : "array",
          "description" : "The messages belonging to the response.",
          "items" : {
            "originalRef" : "Message",
            "$ref" : "#/definitions/Message"
          }
        },
        "status" : {
          "description" : "The status of the response.",
          "originalRef" : "ResponseStatus",
          "$ref" : "#/definitions/ResponseStatus"
        },
        "object" : {
          "description" : "The object of the response.",
          "originalRef" : "ResponseObject",
          "$ref" : "#/definitions/ResponseObject"
        },
        "data" : {
          "type" : "array",
          "description" : "The data for the response. The type of the objects are depending on the request and are also specified in the responseObject value of the response.",
          "items" : {
            "originalRef" : "ObjectJob",
            "$ref" : "#/definitions/ObjectJob"
          }
        },
        "ctid" : {
          "type" : "string",
          "description" : "The client transaction id for the response."
        }
      }
    },
    "JsonResponseDataPeriodicBilling" : {
      "type" : "object",
      "properties" : {
        "stid" : {
          "type" : "string",
          "description" : "The server transaction id for the response."
        },
        "messages" : {
          "type" : "array",
          "description" : "The messages belonging to the response.",
          "items" : {
            "originalRef" : "Message",
            "$ref" : "#/definitions/Message"
          }
        },
        "status" : {
          "description" : "The status of the response.",
          "originalRef" : "ResponseStatus",
          "$ref" : "#/definitions/ResponseStatus"
        },
        "object" : {
          "description" : "The object of the response.",
          "originalRef" : "ResponseObject",
          "$ref" : "#/definitions/ResponseObject"
        },
        "data" : {
          "type" : "array",
          "description" : "The data for the response. The type of the objects are depending on the request and are also specified in the responseObject value of the response.",
          "items" : {
            "originalRef" : "PeriodicBilling",
            "$ref" : "#/definitions/PeriodicBilling"
          }
        },
        "ctid" : {
          "type" : "string",
          "description" : "The client transaction id for the response."
        }
      }
    },
    "JsonResponseDataPollMessage" : {
      "type" : "object",
      "properties" : {
        "stid" : {
          "type" : "string",
          "description" : "The server transaction id for the response."
        },
        "messages" : {
          "type" : "array",
          "description" : "The messages belonging to the response.",
          "items" : {
            "originalRef" : "Message",
            "$ref" : "#/definitions/Message"
          }
        },
        "status" : {
          "description" : "The status of the response.",
          "originalRef" : "ResponseStatus",
          "$ref" : "#/definitions/ResponseStatus"
        },
        "object" : {
          "description" : "The object of the response.",
          "originalRef" : "ResponseObject",
          "$ref" : "#/definitions/ResponseObject"
        },
        "data" : {
          "type" : "array",
          "description" : "The data for the response. The type of the objects are depending on the request and are also specified in the responseObject value of the response.",
          "items" : {
            "originalRef" : "PollMessage",
            "$ref" : "#/definitions/PollMessage"
          }
        },
        "ctid" : {
          "type" : "string",
          "description" : "The client transaction id for the response."
        }
      }
    },
    "JsonResponseDataRedirect" : {
      "type" : "object",
      "properties" : {
        "stid" : {
          "type" : "string",
          "description" : "The server transaction id for the response."
        },
        "messages" : {
          "type" : "array",
          "description" : "The messages belonging to the response.",
          "items" : {
            "originalRef" : "Message",
            "$ref" : "#/definitions/Message"
          }
        },
        "status" : {
          "description" : "The status of the response.",
          "originalRef" : "ResponseStatus",
          "$ref" : "#/definitions/ResponseStatus"
        },
        "object" : {
          "description" : "The object of the response.",
          "originalRef" : "ResponseObject",
          "$ref" : "#/definitions/ResponseObject"
        },
        "data" : {
          "type" : "array",
          "description" : "The data for the response. The type of the objects are depending on the request and are also specified in the responseObject value of the response.",
          "items" : {
            "originalRef" : "Redirect",
            "$ref" : "#/definitions/Redirect"
          }
        },
        "ctid" : {
          "type" : "string",
          "description" : "The client transaction id for the response."
        }
      }
    },
    "JsonResponseDataSslContact" : {
      "type" : "object",
      "properties" : {
        "stid" : {
          "type" : "string",
          "description" : "The server transaction id for the response."
        },
        "messages" : {
          "type" : "array",
          "description" : "The messages belonging to the response.",
          "items" : {
            "originalRef" : "Message",
            "$ref" : "#/definitions/Message"
          }
        },
        "status" : {
          "description" : "The status of the response.",
          "originalRef" : "ResponseStatus",
          "$ref" : "#/definitions/ResponseStatus"
        },
        "object" : {
          "description" : "The object of the response.",
          "originalRef" : "ResponseObject",
          "$ref" : "#/definitions/ResponseObject"
        },
        "data" : {
          "type" : "array",
          "description" : "The data for the response. The type of the objects are depending on the request and are also specified in the responseObject value of the response.",
          "items" : {
            "originalRef" : "SslContact",
            "$ref" : "#/definitions/SslContact"
          }
        },
        "ctid" : {
          "type" : "string",
          "description" : "The client transaction id for the response."
        }
      }
    },
    "JsonResponseDataString" : {
      "type" : "object",
      "properties" : {
        "stid" : {
          "type" : "string",
          "description" : "The server transaction id for the response."
        },
        "messages" : {
          "type" : "array",
          "description" : "The messages belonging to the response.",
          "items" : {
            "originalRef" : "Message",
            "$ref" : "#/definitions/Message"
          }
        },
        "status" : {
          "description" : "The status of the response.",
          "originalRef" : "ResponseStatus",
          "$ref" : "#/definitions/ResponseStatus"
        },
        "object" : {
          "description" : "The object of the response.",
          "originalRef" : "ResponseObject",
          "$ref" : "#/definitions/ResponseObject"
        },
        "data" : {
          "type" : "array",
          "description" : "The data for the response. The type of the objects are depending on the request and are also specified in the responseObject value of the response.",
          "items" : {
            "type" : "string"
          }
        },
        "ctid" : {
          "type" : "string",
          "description" : "The client transaction id for the response."
        }
      }
    },
    "JsonResponseDataTransfer" : {
      "type" : "object",
      "properties" : {
        "stid" : {
          "type" : "string",
          "description" : "The server transaction id for the response."
        },
        "messages" : {
          "type" : "array",
          "description" : "The messages belonging to the response.",
          "items" : {
            "originalRef" : "Message",
            "$ref" : "#/definitions/Message"
          }
        },
        "status" : {
          "description" : "The status of the response.",
          "originalRef" : "ResponseStatus",
          "$ref" : "#/definitions/ResponseStatus"
        },
        "object" : {
          "description" : "The object of the response.",
          "originalRef" : "ResponseObject",
          "$ref" : "#/definitions/ResponseObject"
        },
        "data" : {
          "type" : "array",
          "description" : "The data for the response. The type of the objects are depending on the request and are also specified in the responseObject value of the response.",
          "items" : {
            "originalRef" : "Transfer",
            "$ref" : "#/definitions/Transfer"
          }
        },
        "ctid" : {
          "type" : "string",
          "description" : "The client transaction id for the response."
        }
      }
    },
    "JsonResponseDataTransferOut" : {
      "type" : "object",
      "properties" : {
        "stid" : {
          "type" : "string",
          "description" : "The server transaction id for the response."
        },
        "messages" : {
          "type" : "array",
          "description" : "The messages belonging to the response.",
          "items" : {
            "originalRef" : "Message",
            "$ref" : "#/definitions/Message"
          }
        },
        "status" : {
          "description" : "The status of the response.",
          "originalRef" : "ResponseStatus",
          "$ref" : "#/definitions/ResponseStatus"
        },
        "object" : {
          "description" : "The object of the response.",
          "originalRef" : "ResponseObject",
          "$ref" : "#/definitions/ResponseObject"
        },
        "data" : {
          "type" : "array",
          "description" : "The data for the response. The type of the objects are depending on the request and are also specified in the responseObject value of the response.",
          "items" : {
            "originalRef" : "TransferOut",
            "$ref" : "#/definitions/TransferOut"
          }
        },
        "ctid" : {
          "type" : "string",
          "description" : "The client transaction id for the response."
        }
      }
    },
    "JsonResponseDataTrustedApplication" : {
      "type" : "object",
      "properties" : {
        "stid" : {
          "type" : "string",
          "description" : "The server transaction id for the response."
        },
        "messages" : {
          "type" : "array",
          "description" : "The messages belonging to the response.",
          "items" : {
            "originalRef" : "Message",
            "$ref" : "#/definitions/Message"
          }
        },
        "status" : {
          "description" : "The status of the response.",
          "originalRef" : "ResponseStatus",
          "$ref" : "#/definitions/ResponseStatus"
        },
        "object" : {
          "description" : "The object of the response.",
          "originalRef" : "ResponseObject",
          "$ref" : "#/definitions/ResponseObject"
        },
        "data" : {
          "type" : "array",
          "description" : "The data for the response. The type of the objects are depending on the request and are also specified in the responseObject value of the response.",
          "items" : {
            "originalRef" : "TrustedApplication",
            "$ref" : "#/definitions/TrustedApplication"
          }
        },
        "ctid" : {
          "type" : "string",
          "description" : "The client transaction id for the response."
        }
      }
    },
    "JsonResponseDataUser" : {
      "type" : "object",
      "properties" : {
        "stid" : {
          "type" : "string",
          "description" : "The server transaction id for the response."
        },
        "messages" : {
          "type" : "array",
          "description" : "The messages belonging to the response.",
          "items" : {
            "originalRef" : "Message",
            "$ref" : "#/definitions/Message"
          }
        },
        "status" : {
          "description" : "The status of the response.",
          "originalRef" : "ResponseStatus",
          "$ref" : "#/definitions/ResponseStatus"
        },
        "object" : {
          "description" : "The object of the response.",
          "originalRef" : "ResponseObject",
          "$ref" : "#/definitions/ResponseObject"
        },
        "data" : {
          "type" : "array",
          "description" : "The data for the response. The type of the objects are depending on the request and are also specified in the responseObject value of the response.",
          "items" : {
            "originalRef" : "User",
            "$ref" : "#/definitions/User"
          }
        },
        "ctid" : {
          "type" : "string",
          "description" : "The client transaction id for the response."
        }
      }
    },
    "JsonResponseDataVoid" : {
      "type" : "object",
      "properties" : {
        "stid" : {
          "type" : "string",
          "description" : "The server transaction id for the response."
        },
        "messages" : {
          "type" : "array",
          "description" : "The messages belonging to the response.",
          "items" : {
            "originalRef" : "Message",
            "$ref" : "#/definitions/Message"
          }
        },
        "status" : {
          "description" : "The status of the response.",
          "originalRef" : "ResponseStatus",
          "$ref" : "#/definitions/ResponseStatus"
        },
        "object" : {
          "description" : "The object of the response.",
          "originalRef" : "ResponseObject",
          "$ref" : "#/definitions/ResponseObject"
        },
        "data" : {
          "type" : "array",
          "description" : "The data for the response. The type of the objects are depending on the request and are also specified in the responseObject value of the response.",
          "items" : {
            "originalRef" : "Void",
            "$ref" : "#/definitions/Void"
          }
        },
        "ctid" : {
          "type" : "string",
          "description" : "The client transaction id for the response."
        }
      }
    },
    "JsonResponseDataZone" : {
      "type" : "object",
      "properties" : {
        "stid" : {
          "type" : "string",
          "description" : "The server transaction id for the response."
        },
        "messages" : {
          "type" : "array",
          "description" : "The messages belonging to the response.",
          "items" : {
            "originalRef" : "Message",
            "$ref" : "#/definitions/Message"
          }
        },
        "status" : {
          "description" : "The status of the response.",
          "originalRef" : "ResponseStatus",
          "$ref" : "#/definitions/ResponseStatus"
        },
        "object" : {
          "description" : "The object of the response.",
          "originalRef" : "ResponseObject",
          "$ref" : "#/definitions/ResponseObject"
        },
        "data" : {
          "type" : "array",
          "description" : "The data for the response. The type of the objects are depending on the request and are also specified in the responseObject value of the response.",
          "items" : {
            "originalRef" : "Zone",
            "$ref" : "#/definitions/Zone"
          }
        },
        "ctid" : {
          "type" : "string",
          "description" : "The client transaction id for the response."
        }
      }
    },
    "LoginData" : {
      "type" : "object",
      "required" : [ "context", "user" ],
      "properties" : {
        "context" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The context."
        },
        "password" : {
          "type" : "string",
          "description" : "The password."
        },
        "token" : {
          "type" : "string",
          "description" : "The one time password in case of 2fa authentication."
        },
        "user" : {
          "type" : "string",
          "description" : "The user name.",
          "pattern" : "^[^_].*"
        }
      }
    },
    "MailList" : {
      "type" : "object",
      "properties" : {
        "emails" : {
          "type" : "array",
          "description" : "A list of email addresses",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "MailProxy" : {
      "type" : "object",
      "required" : [ "domain", "target" ],
      "properties" : {
        "domain" : {
          "type" : "string",
          "description" : "The domain of the mail exchange to backup"
        },
        "idn" : {
          "type" : "string",
          "description" : "The idn version of the domain."
        },
        "created" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The date of the creation"
        },
        "updated" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The date of the last updated"
        },
        "owner" : {
          "description" : "The owner of the entry",
          "originalRef" : "BasicUser",
          "$ref" : "#/definitions/BasicUser"
        },
        "updater" : {
          "description" : "The last updater of the entry",
          "originalRef" : "BasicUser",
          "$ref" : "#/definitions/BasicUser"
        },
        "target" : {
          "type" : "string",
          "description" : "The hostname of the target mailserver"
        },
        "admin" : {
          "type" : "string",
          "description" : "email address of the administrator"
        },
        "protection" : {
          "description" : "The protection level",
          "originalRef" : "ProtectionConstants",
          "$ref" : "#/definitions/ProtectionConstants"
        },
        "greylisting" : {
          "type" : "boolean",
          "description" : "The grey listing policy"
        },
        "virus" : {
          "type" : "string",
          "description" : "The virus options to use",
          "enum" : [ "DISABLED", "QUARANTINE", "DISCARD", "ACCEPT" ]
        },
        "bannedFiles" : {
          "type" : "string",
          "description" : "The banned files options to use",
          "enum" : [ "DISABLED", "QUARANTINE", "DISCARD", "ACCEPT" ]
        },
        "header" : {
          "type" : "string",
          "description" : "The mail header options to use",
          "enum" : [ "DISABLED", "QUARANTINE", "DISCARD", "ACCEPT" ]
        },
        "spam" : {
          "description" : "The spam policy options",
          "originalRef" : "SpamPolicy",
          "$ref" : "#/definitions/SpamPolicy"
        },
        "whitelist" : {
          "description" : "The white listed email addresses",
          "originalRef" : "MailList",
          "$ref" : "#/definitions/MailList"
        },
        "blacklist" : {
          "description" : "The black listed email addresses",
          "originalRef" : "MailList",
          "$ref" : "#/definitions/MailList"
        },
        "excludelist" : {
          "description" : "The exculded listed email addresses",
          "originalRef" : "MailList",
          "$ref" : "#/definitions/MailList"
        }
      }
    },
    "MainIp" : {
      "type" : "object",
      "properties" : {
        "address" : {
          "type" : "string",
          "example" : "127.0.0.1",
          "description" : "Lorem Ipsum"
        },
        "ttl" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 86000,
          "description" : "The ttl of main address to use"
        }
      }
    },
    "Message" : {
      "type" : "object",
      "properties" : {
        "text" : {
          "type" : "string",
          "description" : "The text."
        },
        "messages" : {
          "type" : "array",
          "description" : "The messages.",
          "items" : {
            "originalRef" : "Message",
            "$ref" : "#/definitions/Message"
          }
        },
        "objects" : {
          "type" : "array",
          "description" : "The objects.",
          "items" : {
            "originalRef" : "GenericObject",
            "$ref" : "#/definitions/GenericObject"
          }
        },
        "code" : {
          "type" : "string",
          "description" : "The message code."
        },
        "status" : {
          "example" : "ERROR",
          "description" : "The status of the message code.",
          "originalRef" : "StatusType",
          "$ref" : "#/definitions/StatusType"
        }
      }
    },
    "Modifier" : {
      "type" : "object",
      "required" : [ "type" ],
      "properties" : {
        "search" : {
          "type" : "string",
          "description" : "The search pattern"
        },
        "replace" : {
          "type" : "string",
          "description" : "The replacement value"
        },
        "type" : {
          "description" : "The modifiers type, e.g. NAME_SERVER",
          "originalRef" : "ModifierConstants",
          "$ref" : "#/definitions/ModifierConstants"
        }
      }
    },
    "ModifierConstants" : {
      "type" : "string",
      "enum" : [ "TTL", "MX", "A", "AAAA", "SOA_EMAIL", "NSERVER", "CNAME", "TXT", "ALL", "MAIN_IP", "OWNERC", "ADMINC", "TECHC", "ZONEC", "BILLINGC", "ALIAS" ]
    },
    "Name" : {
      "type" : "object"
    },
    "NameServer" : {
      "type" : "object",
      "required" : [ "name" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "Host name of the nameserver."
        },
        "ttl" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The time to live."
        },
        "ipAddresses" : {
          "type" : "array",
          "description" : "The ip addresses.",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "NameserverActionConstants" : {
      "type" : "string",
      "enum" : [ "PRIMARY", "SECONDARY", "COMPLETE", "HIDDEN", "NONE", "AUTO" ]
    },
    "NicMember" : {
      "type" : "object",
      "properties" : {
        "label" : {
          "type" : "string",
          "description" : "The label"
        },
        "name" : {
          "type" : "string",
          "description" : "The name"
        }
      }
    },
    "NotifyMessage" : {
      "type" : "object",
      "properties" : {
        "type" : {
          "type" : "string",
          "example" : "domain_away",
          "description" : "The specific message type."
        }
      }
    },
    "OTPAuth" : {
      "type" : "object",
      "required" : [ "algorithm", "digits", "protocolType", "timeout" ],
      "properties" : {
        "created" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The created date."
        },
        "updated" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The updated date."
        },
        "owner" : {
          "description" : "The owner of the object.",
          "originalRef" : "BasicUser",
          "$ref" : "#/definitions/BasicUser"
        },
        "updater" : {
          "description" : "The updating user of the object.",
          "originalRef" : "BasicUser",
          "$ref" : "#/definitions/BasicUser"
        },
        "protocolType" : {
          "description" : "The type of protocol",
          "originalRef" : "ProtocolTypeConstants",
          "$ref" : "#/definitions/ProtocolTypeConstants"
        },
        "algorithm" : {
          "description" : "Crypto algorithm",
          "originalRef" : "CryptoFormatConstants",
          "$ref" : "#/definitions/CryptoFormatConstants"
        },
        "timeout" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Timeout in seconds",
          "minimum" : 5,
          "maximum" : 90
        },
        "digits" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The length of the token"
        },
        "secret" : {
          "type" : "string",
          "description" : "Base32 encoded shared secret."
        },
        "tokens" : {
          "type" : "array",
          "description" : "The generated support 'tokens'.",
          "uniqueItems" : true,
          "items" : {
            "type" : "string"
          }
        },
        "qrCode" : {
          "description" : "The generated qr code png.",
          "originalRef" : "BasicDocument",
          "$ref" : "#/definitions/BasicDocument"
        }
      }
    },
    "ObjectJob" : {
      "type" : "object",
      "properties" : {
        "job" : {
          "description" : "The related job.",
          "originalRef" : "Job",
          "$ref" : "#/definitions/Job"
        },
        "object" : {
          "description" : "The object of the job or notify.",
          "originalRef" : "ResponseObject",
          "$ref" : "#/definitions/ResponseObject"
        }
      }
    },
    "ObjectStatus" : {
      "type" : "string",
      "enum" : [ "SPOOL", "REQUEST", "PENDING_NOTIFY", "PENDING", "FAILED", "SUCCESS", "PENDING_DOMAIN", "CONNECT" ]
    },
    "Operator" : {
      "type" : "string",
      "enum" : [ "EQUAL", "NOT_EQUAL", "NOT_LIKE", "LIKE", "ILIKE", "GREATER", "GREATER_EQUAL", "LESS", "LESS_EQUAL", "IS_NULL", "IS_NOT_NULL", "IN" ]
    },
    "OrderType" : {
      "type" : "string",
      "enum" : [ "DESC", "ASC" ]
    },
    "ParkingProviderConstants" : {
      "type" : "string",
      "enum" : [ "SEDO", "NAMEDRIVE", "PARKINGCREW" ]
    },
    "PaymentConstants" : {
      "type" : "string",
      "enum" : [ "PRE", "POST", "LIVE" ]
    },
    "PeriodicBilling" : {
      "type" : "object",
      "properties" : {
        "created" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The created date."
        },
        "updated" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The updated date."
        },
        "owner" : {
          "description" : "The owner of the object.",
          "originalRef" : "BasicUser",
          "$ref" : "#/definitions/BasicUser"
        },
        "updater" : {
          "description" : "The updating user of the object.",
          "originalRef" : "BasicUser",
          "$ref" : "#/definitions/BasicUser"
        },
        "status" : {
          "description" : "The actual status of the entry, active means ok.",
          "originalRef" : "BillingStatus",
          "$ref" : "#/definitions/BillingStatus"
        },
        "object" : {
          "type" : "string",
          "description" : "The name of the subscription, e.g. the contract number"
        },
        "description" : {
          "type" : "string",
          "description" : "The human readable name of the subscription, e.g. the name of a package"
        },
        "period" : {
          "description" : "The period used by the subscription, e.g. 1 month",
          "originalRef" : "TimePeriod",
          "$ref" : "#/definitions/TimePeriod"
        },
        "articleTypeLabel" : {
          "type" : "string",
          "description" : "The article type label of the subscription, e.g. domain"
        },
        "articleLabel" : {
          "type" : "string",
          "description" : "The article label of the subscription, e.g. backup_mx"
        },
        "item" : {
          "type" : "array",
          "description" : "The items of the subscription",
          "items" : {
            "originalRef" : "PeriodicBilling",
            "$ref" : "#/definitions/PeriodicBilling"
          }
        },
        "businessCase" : {
          "type" : "string",
          "description" : "The businessCase of the subscription, e.g. create"
        }
      }
    },
    "Phone" : {
      "type" : "object"
    },
    "PhysicalNameServerGroup" : {
      "type" : "object",
      "properties" : {
        "created" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The created date."
        },
        "updated" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The updated date."
        },
        "name" : {
          "type" : "string",
          "description" : "The custom label for the group"
        },
        "articleLabel" : {
          "type" : "string",
          "description" : "The article label of the name server group, will be used for each created zone using these group"
        },
        "dnssec" : {
          "type" : "boolean",
          "description" : "If the group supports dnssec"
        },
        "statistic" : {
          "type" : "boolean",
          "description" : "If the group contains statistical data for a zone"
        }
      }
    },
    "PollMessage" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The message id."
        },
        "owner" : {
          "description" : "The owner of the message.",
          "originalRef" : "BasicUser",
          "$ref" : "#/definitions/BasicUser"
        },
        "job" : {
          "description" : "The job data. Available if the message is a job message",
          "originalRef" : "WorkflowSpool",
          "$ref" : "#/definitions/WorkflowSpool"
        },
        "notify" : {
          "description" : "The notification data. Available if the message is a notification message",
          "originalRef" : "NotifyMessage",
          "$ref" : "#/definitions/NotifyMessage"
        },
        "stid" : {
          "type" : "string",
          "description" : "The server transaction id."
        },
        "ctid" : {
          "type" : "string",
          "description" : "the custom transaction id."
        },
        "messages" : {
          "type" : "array",
          "description" : "The general localized messages.",
          "items" : {
            "originalRef" : "Message",
            "$ref" : "#/definitions/Message"
          }
        },
        "flags" : {
          "type" : "string",
          "description" : "Optional message flags."
        },
        "created" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The created date."
        },
        "object" : {
          "description" : "The object of the job or notify.",
          "originalRef" : "ResponseObject",
          "$ref" : "#/definitions/ResponseObject"
        }
      }
    },
    "PriceData" : {
      "type" : "object",
      "properties" : {
        "prices" : {
          "type" : "array",
          "description" : "The subject products",
          "items" : {
            "originalRef" : "SimplePrice",
            "$ref" : "#/definitions/SimplePrice"
          }
        }
      }
    },
    "PriceServiceData" : {
      "type" : "object",
      "properties" : {
        "debugTime" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The debug time"
        },
        "status" : {
          "description" : "The status",
          "originalRef" : "DomainStudioServiceStatus",
          "$ref" : "#/definitions/DomainStudioServiceStatus"
        },
        "message" : {
          "type" : "string",
          "description" : "A message with more information, if the status is FAILED."
        },
        "data" : {
          "description" : "The subject products",
          "originalRef" : "PriceData",
          "$ref" : "#/definitions/PriceData"
        }
      }
    },
    "PriceServiceEntity" : {
      "type" : "object",
      "properties" : {
        "configuration" : {
          "type" : "object",
          "description" : "Lorem Ipum",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "condition" : {
          "description" : "Lorem Ipum",
          "originalRef" : "ServiceEntity",
          "$ref" : "#/definitions/ServiceEntity"
        }
      }
    },
    "PriceTypeConstants" : {
      "type" : "string",
      "enum" : [ "GROSS", "NET" ]
    },
    "PriorityConstants" : {
      "type" : "string",
      "enum" : [ "DEFAULT", "OFFER", "PROTECTED", "PROMO" ]
    },
    "ProtectionConstants" : {
      "type" : "string",
      "enum" : [ "HIGH", "MEDIUM", "LOW", "OFF", "CUSTOM" ]
    },
    "ProtocolTypeConstants" : {
      "type" : "string",
      "enum" : [ "TOTP", "HOTP" ]
    },
    "Query" : {
      "type" : "object",
      "properties" : {
        "filters" : {
          "type" : "array",
          "description" : "Lorem Ipsum",
          "items" : {
            "originalRef" : "QueryFilter",
            "$ref" : "#/definitions/QueryFilter"
          }
        },
        "view" : {
          "description" : "Lorem Ipsum",
          "originalRef" : "QueryView",
          "$ref" : "#/definitions/QueryView"
        },
        "orders" : {
          "type" : "array",
          "description" : "Lorem Ipsum",
          "items" : {
            "originalRef" : "QueryOrder",
            "$ref" : "#/definitions/QueryOrder"
          }
        }
      }
    },
    "QueryFilter" : {
      "type" : "object",
      "properties" : {
        "key" : {
          "type" : "string",
          "description" : "Lorem Ipsum"
        },
        "value" : {
          "type" : "string",
          "description" : "Lorem Ipsum"
        },
        "operator" : {
          "description" : "Lorem Ipsum",
          "originalRef" : "Operator",
          "$ref" : "#/definitions/Operator"
        },
        "link" : {
          "description" : "Lorem Ipsum",
          "originalRef" : "ConditionType",
          "$ref" : "#/definitions/ConditionType"
        },
        "filters" : {
          "type" : "array",
          "description" : "Lorem Ipsum",
          "items" : {
            "originalRef" : "QueryFilter",
            "$ref" : "#/definitions/QueryFilter"
          }
        }
      }
    },
    "QueryOrder" : {
      "type" : "object",
      "properties" : {
        "key" : {
          "type" : "string",
          "description" : "Lorem Ipsum"
        },
        "ins" : {
          "type" : "array",
          "description" : "Lorem Ipsum",
          "items" : {
            "type" : "string"
          }
        },
        "type" : {
          "description" : "Lorem Ipsum",
          "originalRef" : "OrderType",
          "$ref" : "#/definitions/OrderType"
        }
      }
    },
    "QueryView" : {
      "type" : "object",
      "properties" : {
        "limit" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Lorem Ipsum"
        },
        "offset" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Lorem Ipsum"
        },
        "children" : {
          "type" : "boolean",
          "description" : "Lorem Ipsum"
        },
        "from" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Lorem Ipsum"
        },
        "to" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Lorem Ipsum"
        }
      }
    },
    "RddsOptInConstants" : {
      "type" : "string",
      "enum" : [ "NOT_SET", "OWNERC", "ADMINC", "OWNERC_ADMINC", "TECHC", "OWNERC_TECHC", "ADMINC_TECHC", "ALL" ]
    },
    "Redirect" : {
      "type" : "object",
      "required" : [ "mode", "type" ],
      "properties" : {
        "created" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The created date."
        },
        "updated" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The updated date."
        },
        "owner" : {
          "description" : "The owner of the object.",
          "originalRef" : "BasicUser",
          "$ref" : "#/definitions/BasicUser"
        },
        "updater" : {
          "description" : "The updater of the object.",
          "originalRef" : "BasicUser",
          "$ref" : "#/definitions/BasicUser"
        },
        "source" : {
          "type" : "string",
          "description" : "The domain to be redirected. Enter the domain with or without \"www\"."
        },
        "target" : {
          "type" : "string",
          "description" : "The URL of the target domain. Enter the domain without \"http://\""
        },
        "type" : {
          "description" : "Redirect type",
          "originalRef" : "RedirectTypeConstants",
          "$ref" : "#/definitions/RedirectTypeConstants"
        },
        "mode" : {
          "description" : "Redirect mode",
          "originalRef" : "RedirectModeConstants",
          "$ref" : "#/definitions/RedirectModeConstants"
        },
        "domain" : {
          "type" : "string",
          "description" : "The domain, which the redirect belongs."
        },
        "title" : {
          "type" : "string",
          "description" : "Lorem Ipsum"
        },
        "backups" : {
          "type" : "array",
          "description" : "Lorem Ipsum",
          "items" : {
            "type" : "string"
          },
          "maxItems" : 3,
          "minItems" : 0
        },
        "sourceIdn" : {
          "type" : "string",
          "description" : "The IDN version of the domain to be redirected. Enter the domain with or without \"www\"."
        },
        "targetIdn" : {
          "type" : "string",
          "description" : "The IDN version of the URL of the target domain. Enter the domain without \"http://\""
        },
        "lastSeen" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The last dns connection."
        }
      }
    },
    "RedirectModeConstants" : {
      "type" : "string",
      "enum" : [ "CATCHALL", "FRAME", "HTTP", "SINGLE", "HTTPS" ]
    },
    "RedirectTypeConstants" : {
      "type" : "string",
      "enum" : [ "DOMAIN", "EMAIL" ]
    },
    "RegistryStatusConstants" : {
      "type" : "string",
      "enum" : [ "ACTIVE", "HOLD", "LOCK", "HOLD_LOCK", "AUTO", "LOCK_OWNER", "LOCK_UPDATE", "PENDING", "NONE" ]
    },
    "ResourceRecord" : {
      "type" : "object",
      "required" : [ "name" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "The name of the record."
        },
        "ttl" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "TTL of the record (Optionally if not set then Default SOA TTL is used)"
        },
        "type" : {
          "type" : "string",
          "example" : "A, MX, CNAME, TXT, SRV, PTR, AAAA, NS, CAA, PROCEED_MUC, TLSA, NAPTR, SSHFP, LOC, RP, HINFO, PROCEED, ALIAS, DNSKEY, NSEC, DS",
          "description" : "The type of the record, e.g. A"
        },
        "value" : {
          "type" : "string",
          "description" : "The value of the record."
        },
        "pref" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Preference of the record, need for some record types e.g. MX",
          "maximum" : 65535
        }
      }
    },
    "ResponseObject" : {
      "type" : "object",
      "properties" : {
        "type" : {
          "type" : "string",
          "description" : "The type of the object."
        },
        "value" : {
          "type" : "string",
          "description" : "The primary key of the object."
        },
        "summary" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The amound of objects found in list tasks."
        },
        "data" : {
          "type" : "object",
          "description" : "The value of the object."
        }
      }
    },
    "ResponseStatus" : {
      "type" : "object",
      "properties" : {
        "code" : {
          "type" : "string",
          "description" : "The result code of the response"
        },
        "text" : {
          "type" : "string",
          "description" : "The text representation of the result code."
        },
        "type" : {
          "description" : "The status of the response.",
          "originalRef" : "StatusType",
          "$ref" : "#/definitions/StatusType"
        }
      }
    },
    "RoPersonTypeConstants" : {
      "type" : "string",
      "enum" : [ "P", "AP", "NC", "C", "GI", "PI", "O" ]
    },
    "SEPAMandate" : {
      "type" : "object",
      "required" : [ "confirmChecked", "confirmIp", "confirmSignature" ],
      "properties" : {
        "created" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The created date."
        },
        "updated" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The updated date."
        },
        "reference" : {
          "type" : "string",
          "description" : "The sepa mandate reference"
        },
        "confirmSignature" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The date of the confirm signature"
        },
        "confirmIp" : {
          "description" : "The address of the confirm signature",
          "originalRef" : "InetAddress",
          "$ref" : "#/definitions/InetAddress"
        },
        "confirmUseragent" : {
          "type" : "string",
          "description" : "The user agent of the confirm signature"
        },
        "confirmChecked" : {
          "type" : "boolean",
          "description" : "Flag for indicating if the confirm data has been checked"
        },
        "expire" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date after the mandate will be expired"
        },
        "histories" : {
          "type" : "array",
          "description" : "A list of historized sepa mandates",
          "items" : {
            "originalRef" : "SEPAMandate",
            "$ref" : "#/definitions/SEPAMandate"
          }
        },
        "accountHolder" : {
          "type" : "string",
          "description" : "The holder of the bank account"
        },
        "iban" : {
          "type" : "string",
          "description" : "The bank iban"
        },
        "bic" : {
          "type" : "string",
          "description" : "The bank bic"
        }
      }
    },
    "ServerSoftwareTypeConstants" : {
      "type" : "string",
      "enum" : [ "IIS4", "IIS5", "APACHE2", "APACHESSL", "PLESK", "TOMCAT", "NOT_SET" ]
    },
    "ServiceEntity" : {
      "type" : "object",
      "required" : [ "label" ],
      "properties" : {
        "created" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The created date."
        },
        "updated" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The updated date."
        },
        "label" : {
          "type" : "string",
          "description" : "Lorem Ipum"
        }
      }
    },
    "SignatureHashAlgorithmConstants" : {
      "type" : "string",
      "enum" : [ "SHA1", "SHA2", "SHA2_FULL_CHAIN", "UNKNOWN", "SHA384", "SHA512", "SHA256" ]
    },
    "SimplePrice" : {
      "type" : "object",
      "properties" : {
        "price" : {
          "description" : "The price",
          "originalRef" : "ExchangedPrice",
          "$ref" : "#/definitions/ExchangedPrice"
        },
        "businessCase" : {
          "type" : "string",
          "description" : "The business case"
        },
        "period" : {
          "description" : "The period for the price",
          "originalRef" : "TimePeriod",
          "$ref" : "#/definitions/TimePeriod"
        }
      }
    },
    "Soa" : {
      "type" : "object",
      "required" : [ "email" ],
      "properties" : {
        "refresh" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The seconds after the secondary should refresh the zone data"
        },
        "retry" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The seconds after the secondary should retry the zone data after the refresh has been timeouts"
        },
        "expire" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The seconds after the zone data will not be delievered, if the zone could not be reached on the master."
        },
        "ttl" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Lorem Ipsum"
        },
        "email" : {
          "type" : "string",
          "description" : "The email address of the responsible of the zone"
        }
      }
    },
    "SpamPolicy" : {
      "type" : "object",
      "properties" : {
        "modifySubject" : {
          "type" : "boolean"
        },
        "tagHeader" : {
          "type" : "number",
          "format" : "double",
          "minimum" : -999.9,
          "maximum" : 999.9
        },
        "spam" : {
          "type" : "number",
          "format" : "double",
          "minimum" : -999.9,
          "maximum" : 999.9
        },
        "kill" : {
          "type" : "number",
          "format" : "double",
          "minimum" : -999.9,
          "maximum" : 999.9
        },
        "quarantineDigestInterval" : {
          "type" : "integer",
          "format" : "int32",
          "minimum" : 1440
        }
      }
    },
    "SslContact" : {
      "type" : "object",
      "required" : [ "email", "id", "organization", "phone", "title" ],
      "properties" : {
        "created" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The created date."
        },
        "updated" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The updated date."
        },
        "fname" : {
          "type" : "string",
          "example" : "John",
          "description" : "The first name of the contact"
        },
        "lname" : {
          "type" : "string",
          "example" : "Doe",
          "description" : "The last name of the contact"
        },
        "phone" : {
          "type" : "string",
          "example" : "+49-123-12345",
          "description" : "The phone number of the contact",
          "x-custom-type" : "phone"
        },
        "fax" : {
          "type" : "string",
          "example" : "+49-123-12345",
          "description" : "The fax number of the contact",
          "x-custom-type" : "phone"
        },
        "email" : {
          "type" : "string",
          "example" : "john.doe@domain.com",
          "description" : "The email of the contact",
          "x-custom-type" : "email"
        },
        "title" : {
          "type" : "string",
          "example" : "Dr.",
          "description" : "The title of the contact"
        },
        "organization" : {
          "type" : "string",
          "example" : "Company",
          "description" : "The name of the organization"
        },
        "address" : {
          "type" : "array",
          "description" : "The address of the contact.",
          "items" : {
            "type" : "string"
          }
        },
        "pcode" : {
          "type" : "string",
          "example" : "12345",
          "description" : "The pcode of the contact",
          "x-custom-type" : "pcode"
        },
        "city" : {
          "type" : "string",
          "example" : "Anytown",
          "description" : "The city of the contact"
        },
        "country" : {
          "type" : "string",
          "example" : "DE",
          "description" : "The country of the contact",
          "x-custom-type" : "country"
        },
        "state" : {
          "type" : "string",
          "example" : "BY",
          "description" : "The local country state of the contact",
          "x-custom-type" : "state"
        },
        "owner" : {
          "description" : "The owner of the object",
          "originalRef" : "BasicUser",
          "$ref" : "#/definitions/BasicUser"
        },
        "updater" : {
          "description" : "The updating using of the object",
          "originalRef" : "BasicUser",
          "$ref" : "#/definitions/BasicUser"
        },
        "id" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Unique identifier of the object"
        }
      }
    },
    "StatusType" : {
      "type" : "string",
      "enum" : [ "SUCCESS", "ERROR", "NOTIFY", "NOTICE", "NICCOM_NOTIFY" ]
    },
    "SubjectAlternativeName" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "The name of the san."
        },
        "approverEmail" : {
          "type" : "string",
          "description" : "The approver email of the san."
        },
        "orderId" : {
          "type" : "string",
          "description" : "The order id of the san."
        }
      }
    },
    "Subscription" : {
      "type" : "object",
      "properties" : {
        "created" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The created date."
        },
        "updated" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The updated date."
        },
        "owner" : {
          "description" : "The owner of the object.",
          "originalRef" : "BasicUser",
          "$ref" : "#/definitions/BasicUser"
        },
        "updater" : {
          "description" : "The updating user of the object.",
          "originalRef" : "BasicUser",
          "$ref" : "#/definitions/BasicUser"
        },
        "status" : {
          "description" : "The actual status of the entry, active means ok.",
          "originalRef" : "BillingStatus",
          "$ref" : "#/definitions/BillingStatus"
        },
        "object" : {
          "type" : "string",
          "description" : "The name of the subscription, e.g. the contract number"
        },
        "description" : {
          "type" : "string",
          "description" : "The human readable name of the subscription, e.g. the name of a package"
        },
        "period" : {
          "description" : "The period used by the subscription, e.g. 1 month",
          "originalRef" : "TimePeriod",
          "$ref" : "#/definitions/TimePeriod"
        },
        "articleTypeLabel" : {
          "type" : "string",
          "description" : "The article type label of the subscription, e.g. domain"
        },
        "articleLabel" : {
          "type" : "string",
          "description" : "The article label of the subscription, e.g. backup_mx"
        },
        "item" : {
          "type" : "array",
          "description" : "The items of the subscription",
          "items" : {
            "originalRef" : "PeriodicBilling",
            "$ref" : "#/definitions/PeriodicBilling"
          }
        },
        "limits" : {
          "type" : "array",
          "description" : "The limits of the package.",
          "items" : {
            "originalRef" : "BillingObjectLimit",
            "$ref" : "#/definitions/BillingObjectLimit"
          }
        },
        "acls" : {
          "type" : "array",
          "description" : "The acls of the package",
          "items" : {
            "originalRef" : "UserAcl",
            "$ref" : "#/definitions/UserAcl"
          }
        },
        "variant" : {
          "type" : "string",
          "description" : "The name variant, e.g nodesecure"
        },
        "businessCase" : {
          "type" : "string",
          "description" : "The businessCase of the subscription, e.g. create"
        }
      }
    },
    "TimePeriod" : {
      "type" : "object",
      "properties" : {
        "unit" : {
          "example" : "YEAR",
          "description" : "The unit of the period",
          "originalRef" : "TimeUnitConstants",
          "$ref" : "#/definitions/TimeUnitConstants"
        },
        "period" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 1,
          "description" : "The period value"
        }
      }
    },
    "TimeUnitConstants" : {
      "type" : "string",
      "enum" : [ "MILLISECOND", "SECOND", "MINUTE", "HOUR", "DAY", "WEEK", "MONTH", "QUARTER", "YEAR" ]
    },
    "Transfer" : {
      "type" : "object",
      "required" : [ "domain" ],
      "properties" : {
        "created" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The created date."
        },
        "updated" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The updated date."
        },
        "owner" : {
          "description" : "The owner of the object.",
          "originalRef" : "BasicUser",
          "$ref" : "#/definitions/BasicUser"
        },
        "updater" : {
          "description" : "The updating user of the object.",
          "originalRef" : "BasicUser",
          "$ref" : "#/definitions/BasicUser"
        },
        "domain" : {
          "type" : "string",
          "description" : "The domain name."
        },
        "gainingRegistrar" : {
          "type" : "string",
          "description" : "The gaining registrar."
        },
        "loosingRegistrar" : {
          "type" : "string",
          "description" : "The loosing registrar."
        },
        "start" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The start date."
        },
        "reminder" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The reminder date."
        },
        "autoAck" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The auto ack date."
        },
        "autoNack" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The auto nack date."
        },
        "end" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The end date."
        },
        "autoAnswer" : {
          "type" : "boolean",
          "description" : "Autoanswer active."
        },
        "recipient" : {
          "type" : "string",
          "description" : "The recipient."
        },
        "mailserver" : {
          "type" : "string",
          "description" : "The mailserver."
        },
        "deliveredMailserver" : {
          "type" : "string",
          "description" : "The delivered mailserver."
        },
        "delivered" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The delivered date."
        },
        "status" : {
          "description" : "The transfer status.",
          "originalRef" : "TransferStatusConstants",
          "$ref" : "#/definitions/TransferStatusConstants"
        }
      }
    },
    "TransferAnswer" : {
      "type" : "string",
      "enum" : [ "TRANSFER_OUT_ACK", "TRANSFER_OUT_NACK" ]
    },
    "TransferOut" : {
      "type" : "object",
      "required" : [ "domain", "type" ],
      "properties" : {
        "created" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The created date."
        },
        "updated" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The updated date."
        },
        "owner" : {
          "description" : "The owner of the object.",
          "originalRef" : "BasicUser",
          "$ref" : "#/definitions/BasicUser"
        },
        "updater" : {
          "description" : "The updating user of the object.",
          "originalRef" : "BasicUser",
          "$ref" : "#/definitions/BasicUser"
        },
        "domain" : {
          "type" : "string",
          "description" : "The domain name."
        },
        "gainingRegistrar" : {
          "type" : "string",
          "description" : "The gaining registrar."
        },
        "loosingRegistrar" : {
          "type" : "string",
          "description" : "The loosing registrar."
        },
        "start" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The start date."
        },
        "reminder" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The reminder date."
        },
        "autoAck" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The auto ack date."
        },
        "autoNack" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The auto nack date."
        },
        "end" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The end date."
        },
        "autoAnswer" : {
          "type" : "boolean",
          "description" : "Autoanswer active."
        },
        "recipient" : {
          "type" : "string",
          "description" : "The recipient."
        },
        "mailserver" : {
          "type" : "string",
          "description" : "The mailserver."
        },
        "deliveredMailserver" : {
          "type" : "string",
          "description" : "The delivered mailserver."
        },
        "delivered" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The delivered date."
        },
        "transaction" : {
          "type" : "string",
          "description" : "The ctid."
        },
        "type" : {
          "description" : "The type of the transfer.",
          "originalRef" : "TransferAnswer",
          "$ref" : "#/definitions/TransferAnswer"
        },
        "nackReason" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The reason."
        }
      }
    },
    "TransferStatusConstants" : {
      "type" : "string",
      "enum" : [ "NOT_SET", "START", "FAILED", "NACK", "ACK", "FOA1_SENT", "AUTOUPDATE_SUCCESS", "AUTOUPDATE_FAILED" ]
    },
    "TrustedApplication" : {
      "type" : "object",
      "required" : [ "application", "uuid" ],
      "properties" : {
        "created" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The created date."
        },
        "updated" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The updated date."
        },
        "owner" : {
          "description" : "The owner of the object.",
          "originalRef" : "BasicUser",
          "$ref" : "#/definitions/BasicUser"
        },
        "updater" : {
          "description" : "The updating user of the object.",
          "originalRef" : "BasicUser",
          "$ref" : "#/definitions/BasicUser"
        },
        "user" : {
          "description" : "The user the trusted application belongs to.",
          "originalRef" : "BasicUser",
          "$ref" : "#/definitions/BasicUser"
        },
        "uuid" : {
          "type" : "string",
          "example" : "cb3e0fa4-2404-1ad",
          "description" : "The unique identifier for the trusted application."
        },
        "password" : {
          "type" : "string",
          "description" : "The password for the trusted application."
        },
        "application" : {
          "description" : "The kind of application.",
          "originalRef" : "Application",
          "$ref" : "#/definitions/Application"
        },
        "functions" : {
          "description" : "The wrapper of the allowed functions for the trusted application.",
          "originalRef" : "TrustedApplicationFunctions",
          "$ref" : "#/definitions/TrustedApplicationFunctions"
        },
        "restrictions" : {
          "description" : "The wrapper of the ip restrictions for the trusted application.",
          "originalRef" : "IpRestrictions",
          "$ref" : "#/definitions/IpRestrictions"
        },
        "device" : {
          "type" : "string",
          "description" : "The device, which uses the trusted app."
        },
        "comment" : {
          "type" : "string",
          "description" : "A comment for the trusted application."
        }
      }
    },
    "TrustedApplicationFunctions" : {
      "type" : "object",
      "properties" : {
        "functionCodes" : {
          "type" : "array",
          "description" : "The allowed functions for the trusted application.",
          "uniqueItems" : true,
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "UkTypeConstants" : {
      "type" : "string",
      "enum" : [ "LTD", "PLC", "PTNR", "STRA", "LLP", "IP", "IND", "SCH", "RCHAR", "GOV", "CRC", "STAT", "OTHER", "FIND", "FCORP", "FOTHER" ]
    },
    "UrlEntity" : {
      "type" : "object"
    },
    "User" : {
      "type" : "object",
      "required" : [ "context", "user" ],
      "properties" : {
        "created" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The user created date."
        },
        "updated" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The user updated date."
        },
        "context" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The context."
        },
        "password" : {
          "type" : "string",
          "description" : "The password."
        },
        "defaultEmail" : {
          "type" : "string",
          "description" : "The default email."
        },
        "status" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The status."
        },
        "substatus" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The substatus."
        },
        "authType" : {
          "description" : "The users authorization method.",
          "originalRef" : "AuthType",
          "$ref" : "#/definitions/AuthType"
        },
        "details" : {
          "description" : "The user details.",
          "originalRef" : "UserDetails",
          "$ref" : "#/definitions/UserDetails"
        },
        "lock" : {
          "description" : "The lock status of the user.",
          "originalRef" : "UserLock",
          "$ref" : "#/definitions/UserLock"
        },
        "acls" : {
          "description" : "Wrapper for the user acls.",
          "originalRef" : "UserAcls",
          "$ref" : "#/definitions/UserAcls"
        },
        "profiles" : {
          "description" : "Wrapper for the user profiles.",
          "originalRef" : "UserProfileViews",
          "$ref" : "#/definitions/UserProfileViews"
        },
        "ancestors" : {
          "type" : "array",
          "description" : "The ancestors of the user.",
          "items" : {
            "originalRef" : "BasicUser",
            "$ref" : "#/definitions/BasicUser"
          }
        },
        "customer" : {
          "description" : "The customer belonging to the user.",
          "originalRef" : "BasicCustomer",
          "$ref" : "#/definitions/BasicCustomer"
        },
        "nameServerGroups" : {
          "type" : "array",
          "description" : "The available name server groups",
          "items" : {
            "originalRef" : "VirtualNameServerGroup",
            "$ref" : "#/definitions/VirtualNameServerGroup"
          }
        },
        "subscriptions" : {
          "type" : "array",
          "description" : "Wrapper for the subscriptions.",
          "items" : {
            "originalRef" : "Subscription",
            "$ref" : "#/definitions/Subscription"
          }
        },
        "applications" : {
          "type" : "array",
          "description" : "Holds the used applications.",
          "items" : {
            "originalRef" : "TrustedApplication",
            "$ref" : "#/definitions/TrustedApplication"
          }
        },
        "user" : {
          "type" : "string",
          "description" : "The user name.",
          "pattern" : "^[^_].*"
        },
        "language" : {
          "type" : "string",
          "description" : "The language."
        },
        "parent" : {
          "description" : "The parent.",
          "originalRef" : "User",
          "$ref" : "#/definitions/User"
        }
      }
    },
    "UserAcl" : {
      "type" : "object",
      "properties" : {
        "functionCode" : {
          "type" : "string",
          "description" : "The function code to restrict"
        },
        "children" : {
          "type" : "array",
          "description" : "The none locked children",
          "uniqueItems" : true,
          "items" : {
            "originalRef" : "BasicUser",
            "$ref" : "#/definitions/BasicUser"
          }
        },
        "childrenLocked" : {
          "type" : "boolean",
          "description" : "The children lock"
        },
        "userLocked" : {
          "type" : "boolean",
          "description" : "The user lock"
        },
        "effective" : {
          "type" : "boolean",
          "description" : "The current active lock for the user"
        },
        "childrenRem" : {
          "type" : "array",
          "description" : "Children to remove from the exception list",
          "items" : {
            "originalRef" : "BasicUser",
            "$ref" : "#/definitions/BasicUser"
          }
        },
        "childrenAdd" : {
          "type" : "array",
          "description" : "Children to add to the exception list",
          "items" : {
            "originalRef" : "BasicUser",
            "$ref" : "#/definitions/BasicUser"
          }
        },
        "restriction" : {
          "description" : "The human readable restriction mode",
          "originalRef" : "ACLRestriction",
          "$ref" : "#/definitions/ACLRestriction"
        }
      }
    },
    "UserAcls" : {
      "type" : "object",
      "required" : [ "user" ],
      "properties" : {
        "user" : {
          "description" : "The user which has been effected",
          "originalRef" : "BasicUser",
          "$ref" : "#/definitions/BasicUser"
        },
        "acls" : {
          "type" : "array",
          "description" : "The acls of the user.",
          "items" : {
            "originalRef" : "UserAcl",
            "$ref" : "#/definitions/UserAcl"
          },
          "maxItems" : 2147483647,
          "minItems" : 1
        }
      }
    },
    "UserDetails" : {
      "type" : "object",
      "properties" : {
        "organization" : {
          "type" : "string",
          "description" : "The organization."
        },
        "passwordResetMobile" : {
          "type" : "string",
          "example" : "+49-123-12345",
          "description" : "The mobile phone number.",
          "x-custom-type" : "phone"
        },
        "passwordResetVerifyEmail" : {
          "type" : "string",
          "description" : "The email address for the verification of the password reset process."
        },
        "passwordResetEmail" : {
          "type" : "string",
          "description" : "The email address for the password reset tan."
        },
        "fname" : {
          "type" : "string",
          "description" : "The first name."
        },
        "lname" : {
          "type" : "string",
          "description" : "The last name."
        }
      }
    },
    "UserLock" : {
      "type" : "string",
      "enum" : [ "NONE", "CUSTOMER", "EXPIRED", "USER" ]
    },
    "UserProfile" : {
      "type" : "object",
      "required" : [ "flag", "key", "value" ],
      "properties" : {
        "flag" : {
          "example" : "FIX",
          "description" : "The mode of the entry",
          "originalRef" : "UserProfileFlag",
          "$ref" : "#/definitions/UserProfileFlag"
        },
        "key" : {
          "type" : "string",
          "example" : "techc",
          "description" : "The  user profile key"
        },
        "value" : {
          "type" : "string",
          "example" : "12345",
          "description" : "The value of the key"
        },
        "readonly" : {
          "type" : "boolean",
          "description" : "The read only entry"
        }
      }
    },
    "UserProfileFlag" : {
      "type" : "string",
      "enum" : [ "OPTIONAL", "FIX", "RECURSE", "HIDDEN", "PARENT_FIX" ]
    },
    "UserProfileViews" : {
      "type" : "object",
      "properties" : {
        "profiles" : {
          "type" : "array",
          "items" : {
            "originalRef" : "UserProfile",
            "$ref" : "#/definitions/UserProfile"
          }
        }
      }
    },
    "VhostCertificate" : {
      "type" : "object",
      "properties" : {
        "created" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The created date."
        },
        "updated" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The updated date."
        },
        "owner" : {
          "description" : "The owner of the object.",
          "originalRef" : "BasicUser",
          "$ref" : "#/definitions/BasicUser"
        },
        "updater" : {
          "description" : "The updater of the object.",
          "originalRef" : "BasicUser",
          "$ref" : "#/definitions/BasicUser"
        }
      }
    },
    "VirtualNameServer" : {
      "type" : "object",
      "properties" : {
        "created" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The created date."
        },
        "updated" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The updated date."
        },
        "owner" : {
          "description" : "The owner of the object.",
          "originalRef" : "BasicUser",
          "$ref" : "#/definitions/BasicUser"
        },
        "updater" : {
          "description" : "The updater of the object.",
          "originalRef" : "BasicUser",
          "$ref" : "#/definitions/BasicUser"
        },
        "active" : {
          "type" : "boolean",
          "description" : "Flag to show if the nameserver is active"
        },
        "name" : {
          "description" : "Host name of the nameserver.",
          "originalRef" : "Name",
          "$ref" : "#/definitions/Name"
        },
        "mainAddress" : {
          "description" : "The mainAddress",
          "originalRef" : "InetAddress",
          "$ref" : "#/definitions/InetAddress"
        },
        "ipAddresses" : {
          "type" : "array",
          "description" : "The ip addresses.",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "VirtualNameServerGroup" : {
      "type" : "object",
      "required" : [ "systemNameServerGroup" ],
      "properties" : {
        "created" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The created date."
        },
        "updated" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The updated date."
        },
        "owner" : {
          "description" : "The owner of the object.",
          "originalRef" : "BasicUser",
          "$ref" : "#/definitions/BasicUser"
        },
        "updater" : {
          "description" : "The updating user of the object.",
          "originalRef" : "BasicUser",
          "$ref" : "#/definitions/BasicUser"
        },
        "name" : {
          "type" : "string",
          "description" : "The custom label for the group"
        },
        "useDefaultIps" : {
          "type" : "boolean",
          "description" : "The useDefaultIps"
        },
        "nameServers" : {
          "type" : "array",
          "description" : "The name servers of the group.",
          "items" : {
            "originalRef" : "VirtualNameServer",
            "$ref" : "#/definitions/VirtualNameServer"
          }
        },
        "systemNameServerGroup" : {
          "description" : "The custom label for the group",
          "originalRef" : "PhysicalNameServerGroup",
          "$ref" : "#/definitions/PhysicalNameServerGroup"
        }
      }
    },
    "Void" : {
      "type" : "object"
    },
    "WhoisServiceData" : {
      "type" : "object",
      "properties" : {
        "debugTime" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The debug time"
        },
        "status" : {
          "description" : "The status",
          "originalRef" : "DomainStudioServiceStatus",
          "$ref" : "#/definitions/DomainStudioServiceStatus"
        },
        "message" : {
          "type" : "string",
          "description" : "A message with more information, if the status is FAILED."
        },
        "data" : {
          "description" : "The service data",
          "originalRef" : "WhoisStatus",
          "$ref" : "#/definitions/WhoisStatus"
        }
      }
    },
    "WhoisStatus" : {
      "type" : "object",
      "properties" : {
        "status" : {
          "description" : "The whois status",
          "originalRef" : "DomainStudioDomainStatus",
          "$ref" : "#/definitions/DomainStudioDomainStatus"
        }
      }
    },
    "WorkflowEvent" : {
      "type" : "object",
      "properties" : {
        "vertex" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Lorem Ipsum"
        },
        "type" : {
          "type" : "string",
          "description" : "Lorem Ipsum"
        }
      }
    },
    "WorkflowSpool" : {
      "type" : "object",
      "properties" : {
        "created" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The created date."
        },
        "updated" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The updated date."
        },
        "owner" : {
          "description" : "The owner of the object.",
          "originalRef" : "BasicUser",
          "$ref" : "#/definitions/BasicUser"
        },
        "updater" : {
          "description" : "The updater of the object.",
          "originalRef" : "BasicUser",
          "$ref" : "#/definitions/BasicUser"
        },
        "status" : {
          "description" : "The status of the job.",
          "originalRef" : "JobStatusConstants",
          "$ref" : "#/definitions/JobStatusConstants"
        },
        "subStatus" : {
          "type" : "string",
          "description" : "The substatus of the job."
        },
        "execution" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The next execution date of the job."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The job id."
        }
      }
    },
    "Zone" : {
      "type" : "object",
      "required" : [ "origin" ],
      "properties" : {
        "created" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The created date."
        },
        "updated" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The updated date."
        },
        "origin" : {
          "type" : "string",
          "description" : "Zone name"
        },
        "idn" : {
          "type" : "string",
          "description" : "The idn version of the origin."
        },
        "soa" : {
          "description" : "Only for ns_action: \"primary\"  and \"complete\"",
          "originalRef" : "Soa",
          "$ref" : "#/definitions/Soa"
        },
        "dnssec" : {
          "type" : "boolean",
          "description" : "Enables dnssec"
        },
        "nameServerGroup" : {
          "type" : "string",
          "description" : "The name of the name server group, if the zone is managed by"
        },
        "allowTransfer" : {
          "type" : "boolean",
          "description" : "Allow AXFR"
        },
        "owner" : {
          "description" : "The owner of the object",
          "originalRef" : "BasicUser",
          "$ref" : "#/definitions/BasicUser"
        },
        "updater" : {
          "description" : "The updating user of the object",
          "originalRef" : "BasicUser",
          "$ref" : "#/definitions/BasicUser"
        },
        "logId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The id of the related log-entry."
        },
        "comment" : {
          "type" : "string",
          "description" : "A custom field. Can only be updated via PUT /zone/{name}/{nameserver}/_comment. Requires appropriate ACLs."
        },
        "domainsafe" : {
          "type" : "boolean",
          "description" : "true if the domain is represented in the domain safe"
        },
        "source" : {
          "type" : "string",
          "description" : "Nameserver, the zone is copied from via AXFR (for zone_import)"
        },
        "sourceVirtualHostname" : {
          "type" : "string",
          "description" : "System name server to look up the zone to copy"
        },
        "nameServers" : {
          "type" : "array",
          "description" : "List of name servers",
          "items" : {
            "originalRef" : "NameServer",
            "$ref" : "#/definitions/NameServer"
          }
        },
        "main" : {
          "description" : "IP address of the zone (A record)",
          "originalRef" : "MainIp",
          "$ref" : "#/definitions/MainIp"
        },
        "wwwInclude" : {
          "type" : "boolean",
          "description" : "Automatic generation of resource records \"www\""
        },
        "virtualNameServer" : {
          "type" : "string",
          "description" : "The first nameserver managed by the system"
        },
        "freeText" : {
          "type" : "array",
          "description" : "The free text records.",
          "items" : {
            "type" : "string"
          }
        },
        "action" : {
          "description" : "Additional nameserver check is proceeded",
          "originalRef" : "NameserverActionConstants",
          "$ref" : "#/definitions/NameserverActionConstants"
        },
        "grants" : {
          "type" : "array",
          "description" : "The grants where transfer (axfr) can be done from.",
          "items" : {
            "type" : "string"
          }
        },
        "resourceRecords" : {
          "type" : "array",
          "description" : "The resource records.",
          "items" : {
            "originalRef" : "ResourceRecord",
            "$ref" : "#/definitions/ResourceRecord"
          },
          "maxItems" : 10000,
          "minItems" : 0
        },
        "roid" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1,
          "description" : "The resource object identifier of the zone"
        }
      }
    },
    "ZoneBasePatchRequest" : {
      "type" : "object",
      "required" : [ "origin" ],
      "properties" : {
        "created" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The created date."
        },
        "updated" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The updated date."
        },
        "origin" : {
          "type" : "string",
          "description" : "Zone name"
        },
        "idn" : {
          "type" : "string",
          "description" : "The idn version of the origin."
        },
        "soa" : {
          "description" : "Only for ns_action: \"primary\"  and \"complete\"",
          "originalRef" : "Soa",
          "$ref" : "#/definitions/Soa"
        },
        "dnssec" : {
          "type" : "boolean",
          "description" : "Enables dnssec"
        },
        "nameServerGroup" : {
          "type" : "string",
          "description" : "The name of the name server group, if the zone is managed by"
        },
        "allowTransfer" : {
          "type" : "boolean",
          "description" : "Allow AXFR"
        },
        "owner" : {
          "description" : "The owner of the object",
          "originalRef" : "BasicUser",
          "$ref" : "#/definitions/BasicUser"
        },
        "updater" : {
          "description" : "The updating user of the object",
          "originalRef" : "BasicUser",
          "$ref" : "#/definitions/BasicUser"
        },
        "logId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The id of the related log-entry."
        },
        "comment" : {
          "type" : "string",
          "description" : "A custom field. Can only be updated via PUT /zone/{name}/{nameserver}/_comment. Requires appropriate ACLs."
        },
        "domainsafe" : {
          "type" : "boolean",
          "description" : "true if the domain is represented in the domain safe"
        },
        "source" : {
          "type" : "string",
          "description" : "Nameserver, the zone is copied from via AXFR (for zone_import)"
        },
        "sourceVirtualHostname" : {
          "type" : "string",
          "description" : "System name server to look up the zone to copy"
        },
        "zoneGrantsAdd" : {
          "type" : "array",
          "description" : "Adds new zone garnts to the zone",
          "items" : {
            "type" : "string"
          }
        },
        "zoneGrantsRem" : {
          "type" : "array",
          "description" : "Removes the zone garnts if exists.",
          "items" : {
            "type" : "string"
          }
        },
        "nameServers" : {
          "type" : "array",
          "description" : "List of name servers",
          "items" : {
            "originalRef" : "NameServer",
            "$ref" : "#/definitions/NameServer"
          }
        },
        "main" : {
          "description" : "IP address of the zone (A record)",
          "originalRef" : "MainIp",
          "$ref" : "#/definitions/MainIp"
        },
        "wwwInclude" : {
          "type" : "boolean",
          "description" : "Automatic generation of resource records \"www\""
        },
        "virtualNameServer" : {
          "type" : "string",
          "description" : "The first nameserver managed by the system"
        },
        "freeText" : {
          "type" : "array",
          "description" : "The free text records.",
          "items" : {
            "type" : "string"
          }
        },
        "action" : {
          "description" : "Additional nameserver check is proceeded",
          "originalRef" : "NameserverActionConstants",
          "$ref" : "#/definitions/NameserverActionConstants"
        },
        "grants" : {
          "type" : "array",
          "description" : "The grants where transfer (axfr) can be done from.",
          "items" : {
            "type" : "string"
          }
        },
        "resourceRecords" : {
          "type" : "array",
          "description" : "The resource records.",
          "items" : {
            "originalRef" : "ResourceRecord",
            "$ref" : "#/definitions/ResourceRecord"
          },
          "maxItems" : 10000,
          "minItems" : 0
        },
        "roid" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1,
          "description" : "The resource object identifier of the zone"
        },
        "resourceRecordsAdd" : {
          "type" : "array",
          "description" : "Adds new zone records to the extistings",
          "items" : {
            "originalRef" : "ResourceRecord",
            "$ref" : "#/definitions/ResourceRecord"
          }
        },
        "resourceRecordsRem" : {
          "type" : "array",
          "description" : "Removes the zone records if exists.",
          "items" : {
            "originalRef" : "ResourceRecord",
            "$ref" : "#/definitions/ResourceRecord"
          }
        }
      }
    },
    "ZoneStream" : {
      "type" : "object",
      "properties" : {
        "adds" : {
          "type" : "array",
          "description" : "the records to add.",
          "items" : {
            "originalRef" : "ResourceRecord",
            "$ref" : "#/definitions/ResourceRecord"
          }
        },
        "rems" : {
          "type" : "array",
          "description" : "the records to remove.",
          "items" : {
            "originalRef" : "ResourceRecord",
            "$ref" : "#/definitions/ResourceRecord"
          }
        }
      }
    },
    "address_claim" : {
      "type" : "object",
      "properties" : {
        "formatted" : {
          "type" : "string",
          "description" : "Full mailing address, formatted for display or use on a mailing label. This field MAY contain multiple lines, separated by newlines. Newlines can be represented either as a carriage return/line feed pair (\"\\r\\n\") or as a single line feed character (\"\\n\")"
        },
        "street_address" : {
          "type" : "string",
          "description" : "Full street address component, which MAY include house number, street name, Post Office Box, and multi-line extended street address information. This field MAY contain multiple lines, separated by newlines. Newlines can be represented either as a carriage return/line feed pair (\"\\r\\n\") or as a single line feed character (\"\\n\")"
        },
        "locality" : {
          "type" : "string",
          "description" : "City or locality component"
        },
        "region" : {
          "type" : "string",
          "description" : "State, province, prefecture, or region component"
        },
        "postal_code" : {
          "type" : "string",
          "description" : "Zip code or postal code component"
        },
        "country" : {
          "type" : "string",
          "description" : "Country name component"
        }
      }
    },
    "claims" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "End-User's full name in displayable form including all name parts, possibly including titles and suffixes, ordered according to the End-User's locale and preferences."
        },
        "given_name" : {
          "type" : "string",
          "description" : "Given name(s) or first name(s) of the End-User. Note that in some cultures, people can have multiple given names; all can be present, with the names being separated by space characters."
        },
        "family_name" : {
          "type" : "string",
          "description" : "Surname(s) or last name(s) of the End-User. Note that in some cultures, people can have multiple family names or no family name; all can be present, with the names being separated by space characters"
        },
        "middle_name" : {
          "type" : "string",
          "description" : "Middle name(s) of the End-User. Note that in some cultures, people can have multiple middle names; all can be present, with the names being separated by space characters. Also note that in some cultures, middle names are not used."
        },
        "nickname" : {
          "type" : "string",
          "description" : "Casual name of the End-User that may or may not be the same as the given_name. For instance, a nickname value of Mike might be returned alongside a given_name value of Michael."
        },
        "preferred_username" : {
          "type" : "string",
          "description" : "Shorthand name by which the End-User wishes to be referred to at the RP, such as janedoe or j.doe. This value MAY be any valid JSON string including special characters such as @, /, or whitespace"
        },
        "profile" : {
          "description" : "URL of the End-User's profile page. The contents of this Web page SHOULD be about the End-User.",
          "originalRef" : "UrlEntity",
          "$ref" : "#/definitions/UrlEntity"
        },
        "picture" : {
          "description" : "URL of the End-User's profile picture.",
          "originalRef" : "UrlEntity",
          "$ref" : "#/definitions/UrlEntity"
        },
        "website" : {
          "description" : "URL of the End-User's Web page or blog. This Web page SHOULD contain information published by the End-User or an organization that the End-User is affiliated with.",
          "originalRef" : "UrlEntity",
          "$ref" : "#/definitions/UrlEntity"
        },
        "email" : {
          "type" : "string",
          "example" : "john.doe@domain.com",
          "description" : "End-user's preferred email address"
        },
        "email_verified" : {
          "type" : "boolean",
          "description" : "True if the End-User's e-mail address has been verified; otherwise false."
        },
        "gender" : {
          "description" : "URL of the End-User's profile picture.",
          "originalRef" : "GenderConstants",
          "$ref" : "#/definitions/GenderConstants"
        },
        "birthdate" : {
          "type" : "string",
          "format" : "date-time",
          "example" : "2019-12-30",
          "description" : "End-user's birth date, ISO 8601:2004 (YYYY-MM-DD)"
        },
        "zoneinfo" : {
          "type" : "string",
          "description" : "End-User's zoneinfo."
        },
        "locale" : {
          "type" : "string",
          "description" : "The locale."
        },
        "phone_number" : {
          "description" : "End-User's preferred telephone number. E.164 [E.164] is RECOMMENDED as the format of this Claim, for example, +1 (425) 555-1212 or +56 (2) 687 2400. .",
          "originalRef" : "Phone",
          "$ref" : "#/definitions/Phone"
        },
        "phone_number_verified" : {
          "type" : "boolean",
          "description" : "True if the End-User's phne number has been verified; otherwise false."
        },
        "address" : {
          "description" : "End-user's address",
          "originalRef" : "address_claim",
          "$ref" : "#/definitions/address_claim"
        },
        "organization" : {
          "type" : "string",
          "description" : "End-user's organization"
        }
      }
    }
  }
}
